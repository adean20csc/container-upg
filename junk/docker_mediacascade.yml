---
#--------------------------------------------------
# This playbook will upgrade the Docker containers on the CAM hosts
# based on the variables set
#--------------------------------------------------

- name: Upgrade CAM host Docker Containers
  hosts: localhost
  gather_facts: true
 
  vars:
    - repo: docker-mediacascade
    - image: slmzsync
    - deployment_key: slm_mediacascade_ro_deployment_key_rsa
 
  tasks:
  
  - name: Ensure {{ repo }} git deployment key is in place
    copy:
      src: ./{{ deployment_key }}
      dest: /opt/csc/{{ deployment_key }}
      mode: 0600

  - name: Ensure {{ repo }} project is checked out
    git:
      repo: git@github.csc.com:Automation/{{ repo }}
      dest: /opt/csc/src/{{ repo }}
      force: yes
      key_file: /opt/csc/{{ deployment_key }}
      accept_hostkey: yes

  - name: Checkout the latest tagged version of {{ repo }}
    shell: "git checkout $(git describe --abbrev=0 --tags)"
    args:
      chdir: /opt/csc/src/{{ repo }}

  - name: Git the tagged version of "{{ repo }}"
    shell: git describe --tags
    args:
      chdir: /opt/csc/src/{{ repo }}
    register: git_tags

  - name: Show tagged version of "{{ repo }}"
    debug:
      var: git_tags

  - name: Get list of docker image tags present
    shell: docker images | grep "^{{ image }}" | awk '{print $2;}'
    register: current_tags

  - name: Show the current image tags
    debug:
      var: current_tags

  - name: Remove existing image (force rebuild)
    docker_image:
      name: "{{ image }}"
      tag: "{{ current_tags.stdout }}"
      state: absent
      force: yes
    when:
      - current_tags != ""
      - current_tags != git_tags

  - name: Ensure "{{ image }}" image is built
    docker_image:
      name: "{{ image }}"
      tag: "{{ git_tags.stdout }}"
      path: /opt/csc/src/{{ repo }}
      pull: False
    register: new_image
    until: new_image|success
    retries: 3
    delay: 30
    when:
      - current_tags != git_tags

  - name: Show new image
    debug:
      var: new_image
