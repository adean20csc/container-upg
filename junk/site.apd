---
#--------------------------------------------------
# This playbook will upgrade the Docker containers on the CAM hosts
# based on the variables set
#--------------------------------------------------

- name: Upgrade CAM host Docker Containers
  hosts: localhost
  gather_facts: true
  
  vars:
  - docker_images:
      - slmansible
      - slmio
      - slmpuppet
      - slmsamba
      - slmzsync

  - zip_dir: /depot
  - image: slmpuppet
  
  tasks:
  
    - name: Get image tag for {{ image }}
      shell: docker images | grep "^{{ image }}" | awk '{print $2;}'
# awk '{print $1 "-" $2;}'
      ignore_errors: true
      register: image_tag

    - name: Show the current image tag
      debug: 
        var: image_tag.stdout

    - name: Get image tag for new {{ image }} tar bzip file
      shell: ls /{{ zip_dir }} | grep '{{ image }}.*.tar.bz2'
#     shell: ls /{{ zip_dir }} | grep {{ image_tag.stdout }} | awk -F'[-.]' '{print $1 "-" $2 "." $3 "." $4}'
      register: tar_tag

    - name: Show the new {{ image }} tar bzip file  tag
      debug:
        var: tar_tag

    - name: Copy the new {{ image }} tar bzip file to /tmp
      copy:
        src: /{{ zip_dir }}/{{ tar_tag.stdout }}.tar.bz2
        dest: /tmp/
      when: image_tag != tar_tag

    - name: Stop the {{ image }} container
      shell: docker ps -f ancestor="{{ image }}":"{{ image_tag.stdout }}"
      when: image_tag != tar_tag
      register: container

    - debug:
#        msg: "{{ image }}:{{ image_tag.stdout }}"
        var: container 

#    - name: Remove the {{ image }} Docker Container
#      shell: docker ps -a | awk '{ print $1,$2 }' | grep {{ image }} | awk '{print $1 }' | xargs -I {} docker rm {} 
#      with_items: "{{ docker_images }}"
#      register: images

#    - debug:
#        var: images



  
#  - name: Remove existing image if versions dont match (force rebuild)
#    docker_image:
#      name: "slmzsync"
#      tag: "{{ current_imagetag }}"
#      state: absent
#      force: yes
#    when:
#      - current_imagetag != ""


