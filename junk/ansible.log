2017-08-06 05:30:27,298 p=72001 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:30:27,299 p=72001 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:30:27,310 p=72001 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 25, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    copy:
      src: "{{ item.key }}"_git_deployment_key
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:31:38,339 p=72010 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:31:38,340 p=72010 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:31:38,348 p=72010 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" == true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:31:54,370 p=72019 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:31:54,371 p=72019 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:31:54,380 p=72019 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 25, column 26, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    copy:
      src: {{ item.key }}_git_deployment_key
                         ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:32:21,988 p=72028 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:32:21,989 p=72028 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:32:21,998 p=72028 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" == true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:33:35,579 p=72037 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:33:35,580 p=72037 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:33:35,589 p=72037 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 25, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    copy:
      src: "{{ item.key }}"_git_deployment_key
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:35:54,281 p=72047 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:35:54,283 p=72047 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:35:54,291 p=72047 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" == true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:36:02,588 p=72055 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:36:02,589 p=72055 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:36:02,596 p=72055 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" == true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:36:32,308 p=72064 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:36:32,309 p=72064 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:36:32,316 p=72064 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" = true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:36:47,747 p=72073 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:36:47,748 p=72073 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:36:47,755 p=72073 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" is true
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:38:18,822 p=72082 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:38:18,823 p=72082 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:38:18,831 p=72082 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: "{{ item.upg }}" == "true"
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:38:40,663 p=72091 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:38:40,664 p=72091 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:38:40,671 p=72091 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 26, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: {{ item.upg }} == "true"
                         ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:39:02,148 p=72100 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:39:02,150 p=72100 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:39:02,156 p=72100 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 26, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: {{ item.upg }} true
                         ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:40:44,195 p=72109 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:40:44,196 p=72109 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:40:44,237 p=72109 u=root |  playbook: healthcheck.yml
2017-08-06 05:40:52,394 p=72117 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:40:52,395 p=72117 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:40:52,460 p=72117 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:40:52,509 p=72117 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:40:53,032 p=72117 u=root |  ok: [localhost]
2017-08-06 05:40:53,036 p=72117 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:40:53,090 p=72117 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'unicode object' has no attribute 'upg'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure git deployment key(s) is in place\n    ^ here\n"}
2017-08-06 05:40:53,091 p=72117 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:40:53,091 p=72117 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:40:53,091 p=72117 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:43:04,196 p=72178 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:43:04,197 p=72178 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:43:04,264 p=72178 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:43:04,312 p=72178 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:43:04,790 p=72178 u=root |  ok: [localhost]
2017-08-06 05:43:04,794 p=72178 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:43:04,851 p=72178 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'item.upg' failed. The error was: error while evaluating conditional (item.upg): 'unicode object' has no attribute 'upg'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure git deployment key(s) is in place\n    ^ here\n"}
2017-08-06 05:43:04,852 p=72178 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:43:04,852 p=72178 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:43:04,852 p=72178 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:43:45,204 p=72239 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:43:45,205 p=72239 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:43:45,214 p=72239 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: {{ item.upg }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:45:15,965 p=72248 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:45:15,966 p=72248 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:45:15,975 p=72248 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - docker_projects
    when: {{ item.upg }}
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 05:45:36,145 p=72257 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:45:36,146 p=72257 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:45:36,202 p=72257 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:45:36,253 p=72257 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:45:36,728 p=72257 u=root |  ok: [localhost]
2017-08-06 05:45:36,731 p=72257 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:45:36,787 p=72257 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'unicode object' has no attribute 'upg'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 17, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure git deployment key(s) is in place\n    ^ here\n"}
2017-08-06 05:45:36,788 p=72257 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:45:36,788 p=72257 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:45:36,788 p=72257 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:48:02,587 p=72320 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:48:02,588 p=72320 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:48:02,651 p=72320 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:48:02,695 p=72320 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:48:03,169 p=72320 u=root |  ok: [localhost]
2017-08-06 05:48:03,173 p=72320 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:48:03,184 p=72320 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "with_dict expects a dict"}
2017-08-06 05:48:03,186 p=72320 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:48:03,186 p=72320 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:48:03,186 p=72320 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:50:26,901 p=72381 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:50:26,903 p=72381 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:50:26,963 p=72381 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:50:27,009 p=72381 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:50:27,480 p=72381 u=root |  ok: [localhost]
2017-08-06 05:50:27,485 p=72381 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:50:27,495 p=72381 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "with_dict expects a dict"}
2017-08-06 05:50:27,497 p=72381 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:50:27,497 p=72381 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:50:27,497 p=72381 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:50:43,014 p=72442 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:50:43,015 p=72442 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:50:43,078 p=72442 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:50:43,127 p=72442 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:50:43,597 p=72442 u=root |  ok: [localhost]
2017-08-06 05:50:43,601 p=72442 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:50:43,659 p=72442 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'unicode object' has no attribute 'upg'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 17, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure git deployment key(s) is in place\n    ^ here\n"}
2017-08-06 05:50:43,660 p=72442 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:50:43,660 p=72442 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:50:43,660 p=72442 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:51:28,181 p=72503 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:51:28,182 p=72503 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:51:28,237 p=72503 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:51:28,287 p=72503 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:51:28,768 p=72503 u=root |  ok: [localhost]
2017-08-06 05:51:28,772 p=72503 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:51:28,826 p=72503 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "with_dict expects a dict"}
2017-08-06 05:51:28,827 p=72503 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 05:51:28,827 p=72503 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:51:28,827 p=72503 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 05:51:44,366 p=72564 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 05:51:44,368 p=72564 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 05:51:44,428 p=72564 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 05:51:44,472 p=72564 u=root |  TASK [setup] *******************************************************************
2017-08-06 05:51:44,946 p=72564 u=root |  ok: [localhost]
2017-08-06 05:51:44,950 p=72564 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 05:51:45,007 p=72564 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'keyfile': u'slm_mediacascade', u'name': u'docker-mediacascade', u'key': u'mediacascade'}) 
2017-08-06 05:51:45,008 p=72564 u=root |  PLAY RECAP *********************************************************************
2017-08-06 05:51:45,008 p=72564 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=0   
2017-08-06 06:03:57,029 p=72647 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 06:03:57,031 p=72647 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 06:03:57,096 p=72647 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 06:03:57,142 p=72647 u=root |  TASK [setup] *******************************************************************
2017-08-06 06:03:57,625 p=72647 u=root |  ok: [localhost]
2017-08-06 06:03:57,629 p=72647 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 06:03:57,692 p=72647 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'keyfile': u'slm_slmsamba_ro_deployment_key_rsa', u'name': u'docker-slmsamba', u'key': u'slmsamba_git_deployment_key'}) 
2017-08-06 06:03:57,692 p=72647 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'keyfile': u'slm_slmpuppet_ro_deployment_key_rsa', u'name': u'docker-slmpuppet', u'key': u'slmpuppet_git_deployment_key'}) 
2017-08-06 06:03:57,692 p=72647 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'keyfile': u'slm_ansible_sandbox_ro_deployment_key_rsa', u'name': u'ansible-sandbox', u'key': u'ansiblesandbox_git_deployment_key'}) 
2017-08-06 06:03:57,694 p=72647 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'keyfile': u'slm_mediacascade_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'mediacascade_git_deployment_key'}) 
2017-08-06 06:03:57,694 p=72647 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'keyfile': u'slamio_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'slamio_git_deployment_key'}) 
2017-08-06 06:03:57,696 p=72647 u=root |  PLAY RECAP *********************************************************************
2017-08-06 06:03:57,696 p=72647 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=0   
2017-08-06 06:04:14,347 p=72708 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 06:04:14,349 p=72708 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 06:04:14,411 p=72708 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 06:04:14,455 p=72708 u=root |  TASK [setup] *******************************************************************
2017-08-06 06:04:14,930 p=72708 u=root |  ok: [localhost]
2017-08-06 06:04:14,934 p=72708 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 06:04:14,998 p=72708 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'keyfile': u'slamio_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'slamio_git_deployment_key'}) 
2017-08-06 06:04:14,998 p=72708 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'keyfile': u'slm_slmsamba_ro_deployment_key_rsa', u'name': u'docker-slmsamba', u'key': u'slmsamba_git_deployment_key'}) 
2017-08-06 06:04:14,999 p=72708 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'keyfile': u'slm_slmpuppet_ro_deployment_key_rsa', u'name': u'docker-slmpuppet', u'key': u'slmpuppet_git_deployment_key'}) 
2017-08-06 06:04:14,999 p=72708 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'keyfile': u'slm_ansible_sandbox_ro_deployment_key_rsa', u'name': u'ansible-sandbox', u'key': u'ansiblesandbox_git_deployment_key'}) => {"failed": true, "item": {"image": "slmansible", "key": "ansiblesandbox_git_deployment_key", "keyfile": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Unable to find 'ansiblesandbox_git_deployment_key' in expected paths."}
2017-08-06 06:04:15,002 p=72708 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'keyfile': u'slm_mediacascade_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'mediacascade_git_deployment_key'}) 
2017-08-06 06:04:15,004 p=72708 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 06:04:15,004 p=72708 u=root |  PLAY RECAP *********************************************************************
2017-08-06 06:04:15,004 p=72708 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 06:18:37,314 p=72777 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 06:18:37,315 p=72777 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 06:18:37,391 p=72777 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 06:18:37,442 p=72777 u=root |  TASK [setup] *******************************************************************
2017-08-06 06:18:37,956 p=72777 u=root |  ok: [localhost]
2017-08-06 06:18:37,960 p=72777 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 06:18:38,031 p=72777 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'keyfile': u'slm_slmsamba_ro_deployment_key_rsa', u'name': u'docker-slmsamba', u'key': u'slmsamba_git_deployment_key'}) 
2017-08-06 06:18:38,031 p=72777 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'keyfile': u'slm_slmpuppet_ro_deployment_key_rsa', u'name': u'docker-slmpuppet', u'key': u'slmpuppet_git_deployment_key'}) 
2017-08-06 06:18:38,032 p=72777 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'keyfile': u'slm_ansible_sandbox_ro_deployment_key_rsa', u'name': u'ansible-sandbox', u'key': u'ansiblesandbox_git_deployment_key'}) => {"failed": true, "item": {"image": "slmansible", "key": "ansiblesandbox_git_deployment_key", "keyfile": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Unable to find 'ansiblesandbox_git_deployment_key' in expected paths."}
2017-08-06 06:18:38,035 p=72777 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'keyfile': u'slm_mediacascade_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'mediacascade_git_deployment_key'}) 
2017-08-06 06:18:38,035 p=72777 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'keyfile': u'slamio_ro_deployment_key_rsa', u'name': u'docker-mediacascade', u'key': u'slamio_git_deployment_key'}) 
2017-08-06 06:18:38,037 p=72777 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 06:18:38,037 p=72777 u=root |  PLAY RECAP *********************************************************************
2017-08-06 06:18:38,037 p=72777 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-06 06:37:55,250 p=72840 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 06:37:55,252 p=72840 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 06:37:55,328 p=72840 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 06:37:55,387 p=72840 u=root |  TASK [setup] *******************************************************************
2017-08-06 06:37:55,893 p=72840 u=root |  ok: [localhost]
2017-08-06 06:37:55,897 p=72840 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 06:37:56,282 p=72840 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 06:37:56,282 p=72840 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 06:37:56,283 p=72840 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 06:37:56,285 p=72840 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 06:37:56,285 p=72840 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 06:37:56,286 p=72840 u=root |  PLAY RECAP *********************************************************************
2017-08-06 06:37:56,287 p=72840 u=root |  localhost                  : ok=2    changed=1    unreachable=0    failed=0   
2017-08-06 06:39:34,769 p=72920 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 06:39:34,770 p=72920 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 06:39:34,838 p=72920 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 06:39:34,882 p=72920 u=root |  TASK [setup] *******************************************************************
2017-08-06 06:39:35,368 p=72920 u=root |  ok: [localhost]
2017-08-06 06:39:35,372 p=72920 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 06:39:35,729 p=72920 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 06:39:35,729 p=72920 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 06:39:35,729 p=72920 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 06:39:35,732 p=72920 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 06:39:35,732 p=72920 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 06:39:35,734 p=72920 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 06:39:35,782 p=72920 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure docker project(s) is checked out\n    ^ here\n"}
2017-08-06 06:39:35,801 p=72920 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 06:39:35,801 p=72920 u=root |  PLAY RECAP *********************************************************************
2017-08-06 06:39:35,801 p=72920 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-06 07:11:10,592 p=73014 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:11:10,593 p=73014 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:11:10,660 p=73014 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:11:10,709 p=73014 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:11:11,202 p=73014 u=root |  ok: [localhost]
2017-08-06 07:11:11,206 p=73014 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:11:11,426 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,426 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,426 p=73014 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:11:11,428 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,429 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,431 p=73014 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:11:11,738 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,738 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,738 p=73014 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:11:11,744 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,744 p=73014 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:11:11,745 p=73014 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:11:11,777 p=73014 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 36, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Ensure docker project(s) is checked out\n    ^ here\n"}
2017-08-06 07:11:11,778 p=73014 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:11:11,778 p=73014 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:11:11,779 p=73014 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-06 07:12:26,617 p=73092 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:12:26,619 p=73092 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:12:26,683 p=73092 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:12:26,730 p=73092 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:12:27,207 p=73092 u=root |  ok: [localhost]
2017-08-06 07:12:27,211 p=73092 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:12:27,433 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,433 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,433 p=73092 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:12:27,436 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,436 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,439 p=73092 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:12:27,778 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,778 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,778 p=73092 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:12:27,781 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,781 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:12:27,783 p=73092 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:12:29,086 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:12:29,086 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:12:29,086 p=73092 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) => {"cmd": "/usr/bin/git clone --origin origin '' '/opt/csc/src/\"ansible-sandbox\"'", "failed": true, "item": {"image": "slmansible", "key": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Warning:********@csc.com for help", "rc": 128, "stderr": "Warning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\nfatal: remote error: \n  Automation/\"ansible-sandbox\" is not a valid repository name\n  Email devcloud_support@csc.com for help\n", "stdout": "Cloning into '/opt/csc/src/\"ansible-sandbox\"'...\n", "stdout_lines": ["Cloning into '/opt/csc/src/\"ansible-sandbox\"'..."]}
2017-08-06 07:12:29,089 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:12:29,089 p=73092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:12:29,090 p=73092 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:12:29,090 p=73092 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:12:29,090 p=73092 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-06 07:15:38,154 p=73178 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:15:38,156 p=73178 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:15:38,230 p=73178 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:15:38,278 p=73178 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:15:38,765 p=73178 u=root |  ok: [localhost]
2017-08-06 07:15:38,768 p=73178 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:15:38,990 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:15:38,991 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:15:38,991 p=73178 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:15:38,994 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:15:38,994 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:15:38,996 p=73178 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:15:39,313 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:15:39,313 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:15:39,313 p=73178 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:15:39,316 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:15:39,316 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:15:39,318 p=73178 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:15:40,217 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:15:40,218 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:15:40,218 p=73178 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) => {"cmd": "/usr/bin/git clone --origin origin '' '/opt/csc/src/\"ansible-sandbox\"'", "failed": true, "item": {"image": "slmansible", "key": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Warning:********@csc.com for help", "rc": 128, "stderr": "Warning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\nfatal: remote error: \n  Automation/\"ansible-sandbox\" is not a valid repository name\n  Email devcloud_support@csc.com for help\n", "stdout": "Cloning into '/opt/csc/src/\"ansible-sandbox\"'...\n", "stdout_lines": ["Cloning into '/opt/csc/src/\"ansible-sandbox\"'..."]}
2017-08-06 07:15:40,221 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:15:40,221 p=73178 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:15:40,222 p=73178 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:15:40,222 p=73178 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:15:40,222 p=73178 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-06 07:22:08,639 p=73274 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:22:08,640 p=73274 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:22:08,706 p=73274 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:22:08,750 p=73274 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:22:09,233 p=73274 u=root |  ok: [localhost]
2017-08-06 07:22:09,236 p=73274 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:22:09,448 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,448 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,448 p=73274 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:22:09,451 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,451 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,453 p=73274 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:22:09,835 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,835 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,835 p=73274 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:22:09,838 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,838 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:22:09,839 p=73274 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:22:10,643 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:22:10,643 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:22:10,644 p=73274 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) => {"cmd": "/usr/bin/git clone --origin origin '' '/opt/csc/src/\"ansible-sandbox\"'", "failed": true, "item": {"image": "slmansible", "key": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Warning:********@csc.com for help", "rc": 128, "stderr": "Warning: Identity file /opt/csc/\"slm_ansible_sandbox_ro_deployment_key_rsa\" not accessible: No such file or directory.\nWarning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\nfatal: remote error: \n  Automation/\"ansible-sandbox\" is not a valid repository name\n  Email devcloud_support@csc.com for help\n", "stdout": "Cloning into '/opt/csc/src/\"ansible-sandbox\"'...\n", "stdout_lines": ["Cloning into '/opt/csc/src/\"ansible-sandbox\"'..."]}
2017-08-06 07:22:10,646 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:22:10,646 p=73274 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:22:10,648 p=73274 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:22:10,648 p=73274 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:22:10,648 p=73274 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-06 07:22:59,337 p=73369 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:22:59,339 p=73369 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:22:59,407 p=73369 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:22:59,453 p=73369 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:22:59,925 p=73369 u=root |  ok: [localhost]
2017-08-06 07:22:59,928 p=73369 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:23:00,150 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,150 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,150 p=73369 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:23:00,153 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,153 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,155 p=73369 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:23:00,457 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,457 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,457 p=73369 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:23:00,460 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,460 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:23:00,461 p=73369 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:23:01,655 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:23:01,655 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:23:01,656 p=73369 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) => {"cmd": "/usr/bin/git clone --origin origin '' '/opt/csc/src/\"ansible-sandbox\"'", "failed": true, "item": {"image": "slmansible", "key": "slm_ansible_sandbox_ro_deployment_key_rsa", "name": "ansible-sandbox", "upg": true}, "msg": "Warning:********@csc.com for help", "rc": 128, "stderr": "Warning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\nfatal: remote error: \n  Automation/\"ansible-sandbox\" is not a valid repository name\n  Email devcloud_support@csc.com for help\n", "stdout": "Cloning into '/opt/csc/src/\"ansible-sandbox\"'...\n", "stdout_lines": ["Cloning into '/opt/csc/src/\"ansible-sandbox\"'..."]}
2017-08-06 07:23:01,659 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:23:01,659 p=73369 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:23:01,660 p=73369 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:23:01,660 p=73369 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:23:01,660 p=73369 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-06 07:23:55,325 p=73453 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:23:55,326 p=73453 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:23:55,335 p=73453 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 30, column 13, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    copy:
      src: {{ item.key }}
            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 07:24:22,934 p=73462 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:24:22,935 p=73462 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:24:23,004 p=73462 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:24:23,050 p=73462 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:24:23,520 p=73462 u=root |  ok: [localhost]
2017-08-06 07:24:23,523 p=73462 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:24:23,740 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:24:23,740 p=73462 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:24:23,744 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:24:23,744 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:24:23,745 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:24:23,747 p=73462 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:24:24,053 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,053 p=73462 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:24:24,057 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,057 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,057 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,059 p=73462 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:24:24,996 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,997 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:24:24,997 p=73462 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:24:25,000 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:24:25,000 p=73462 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:24:25,004 p=73462 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:24:25,004 p=73462 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-06 07:26:46,208 p=73555 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:26:46,209 p=73555 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:26:46,221 p=73555 u=root |  ERROR! 'when' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-06 07:28:35,530 p=73566 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:28:35,531 p=73566 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:28:35,540 p=73566 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 77, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


      when: "{{ item.upg }}"
      ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 07:29:10,843 p=73575 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:29:10,845 p=73575 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:29:10,856 p=73575 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-06 07:30:23,521 p=73584 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:30:23,522 p=73584 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:30:23,534 p=73584 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 21, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Perform CAM Healthcheck
    ^ here

2017-08-06 07:31:10,537 p=73593 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:31:10,538 p=73593 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:31:10,547 p=73593 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


     block:
          ^ here

2017-08-06 07:31:24,939 p=73601 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:31:24,940 p=73601 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:31:24,947 p=73601 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


     block:
          ^ here

2017-08-06 07:32:37,145 p=73610 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:32:37,146 p=73610 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:32:37,153 p=73610 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 79, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


     when: "{{ item.upg }}"
     ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-06 07:32:58,381 p=73619 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:32:58,383 p=73619 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:32:58,421 p=73619 u=root |  playbook: healthcheck.yml
2017-08-06 07:33:06,201 p=73627 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:33:06,202 p=73627 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:33:06,270 p=73627 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:33:06,315 p=73627 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:33:06,787 p=73627 u=root |  ok: [localhost]
2017-08-06 07:33:06,790 p=73627 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:33:07,007 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,007 p=73627 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:33:07,015 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,016 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,016 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,018 p=73627 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:33:07,338 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,338 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,338 p=73627 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:33:07,341 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,341 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:33:07,343 p=73627 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:33:08,536 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:33:08,536 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:33:08,537 p=73627 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:33:08,540 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:33:08,540 p=73627 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:33:08,544 p=73627 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:33:08,544 p=73627 u=root |  localhost                  : ok=4    changed=2    unreachable=0    failed=0   
2017-08-06 07:43:50,027 p=73721 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:43:50,028 p=73721 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:43:50,040 p=73721 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - block:
     ^ here

2017-08-06 07:44:34,380 p=73730 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:44:34,381 p=73730 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:44:34,393 p=73730 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - block:
     ^ here

2017-08-06 07:45:05,448 p=73739 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:45:05,449 p=73739 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:45:05,461 p=73739 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - block:
     ^ here

2017-08-06 07:45:29,721 p=73748 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:45:29,723 p=73748 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:45:29,786 p=73748 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:45:29,835 p=73748 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:45:30,309 p=73748 u=root |  ok: [localhost]
2017-08-06 07:45:30,328 p=73748 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:45:30,542 p=73748 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:45:30,542 p=73748 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:45:30,543 p=73748 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:45:30,546 p=73748 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:45:30,546 p=73748 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:45:30,548 p=73748 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-06 07:45:30,586 p=73748 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "'docker_containers' is undefined"}
2017-08-06 07:45:30,587 p=73748 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-06 07:45:30,587 p=73748 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:45:30,587 p=73748 u=root |  localhost                  : ok=2    changed=1    unreachable=0    failed=1   
2017-08-06 07:45:52,330 p=73815 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-06 07:45:52,332 p=73815 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-06 07:45:52,394 p=73815 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-06 07:45:52,437 p=73815 u=root |  TASK [setup] *******************************************************************
2017-08-06 07:45:52,919 p=73815 u=root |  ok: [localhost]
2017-08-06 07:45:52,937 p=73815 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-06 07:45:53,151 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:45:53,151 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:45:53,152 p=73815 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:45:53,154 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:45:53,154 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:45:53,156 p=73815 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-06 07:45:56,031 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,032 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,032 p=73815 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:45:56,035 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,035 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,037 p=73815 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-06 07:45:56,397 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,397 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,397 p=73815 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:45:56,400 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,400 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:45:56,401 p=73815 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-06 07:45:57,318 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-06 07:45:57,318 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-06 07:45:57,318 p=73815 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-06 07:45:57,321 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-06 07:45:57,321 p=73815 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-06 07:45:57,322 p=73815 u=root |  PLAY RECAP *********************************************************************
2017-08-06 07:45:57,322 p=73815 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-07 02:20:10,971 p=74541 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:20:10,973 p=74541 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:20:11,053 p=74541 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:20:11,105 p=74541 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:20:11,646 p=74541 u=root |  ok: [localhost]
2017-08-07 02:20:11,663 p=74541 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:20:11,727 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:20:11,890 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:11,890 p=74541 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:11,892 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:11,893 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:11,893 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:11,894 p=74541 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:20:11,985 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:20:12,262 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,262 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,263 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,263 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,263 p=74541 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:12,265 p=74541 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:20:12,326 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:20:12,572 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,572 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,572 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,572 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:12,572 p=74541 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:12,574 p=74541 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 02:20:12,627 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:20:13,487 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:13,487 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:13,487 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:13,487 p=74541 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:13,487 p=74541 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:13,489 p=74541 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:20:13,489 p=74541 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-07 02:20:39,511 p=74644 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:20:39,513 p=74644 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:20:39,578 p=74644 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:20:39,625 p=74644 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:20:40,118 p=74644 u=root |  ok: [localhost]
2017-08-07 02:20:40,137 p=74644 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:20:40,347 p=74644 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 02:20:40,446 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:40,446 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:40,446 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:40,446 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:40,446 p=74644 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:40,448 p=74644 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:20:40,795 p=74644 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 02:20:41,023 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:41,023 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:41,023 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:41,023 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:41,024 p=74644 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:41,026 p=74644 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:20:42,419 p=74644 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 02:20:42,592 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:42,592 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:42,592 p=74644 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:42,596 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:42,597 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:42,599 p=74644 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 02:20:43,217 p=74644 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) => {"cmd": "/usr/bin/git clone --origin origin '' /opt/csc/src", "failed": true, "item": {"image": "gitlab/gitlab-ce", "key": null, "name": null, "upg": true}, "msg": "Warning:********@\r\nPermissions 0755 for '/opt/csc/' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nbad permissions: ignore key: /opt/csc/\r\nPermission denied (publickey).\r\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.", "rc": 128, "stderr": "Warning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\n@         WARNING: UNPROTECTED PRIVATE KEY FILE!          @\r\n@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@\r\nPermissions 0755 for '/opt/csc/' are too open.\r\nIt is required that your private key files are NOT accessible by others.\r\nThis private key will be ignored.\r\nbad permissions: ignore key: /opt/csc/\r\nPermission denied (publickey).\r\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n", "stdout": "Cloning into '/opt/csc/src'...\n", "stdout_lines": ["Cloning into '/opt/csc/src'..."]}
2017-08-07 02:20:44,070 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:20:44,070 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:20:44,071 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:20:44,071 p=74644 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:20:44,071 p=74644 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:20:44,072 p=74644 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 02:20:44,072 p=74644 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:20:44,072 p=74644 u=root |  localhost                  : ok=4    changed=2    unreachable=0    failed=1   
2017-08-07 02:23:08,008 p=74851 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:23:08,009 p=74851 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:23:08,018 p=74851 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 52, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        with_items: "{{ docker_projects }}"
        when: "{{ item.name }}" != ''
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:23:52,022 p=74860 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:23:52,024 p=74860 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:23:52,033 p=74860 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 52, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        with_items: "{{ docker_projects }}"
        when: "{{ item.name }}" not ''
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:28:24,684 p=74871 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:28:24,685 p=74871 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:28:24,695 p=74871 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 56, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        with_items: "{{ docker_projects }}"
        when: "{{ item.name }}" not ''
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:29:27,412 p=74880 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:29:27,413 p=74880 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:29:27,422 p=74880 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 56, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        with_items: "{{ docker_projects }}"
        when: "{{ item.name }}" not ''
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:29:33,251 p=74888 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:29:33,252 p=74888 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:29:33,261 p=74888 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 56, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        with_items: "{{ docker_projects }}"
        when: "{{ item.name }}" not ''
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:29:46,948 p=74897 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:29:46,949 p=74897 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:29:47,017 p=74897 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:29:47,069 p=74897 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:29:47,552 p=74897 u=root |  ok: [localhost]
2017-08-07 02:29:47,571 p=74897 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:29:47,646 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:29:47,802 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:29:47,802 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:29:47,802 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:29:47,802 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:29:47,802 p=74897 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:29:47,804 p=74897 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:29:47,862 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:29:48,155 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,155 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,155 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,155 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,155 p=74897 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:29:48,157 p=74897 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:29:48,216 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:29:48,464 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,465 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,465 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,465 p=74897 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:29:48,465 p=74897 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:29:48,467 p=74897 u=root |  TASK [debug] *******************************************************************
2017-08-07 02:29:48,499 p=74897 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 6, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n   - block:\n     ^ here\n"}
2017-08-07 02:29:48,500 p=74897 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 02:29:48,501 p=74897 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:29:48,501 p=74897 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-07 02:33:01,434 p=74988 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:33:01,435 p=74988 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:33:01,502 p=74988 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:33:01,548 p=74988 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:33:02,075 p=74988 u=root |  ok: [localhost]
2017-08-07 02:33:02,094 p=74988 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:33:02,143 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:33:02,331 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,331 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,331 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,331 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,331 p=74988 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:33:02,333 p=74988 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:33:02,483 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:33:02,731 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,731 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,731 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,731 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:33:02,731 p=74988 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:33:02,733 p=74988 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:33:02,856 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:33:03,042 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:33:03,042 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:33:03,042 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:33:03,042 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:33:03,042 p=74988 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:33:03,044 p=74988 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 02:33:03,122 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:33:04,037 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:33:04,037 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:33:04,037 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:33:04,037 p=74988 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:33:04,038 p=74988 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:33:04,039 p=74988 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:33:04,039 p=74988 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-07 02:38:50,725 p=75092 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:38:50,726 p=75092 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:38:50,792 p=75092 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:38:50,840 p=75092 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:38:51,317 p=75092 u=root |  ok: [localhost]
2017-08-07 02:38:51,335 p=75092 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:38:51,398 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:38:51,575 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,576 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,576 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,576 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,576 p=75092 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:38:51,578 p=75092 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:38:51,621 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:38:51,919 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,919 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,919 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,919 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:38:51,919 p=75092 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:38:51,921 p=75092 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:38:52,031 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:38:52,217 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:38:52,218 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:38:52,218 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:38:52,218 p=75092 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:38:52,218 p=75092 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:38:52,220 p=75092 u=root |  TASK [debug] *******************************************************************
2017-08-07 02:38:52,251 p=75092 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 6, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n   - block:\n     ^ here\n"}
2017-08-07 02:38:52,253 p=75092 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 02:38:52,253 p=75092 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:38:52,253 p=75092 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-07 02:42:16,284 p=75181 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:42:16,285 p=75181 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:42:16,295 p=75181 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 46, column 16, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - name: Debug
          debug:
               ^ here

2017-08-07 02:42:42,083 p=75190 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:42:42,085 p=75190 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:42:42,152 p=75190 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 02:42:42,195 p=75190 u=root |  TASK [setup] *******************************************************************
2017-08-07 02:42:42,671 p=75190 u=root |  ok: [localhost]
2017-08-07 02:42:42,689 p=75190 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 02:42:42,758 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:42:42,914 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:42:42,914 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:42:42,914 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:42:42,914 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:42:42,914 p=75190 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:42:42,916 p=75190 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 02:42:43,025 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:42:43,270 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,270 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,270 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,270 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,270 p=75190 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:42:43,272 p=75190 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 02:42:43,329 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 02:42:43,570 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,570 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,570 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,570 p=75190 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 02:42:43,570 p=75190 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 02:42:43,572 p=75190 u=root |  TASK [Debug] *******************************************************************
2017-08-07 02:42:43,607 p=75190 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }}' failed. The error was: error while evaluating conditional ({{ item.upg }}): 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 6, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n   - block:\n     ^ here\n"}
2017-08-07 02:42:43,608 p=75190 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 02:42:43,608 p=75190 u=root |  PLAY RECAP *********************************************************************
2017-08-07 02:42:43,608 p=75190 u=root |  localhost                  : ok=4    changed=0    unreachable=0    failed=1   
2017-08-07 02:44:11,751 p=75278 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:44:11,752 p=75278 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:44:11,761 p=75278 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 87, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Debug
  ^ here

2017-08-07 02:44:38,091 p=75287 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:44:38,092 p=75287 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:44:38,102 p=75287 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 87, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: Debug
    ^ here

2017-08-07 02:52:51,625 p=75297 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:52:51,627 p=75297 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:52:51,635 p=75297 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: Upgrade Docker Containers from repos
     block:
          ^ here

2017-08-07 02:54:16,245 p=75306 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:54:16,247 p=75306 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:54:16,255 p=75306 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: Upgrade Docker Containers from repos
     block:
          ^ here

2017-08-07 02:56:25,902 p=75316 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:56:25,903 p=75316 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:56:25,912 p=75316 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 23, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: Upgrade Docker Containers from repos
     block:
          ^ here

2017-08-07 02:57:55,215 p=75325 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:57:55,216 p=75325 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:57:55,229 p=75325 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 22, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Upgrade Docker Containers from repos
    ^ here

2017-08-07 02:58:18,307 p=75334 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:58:18,308 p=75334 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:58:18,316 p=75334 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 84, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    when: "{{ item.upg }}"
    ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 02:58:57,618 p=75343 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 02:58:57,619 p=75343 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 02:58:57,632 p=75343 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 22, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Upgrade Docker Containers from repos
     ^ here

2017-08-07 03:00:38,785 p=75352 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:00:38,787 p=75352 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:00:38,796 p=75352 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 84, column 8, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


       when: "{{ item.upg }}"
       ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:01:12,653 p=75381 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:01:12,654 p=75381 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:01:12,664 p=75381 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 84, column 8, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


       when: {{ item.upg }}
       ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:02:44,451 p=75390 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:02:44,452 p=75390 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:02:44,461 p=75390 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 34, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
          when: "{{ item.upg }}" and "{{ item.name }}" is defined
                                 ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:03:03,928 p=75399 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:03:03,929 p=75399 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:03:03,938 p=75399 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 35, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
          when: "{{ item.upg }}" & "{{ item.name }}" is defined
                                  ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:03:16,769 p=75408 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:03:16,770 p=75408 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:03:16,779 p=75408 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 35, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
          when: "{{ item.upg }}" && "{{ item.name }}" is defined
                                  ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:05:21,001 p=75417 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:05:21,002 p=75417 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:05:21,011 p=75417 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 88, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


     - name: Debug
     ^ here

2017-08-07 03:05:43,431 p=75426 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:05:43,433 p=75426 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:05:43,493 p=75426 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:05:43,549 p=75426 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:05:44,041 p=75426 u=root |  ok: [localhost]
2017-08-07 03:05:44,045 p=75426 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:05:44,261 p=75426 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:05:44,261 p=75426 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:05:44,261 p=75426 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:05:44,263 p=75426 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:05:44,264 p=75426 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:05:44,265 p=75426 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:05:44,633 p=75426 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:05:44,871 p=75426 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:05:45,103 p=75426 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:05:45,336 p=75426 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:05:45,549 p=75426 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:05:45,551 p=75426 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:05:45,835 p=75426 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:05:45,848 p=75426 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:05:45,848 p=75426 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:05:45,848 p=75426 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:05:46,018 p=75426 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:05:46,019 p=75426 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:05:46,019 p=75426 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:05:46,020 p=75426 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:09:45,255 p=75595 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:09:45,257 p=75595 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:09:45,324 p=75595 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:09:45,368 p=75595 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:09:45,861 p=75595 u=root |  ok: [localhost]
2017-08-07 03:09:45,879 p=75595 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:09:46,095 p=75595 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:09:46,095 p=75595 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:09:46,095 p=75595 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:09:46,098 p=75595 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:09:46,098 p=75595 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:09:46,100 p=75595 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:09:46,461 p=75595 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:09:46,693 p=75595 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:09:46,911 p=75595 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:09:47,128 p=75595 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:09:47,348 p=75595 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:09:47,351 p=75595 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:09:47,635 p=75595 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:09:47,636 p=75595 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:09:47,648 p=75595 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:09:47,649 p=75595 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:09:47,824 p=75595 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:09:47,825 p=75595 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:09:47,825 p=75595 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:09:47,825 p=75595 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:11:23,220 p=75725 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:11:23,222 p=75725 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:11:23,230 p=75725 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 34, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
          when: "{{ item.upg }}" and "{{ item.name }}" is defined
                                 ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:11:59,430 p=75735 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:11:59,431 p=75735 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:11:59,440 p=75735 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 32, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
          when: {{ item.upg }} and {{ item.name }} is defined
                               ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:12:21,430 p=75744 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:12:21,431 p=75744 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:12:21,497 p=75744 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:12:21,548 p=75744 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:12:22,026 p=75744 u=root |  ok: [localhost]
2017-08-07 03:12:22,044 p=75744 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:12:22,104 p=75744 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:12:22,104 p=75744 u=root |  skipping: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-07 03:12:22,108 p=75744 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:12:22,108 p=75744 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:12:22,108 p=75744 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:12:22,110 p=75744 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:12:22,452 p=75744 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:12:22,677 p=75744 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:12:22,894 p=75744 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:12:23,122 p=75744 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:12:23,340 p=75744 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:12:23,342 p=75744 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:12:23,707 p=75744 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:12:23,708 p=75744 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:12:23,715 p=75744 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:12:23,715 p=75744 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:12:23,887 p=75744 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:12:23,889 p=75744 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:12:23,889 p=75744 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:12:23,889 p=75744 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-07 03:15:02,671 p=75871 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:15:02,672 p=75871 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:15:02,681 p=75871 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 59, column 9, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          with_items: "{{ docker_projects }}"
        when: "{{ item.upg }} and {{ item.key }} is defined"
        ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:15:40,871 p=75880 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:15:40,873 p=75880 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:15:40,933 p=75880 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:15:40,982 p=75880 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:15:41,458 p=75880 u=root |  ok: [localhost]
2017-08-07 03:15:41,476 p=75880 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:15:41,533 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,533 p=75880 u=root |  skipping: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,536 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,536 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,536 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,538 p=75880 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:15:41,591 p=75880 u=root |  skipping: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,602 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,602 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,603 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,603 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,606 p=75880 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:15:41,664 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,664 p=75880 u=root |  skipping: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,667 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,667 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,667 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,669 p=75880 u=root |  TASK [Show key] ****************************************************************
2017-08-07 03:15:41,709 p=75880 u=root |  ok: [localhost] => {
    "deployment_key": {
        "changed": false, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": true
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }
        ]
    }
}
2017-08-07 03:15:41,711 p=75880 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 03:15:41,764 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,764 p=75880 u=root |  skipping: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,767 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,767 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,767 p=75880 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:15:41,770 p=75880 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:15:41,770 p=75880 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=0   
2017-08-07 03:18:05,749 p=75950 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:18:05,750 p=75950 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:18:05,816 p=75950 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:18:05,865 p=75950 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:18:06,349 p=75950 u=root |  ok: [localhost]
2017-08-07 03:18:06,367 p=75950 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:18:06,412 p=75950 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.name }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.name }}): 'ansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 11, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      block:\n        - name: Remove existing project from /opt/csc/src\n          ^ here\n"}
2017-08-07 03:18:06,414 p=75950 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:18:06,414 p=75950 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:18:06,414 p=75950 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 03:20:23,138 p=76012 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:20:23,139 p=76012 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:20:23,199 p=76012 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:20:23,255 p=76012 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:20:23,740 p=76012 u=root |  ok: [localhost]
2017-08-07 03:20:23,757 p=76012 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:20:23,803 p=76012 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.name }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.name }}): 'ansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      block:\n    - name: Remove existing project from /opt/csc/src\n      ^ here\n"}
2017-08-07 03:20:23,809 p=76012 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:20:23,809 p=76012 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:20:23,809 p=76012 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 03:21:18,337 p=76074 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:21:18,339 p=76074 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:21:18,400 p=76074 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:21:18,450 p=76074 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:21:18,956 p=76074 u=root |  ok: [localhost]
2017-08-07 03:21:18,974 p=76074 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:21:19,184 p=76074 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:21:19,184 p=76074 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:21:19,185 p=76074 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:21:19,187 p=76074 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:21:19,188 p=76074 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:21:19,190 p=76074 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:21:19,229 p=76074 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.image }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.image }}): 'slmansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 32, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Remove existing Docker image\n      ^ here\n"}
2017-08-07 03:21:19,230 p=76074 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:21:19,231 p=76074 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:21:19,231 p=76074 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-07 03:21:48,567 p=76141 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:21:48,569 p=76141 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:21:48,641 p=76141 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:21:48,692 p=76141 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:21:49,157 p=76141 u=root |  ok: [localhost]
2017-08-07 03:21:49,176 p=76141 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:21:49,221 p=76141 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.name }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.name }}): 'ansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      block:\n    - name: Remove existing project from /opt/csc/src\n      ^ here\n"}
2017-08-07 03:21:49,223 p=76141 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:21:49,223 p=76141 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:21:49,223 p=76141 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 03:22:01,706 p=76202 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:22:01,707 p=76202 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:22:01,715 p=76202 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: {{ item.upg }} and {{ item.name }}
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:22:42,190 p=76211 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:22:42,191 p=76211 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:22:42,200 p=76211 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 50, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: "{{ item.upg }} and {{ item.name }}" is defined
                                                 ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:22:54,112 p=76220 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:22:54,113 p=76220 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:22:54,179 p=76220 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:22:54,224 p=76220 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:22:54,701 p=76220 u=root |  ok: [localhost]
2017-08-07 03:22:54,718 p=76220 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:22:54,764 p=76220 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.name }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.name }}): 'ansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 24, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#      block:\n    - name: Remove existing project from /opt/csc/src\n      ^ here\n"}
2017-08-07 03:22:54,765 p=76220 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:22:54,765 p=76220 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:22:54,766 p=76220 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 03:25:34,583 p=76282 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:25:34,585 p=76282 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:25:34,594 p=76282 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 30, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: "{{ item.upg }}" and "{{ item.name }} is defined"
                             ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:26:37,384 p=76291 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:26:37,386 p=76291 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:26:37,463 p=76291 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:26:37,512 p=76291 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:26:38,008 p=76291 u=root |  ok: [localhost]
2017-08-07 03:26:38,026 p=76291 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:26:38,253 p=76291 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:26:38,349 p=76291 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:26:38,441 p=76291 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:26:38,533 p=76291 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:26:38,619 p=76291 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:26:38,621 p=76291 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:26:38,665 p=76291 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.image }}' failed. The error was: error while evaluating conditional ({{ item.upg }} and {{ item.image }}): 'slmansible' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 31, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Remove existing Docker image\n      ^ here\n"}
2017-08-07 03:26:38,667 p=76291 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:26:38,667 p=76291 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:26:38,667 p=76291 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-07 03:27:19,133 p=76374 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:27:19,135 p=76374 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:27:19,195 p=76374 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:27:19,246 p=76374 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:27:19,739 p=76374 u=root |  ok: [localhost]
2017-08-07 03:27:19,758 p=76374 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:27:19,969 p=76374 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:27:20,059 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:27:20,156 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:27:20,248 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:27:20,338 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:27:20,341 p=76374 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:27:20,681 p=76374 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:27:20,931 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:27:21,141 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:27:21,369 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:27:21,575 p=76374 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:27:21,577 p=76374 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:27:21,613 p=76374 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg}} and {{ item.key }}' failed. The error was: error while evaluating conditional ({{ item.upg}} and {{ item.key }}): 'slm_ansible_sandbox_ro_deployment_key_rsa' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 38, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Ensure git deployment key(s) is in place\n      ^ here\n"}
2017-08-07 03:27:21,614 p=76374 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:27:21,614 p=76374 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:27:21,614 p=76374 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:28:00,490 p=76504 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:28:00,492 p=76504 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:28:00,558 p=76504 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:28:00,610 p=76504 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:28:01,084 p=76504 u=root |  ok: [localhost]
2017-08-07 03:28:01,100 p=76504 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:28:01,312 p=76504 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:28:01,407 p=76504 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:28:01,498 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:28:01,601 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:28:01,697 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:28:01,788 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:28:01,790 p=76504 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:28:02,129 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:28:02,359 p=76504 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:28:02,577 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:28:02,814 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:28:03,029 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:28:03,255 p=76504 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:28:03,257 p=76504 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:28:03,298 p=76504 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg}} and {{ item.key }}' failed. The error was: template error while templating string: unexpected 'end of statement block'. String: {% if False and  %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 38, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Ensure git deployment key(s) is in place\n      ^ here\n"}
2017-08-07 03:28:03,300 p=76504 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:28:03,300 p=76504 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:28:03,300 p=76504 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-07 03:28:35,684 p=76648 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:28:35,685 p=76648 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:28:35,750 p=76648 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:28:35,796 p=76648 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:28:36,280 p=76648 u=root |  ok: [localhost]
2017-08-07 03:28:36,297 p=76648 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:28:36,508 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:28:36,608 p=76648 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:28:36,705 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:28:36,796 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:28:36,901 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:28:36,991 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:28:36,993 p=76648 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:28:37,356 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:28:37,575 p=76648 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:28:37,795 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:28:38,029 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:28:38,259 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:28:38,471 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:28:38,473 p=76648 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:28:39,823 p=76648 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:28:40,025 p=76648 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:28:40,026 p=76648 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:28:40,026 p=76648 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:28:40,026 p=76648 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:28:40,192 p=76648 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:28:40,193 p=76648 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:28:40,193 p=76648 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:28:40,193 p=76648 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:29:17,392 p=76878 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:29:17,394 p=76878 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:29:17,462 p=76878 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:29:17,505 p=76878 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:29:17,977 p=76878 u=root |  ok: [localhost]
2017-08-07 03:29:17,996 p=76878 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:29:18,201 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:18,296 p=76878 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:18,392 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:29:18,488 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:29:18,585 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:29:18,681 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:18,683 p=76878 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:29:19,024 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:19,255 p=76878 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:19,481 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:29:19,708 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:29:19,944 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:29:20,160 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:20,162 p=76878 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:29:21,500 p=76878 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:21,701 p=76878 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:21,701 p=76878 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:21,701 p=76878 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:21,701 p=76878 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:21,869 p=76878 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:21,870 p=76878 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:29:21,870 p=76878 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:29:21,870 p=76878 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:29:46,316 p=77105 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:29:46,317 p=77105 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:29:46,386 p=77105 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:29:46,429 p=77105 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:29:46,915 p=77105 u=root |  ok: [localhost]
2017-08-07 03:29:46,932 p=77105 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:29:47,154 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:47,249 p=77105 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:47,347 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:29:47,442 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:29:47,533 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:29:47,621 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:47,623 p=77105 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:29:47,981 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:48,206 p=77105 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:48,424 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:29:48,657 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:29:48,870 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:29:49,097 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:49,099 p=77105 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:29:50,454 p=77105 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:29:50,642 p=77105 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:50,642 p=77105 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:50,642 p=77105 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:29:50,642 p=77105 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:29:50,810 p=77105 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:29:50,812 p=77105 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:29:50,812 p=77105 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:29:50,812 p=77105 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:30:13,276 p=77335 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:30:13,278 p=77335 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:30:13,353 p=77335 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:30:13,396 p=77335 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:30:13,868 p=77335 u=root |  ok: [localhost]
2017-08-07 03:30:13,885 p=77335 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:30:14,102 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:30:14,193 p=77335 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:30:14,290 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:30:14,385 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:30:14,475 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:30:14,562 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:30:14,564 p=77335 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:30:14,908 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:30:15,124 p=77335 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:30:15,343 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:30:15,577 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:30:15,799 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:30:16,023 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:30:16,025 p=77335 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:30:17,370 p=77335 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:30:17,559 p=77335 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:30:17,559 p=77335 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:30:17,559 p=77335 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:30:17,559 p=77335 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:30:17,747 p=77335 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:30:17,749 p=77335 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:30:17,749 p=77335 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:30:17,749 p=77335 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:31:10,604 p=77567 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:31:10,605 p=77567 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:31:10,672 p=77567 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:31:10,715 p=77567 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:31:11,195 p=77567 u=root |  ok: [localhost]
2017-08-07 03:31:11,212 p=77567 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:31:11,436 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:31:11,535 p=77567 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:31:11,626 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:31:11,723 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:31:11,817 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:31:11,901 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:31:11,903 p=77567 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:31:12,268 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:31:12,490 p=77567 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:31:12,720 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:31:12,930 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:31:13,152 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:31:13,375 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:31:13,377 p=77567 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:31:14,714 p=77567 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:31:14,908 p=77567 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:31:14,908 p=77567 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:31:14,909 p=77567 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:31:14,909 p=77567 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:31:15,073 p=77567 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:31:15,074 p=77567 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:31:15,074 p=77567 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:31:15,074 p=77567 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:33:03,206 p=77803 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:33:03,208 p=77803 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:33:03,279 p=77803 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:33:03,324 p=77803 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:33:03,807 p=77803 u=root |  ok: [localhost]
2017-08-07 03:33:03,825 p=77803 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:33:04,035 p=77803 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:33:04,124 p=77803 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:33:04,219 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:33:04,308 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:33:04,412 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:33:04,501 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:33:04,504 p=77803 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:33:04,850 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:33:05,091 p=77803 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:33:05,325 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:33:05,542 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:33:05,757 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:33:05,988 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:33:05,991 p=77803 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:33:07,351 p=77803 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:33:07,543 p=77803 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:33:07,543 p=77803 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:33:07,543 p=77803 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:33:07,544 p=77803 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:33:07,711 p=77803 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:33:07,712 p=77803 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:33:07,712 p=77803 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:33:07,712 p=77803 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-07 03:34:29,951 p=78039 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:34:29,952 p=78039 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:34:30,024 p=78039 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:34:30,068 p=78039 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:34:30,558 p=78039 u=root |  ok: [localhost]
2017-08-07 03:34:30,577 p=78039 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:34:30,786 p=78039 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:34:30,881 p=78039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:34:30,977 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:34:31,070 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:34:31,165 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:34:31,253 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:34:31,255 p=78039 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:34:31,605 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:34:31,823 p=78039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:34:32,041 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:34:32,271 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:34:32,510 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:34:32,717 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:34:32,719 p=78039 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:34:34,088 p=78039 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:34:34,277 p=78039 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:34:34,277 p=78039 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:34:34,278 p=78039 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:34:34,278 p=78039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:34:34,446 p=78039 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:34:34,447 p=78039 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:34:34,447 p=78039 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:34:34,447 p=78039 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-07 03:35:46,701 p=78268 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:35:46,703 p=78268 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:35:46,768 p=78268 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:35:46,814 p=78268 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:35:47,297 p=78268 u=root |  ok: [localhost]
2017-08-07 03:35:47,315 p=78268 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:35:47,525 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:35:47,623 p=78268 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:35:47,719 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:35:47,818 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:35:47,913 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:35:48,003 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:35:48,005 p=78268 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:35:48,343 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:35:48,571 p=78268 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:35:48,797 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:35:49,030 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:35:49,261 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:35:49,466 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:35:49,468 p=78268 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:35:50,782 p=78268 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:35:50,972 p=78268 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:35:50,972 p=78268 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:35:50,972 p=78268 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:35:50,973 p=78268 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:35:51,136 p=78268 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:35:51,138 p=78268 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:35:51,138 p=78268 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:35:51,138 p=78268 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:36:28,936 p=78498 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:36:28,937 p=78498 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:36:29,006 p=78498 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:36:29,055 p=78498 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:36:29,558 p=78498 u=root |  ok: [localhost]
2017-08-07 03:36:29,577 p=78498 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:36:29,800 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:36:29,893 p=78498 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:36:29,989 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:36:30,087 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:36:30,180 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:36:30,267 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:36:30,269 p=78498 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:36:30,618 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:36:30,836 p=78498 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:36:31,056 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:36:31,287 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:36:31,508 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:36:31,724 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:36:31,726 p=78498 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:36:33,058 p=78498 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:36:33,251 p=78498 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:36:33,251 p=78498 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:36:33,252 p=78498 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:36:33,252 p=78498 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:36:33,426 p=78498 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:36:33,427 p=78498 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:36:33,428 p=78498 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:36:33,428 p=78498 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:37:05,951 p=78728 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:37:05,952 p=78728 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:37:06,023 p=78728 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:37:06,073 p=78728 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:37:06,538 p=78728 u=root |  ok: [localhost]
2017-08-07 03:37:06,555 p=78728 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:37:06,773 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:37:06,870 p=78728 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:37:06,959 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:37:07,050 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:37:07,144 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:37:07,233 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:37:07,235 p=78728 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:37:07,565 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:37:07,797 p=78728 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:37:08,021 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:37:08,255 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:37:08,481 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:37:08,698 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:37:08,700 p=78728 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:37:10,035 p=78728 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:37:10,224 p=78728 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:37:10,224 p=78728 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:37:10,224 p=78728 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:37:10,225 p=78728 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:37:10,392 p=78728 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:37:10,393 p=78728 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:37:10,393 p=78728 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:37:10,393 p=78728 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:38:16,312 p=78967 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:38:16,314 p=78967 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:38:16,380 p=78967 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:38:16,430 p=78967 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:38:16,905 p=78967 u=root |  ok: [localhost]
2017-08-07 03:38:16,923 p=78967 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:38:17,046 p=78967 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:38:17,141 p=78967 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:38:17,141 p=78967 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:38:17,141 p=78967 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:38:17,141 p=78967 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:38:17,142 p=78967 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:38:17,143 p=78967 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:38:17,493 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:38:17,723 p=78967 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:38:17,933 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:38:18,163 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:38:18,384 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:38:18,596 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:38:18,598 p=78967 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:38:19,932 p=78967 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:38:20,128 p=78967 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:38:20,129 p=78967 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:38:20,129 p=78967 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:38:20,129 p=78967 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:38:20,297 p=78967 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:38:20,298 p=78967 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:38:20,299 p=78967 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:38:20,299 p=78967 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:39:24,074 p=79177 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:39:24,075 p=79177 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:39:24,138 p=79177 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:39:24,194 p=79177 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:39:24,683 p=79177 u=root |  ok: [localhost]
2017-08-07 03:39:24,699 p=79177 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:39:24,915 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:39:25,020 p=79177 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:39:25,120 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:39:25,219 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:39:25,317 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:39:25,414 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:39:25,416 p=79177 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:39:25,788 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:39:26,008 p=79177 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:39:26,245 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:39:26,488 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:39:26,706 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:39:26,936 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:39:26,938 p=79177 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:39:28,327 p=79177 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:39:28,533 p=79177 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:39:28,533 p=79177 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:39:28,533 p=79177 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:39:28,534 p=79177 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:39:28,702 p=79177 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:39:28,704 p=79177 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:39:28,704 p=79177 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:39:28,704 p=79177 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:39:51,495 p=79407 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:39:51,496 p=79407 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:39:51,506 p=79407 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: {{ item.upg }} and ("{{ item.name }} is defiend")
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:40:07,944 p=79416 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:40:07,945 p=79416 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:40:07,955 p=79416 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 14, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: {{ item.upg }}
             ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:40:21,718 p=79425 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:40:21,719 p=79425 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:40:21,788 p=79425 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:40:21,831 p=79425 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:40:22,300 p=79425 u=root |  ok: [localhost]
2017-08-07 03:40:22,319 p=79425 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:40:22,445 p=79425 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:40:22,535 p=79425 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:40:22,535 p=79425 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:40:22,536 p=79425 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:40:22,536 p=79425 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:40:22,536 p=79425 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:40:22,537 p=79425 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:40:22,887 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:40:23,107 p=79425 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:40:23,343 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:40:23,568 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:40:23,800 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:40:24,012 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:40:24,015 p=79425 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:40:25,348 p=79425 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:40:25,541 p=79425 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:40:25,541 p=79425 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:40:25,542 p=79425 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:40:25,542 p=79425 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:40:25,710 p=79425 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:40:25,712 p=79425 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:40:25,712 p=79425 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:40:25,712 p=79425 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:43:15,690 p=79635 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:43:15,691 p=79635 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:43:15,700 p=79635 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 30, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: "{{ item.upg }}" and ({{ item.name }} is defined)
                             ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:43:36,436 p=79644 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:43:36,438 p=79644 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:43:36,446 p=79644 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 29, column 30, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: "{{ item.upg }}" and ("{{ item.name }}" is defined)
                             ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:48:45,566 p=79654 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:48:45,568 p=79654 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:48:45,638 p=79654 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:48:45,689 p=79654 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:48:46,161 p=79654 u=root |  ok: [localhost]
2017-08-07 03:48:46,179 p=79654 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:48:46,248 p=79654 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:48:46,403 p=79654 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:48:46,403 p=79654 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:48:46,403 p=79654 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:48:46,403 p=79654 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:48:46,404 p=79654 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:48:46,405 p=79654 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:48:46,745 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:48:46,977 p=79654 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:48:47,194 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-07 03:48:47,419 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-07 03:48:47,634 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-07 03:48:47,837 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:48:47,839 p=79654 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:48:49,189 p=79654 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:48:49,378 p=79654 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:48:49,378 p=79654 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:48:49,378 p=79654 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:48:49,378 p=79654 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:48:49,544 p=79654 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:48:49,546 p=79654 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:48:49,546 p=79654 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:48:49,546 p=79654 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:49:17,077 p=79864 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:49:17,078 p=79864 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:49:17,145 p=79864 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:49:17,188 p=79864 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:49:17,670 p=79864 u=root |  ok: [localhost]
2017-08-07 03:49:17,687 p=79864 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:49:17,818 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:49:17,912 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:49:17,912 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:49:17,912 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:49:17,912 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:49:17,912 p=79864 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:49:17,914 p=79864 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:49:17,982 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:49:18,285 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:49:18,285 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:49:18,285 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:49:18,285 p=79864 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:49:18,285 p=79864 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:49:18,287 p=79864 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:49:19,630 p=79864 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})
2017-08-07 03:49:19,808 p=79864 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": false}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:49:19,808 p=79864 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": false}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:49:19,808 p=79864 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:49:19,817 p=79864 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": false}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-07 03:49:19,985 p=79864 u=root |  ok: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-07 03:49:19,986 p=79864 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:49:19,986 p=79864 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:49:19,986 p=79864 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-07 03:57:45,697 p=80030 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:57:45,699 p=80030 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:57:45,707 p=80030 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 44, column 28, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      with_items: "{{ docker_projects }}"
      when: {{ item.upg }} and {{ item.key }} is defined
                           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 03:58:17,380 p=80039 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 03:58:17,381 p=80039 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 03:58:17,448 p=80039 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 03:58:17,494 p=80039 u=root |  TASK [setup] *******************************************************************
2017-08-07 03:58:17,966 p=80039 u=root |  ok: [localhost]
2017-08-07 03:58:17,983 p=80039 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 03:58:18,061 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:58:18,220 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,220 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,220 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,220 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,221 p=80039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:58:18,222 p=80039 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 03:58:18,287 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:58:18,571 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,571 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,571 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,571 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,571 p=80039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:58:18,573 p=80039 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 03:58:18,621 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 03:58:18,873 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,873 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,873 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,873 p=80039 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 03:58:18,873 p=80039 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 03:58:18,875 p=80039 u=root |  TASK [Show key] ****************************************************************
2017-08-07 03:58:18,914 p=80039 u=root |  ok: [localhost] => {
    "deployment_key": {
        "changed": false, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": false, 
                "checksum": "6f5c6efce1a6d836d195a7a59f55f2ac6d5ebf64", 
                "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "diff": {
                    "after": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }, 
                    "before": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }
                }, 
                "gid": 0, 
                "group": "root", 
                "invocation": {
                    "module_args": {
                        "backup": null, 
                        "content": null, 
                        "delimiter": null, 
                        "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "diff_peek": null, 
                        "directory_mode": null, 
                        "follow": false, 
                        "force": false, 
                        "group": null, 
                        "mode": 384, 
                        "original_basename": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "owner": null, 
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "recurse": false, 
                        "regexp": null, 
                        "remote_src": null, 
                        "selevel": null, 
                        "serole": null, 
                        "setype": null, 
                        "seuser": null, 
                        "src": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "state": null, 
                        "unsafe_writes": null, 
                        "validate": null
                    }
                }, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": true
                }, 
                "mode": "0600", 
                "owner": "root", 
                "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "secontext": "system_u:object_r:usr_t:s0", 
                "size": 1679, 
                "state": "file", 
                "uid": 0
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }
        ]
    }
}
2017-08-07 03:58:18,915 p=80039 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 03:58:18,957 p=80039 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.key }}' failed. The error was: template error while templating string: unexpected 'end of statement block'. String: {% if False and  %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 51, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Ensure docker project(s) is checked out\n      ^ here\n"}
2017-08-07 03:58:18,959 p=80039 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 03:58:18,959 p=80039 u=root |  PLAY RECAP *********************************************************************
2017-08-07 03:58:18,960 p=80039 u=root |  localhost                  : ok=5    changed=0    unreachable=0    failed=1   
2017-08-07 04:00:50,553 p=80131 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:00:50,555 p=80131 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:00:50,564 p=80131 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 14, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - docker_projects:
   ^ here

2017-08-07 04:01:07,180 p=80160 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:01:07,181 p=80160 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:01:07,190 p=80160 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 14, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - docker_projects:
    ^ here

2017-08-07 04:01:34,321 p=80169 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:01:34,322 p=80169 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:01:34,332 p=80169 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  upg_ansible_sandbox: true
  - docker_projects:
  ^ here

2017-08-07 04:01:48,338 p=80178 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:01:48,339 p=80178 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:01:48,349 p=80178 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 15, column 17, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - { upg: false, image: gitlab/gitlab-ce, name: , key: }
      - { upg: {{ upg_ansible_sandbox }}, image: slmansible, name: ansible-sandbox, key: slm_ansible_sandbox_ro_deployment_key_rsa }
                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-07 04:02:08,796 p=80187 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:02:08,797 p=80187 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:02:08,862 p=80187 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 04:02:08,911 p=80187 u=root |  TASK [setup] *******************************************************************
2017-08-07 04:02:09,377 p=80187 u=root |  ok: [localhost]
2017-08-07 04:02:09,394 p=80187 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 04:02:09,465 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:02:09,619 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,619 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,619 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,619 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,620 p=80187 u=root |  ok: [localhost] => (item={u'upg': u'upg_ansible_sandbox', u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:02:09,621 p=80187 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 04:02:09,733 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:02:09,971 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,971 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,971 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,971 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:02:09,971 p=80187 u=root |  ok: [localhost] => (item={u'upg': u'upg_ansible_sandbox', u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:02:09,973 p=80187 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 04:02:10,090 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:02:10,266 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:02:10,266 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:02:10,267 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:02:10,267 p=80187 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:02:10,267 p=80187 u=root |  ok: [localhost] => (item={u'upg': u'upg_ansible_sandbox', u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:02:10,269 p=80187 u=root |  TASK [Show key] ****************************************************************
2017-08-07 04:02:10,306 p=80187 u=root |  ok: [localhost] => {
    "deployment_key": {
        "changed": false, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": false, 
                "checksum": "6f5c6efce1a6d836d195a7a59f55f2ac6d5ebf64", 
                "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "diff": {
                    "after": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }, 
                    "before": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }
                }, 
                "gid": 0, 
                "group": "root", 
                "invocation": {
                    "module_args": {
                        "backup": null, 
                        "content": null, 
                        "delimiter": null, 
                        "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "diff_peek": null, 
                        "directory_mode": null, 
                        "follow": false, 
                        "force": false, 
                        "group": null, 
                        "mode": 384, 
                        "original_basename": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "owner": null, 
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "recurse": false, 
                        "regexp": null, 
                        "remote_src": null, 
                        "selevel": null, 
                        "serole": null, 
                        "setype": null, 
                        "seuser": null, 
                        "src": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "state": null, 
                        "unsafe_writes": null, 
                        "validate": null
                    }
                }, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": "upg_ansible_sandbox"
                }, 
                "mode": "0600", 
                "owner": "root", 
                "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "secontext": "system_u:object_r:usr_t:s0", 
                "size": 1679, 
                "state": "file", 
                "uid": 0
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }
        ]
    }
}
2017-08-07 04:02:10,308 p=80187 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 04:02:10,349 p=80187 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.key }}' failed. The error was: template error while templating string: unexpected 'end of statement block'. String: {% if False and  %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 52, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Ensure docker project(s) is checked out\n      ^ here\n"}
2017-08-07 04:02:10,351 p=80187 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 04:02:10,351 p=80187 u=root |  PLAY RECAP *********************************************************************
2017-08-07 04:02:10,351 p=80187 u=root |  localhost                  : ok=5    changed=0    unreachable=0    failed=1   
2017-08-07 04:03:12,919 p=80278 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:03:12,920 p=80278 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:03:12,986 p=80278 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 04:03:13,034 p=80278 u=root |  TASK [setup] *******************************************************************
2017-08-07 04:03:13,502 p=80278 u=root |  ok: [localhost]
2017-08-07 04:03:13,519 p=80278 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 04:03:13,559 p=80278 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "[{u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}, {u'upg': u'{{ upg_ansible_sandbox }}', u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}, {u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}, {u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}, {u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}, {u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}]: 'upg_ansible_sandbox' is undefined"}
2017-08-07 04:03:13,561 p=80278 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 04:03:13,561 p=80278 u=root |  PLAY RECAP *********************************************************************
2017-08-07 04:03:13,562 p=80278 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 04:03:30,725 p=80339 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:03:30,727 p=80339 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:03:30,735 p=80339 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 13, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  upg_ansible_sandbox: true
  - docker_projects:
  ^ here

2017-08-07 04:03:51,315 p=80348 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:03:51,316 p=80348 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:03:51,385 p=80348 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 04:03:51,437 p=80348 u=root |  TASK [setup] *******************************************************************
2017-08-07 04:03:51,916 p=80348 u=root |  ok: [localhost]
2017-08-07 04:03:51,934 p=80348 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 04:03:52,061 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:03:52,157 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,157 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,157 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,157 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,157 p=80348 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:03:52,159 p=80348 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 04:03:52,233 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:03:52,518 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,518 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,518 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,519 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,519 p=80348 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:03:52,521 p=80348 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 04:03:52,638 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:03:52,811 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,812 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,812 p=80348 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:03:52,815 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,815 p=80348 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:03:52,817 p=80348 u=root |  TASK [Show key] ****************************************************************
2017-08-07 04:03:52,857 p=80348 u=root |  ok: [localhost] => {
    "deployment_key": {
        "changed": false, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": false, 
                "checksum": "6f5c6efce1a6d836d195a7a59f55f2ac6d5ebf64", 
                "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "diff": {
                    "after": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }, 
                    "before": {
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa"
                    }
                }, 
                "gid": 0, 
                "group": "root", 
                "invocation": {
                    "module_args": {
                        "backup": null, 
                        "content": null, 
                        "delimiter": null, 
                        "dest": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "diff_peek": null, 
                        "directory_mode": null, 
                        "follow": false, 
                        "force": false, 
                        "group": null, 
                        "mode": 384, 
                        "original_basename": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "owner": null, 
                        "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "recurse": false, 
                        "regexp": null, 
                        "remote_src": null, 
                        "selevel": null, 
                        "serole": null, 
                        "setype": null, 
                        "seuser": null, 
                        "src": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                        "state": null, 
                        "unsafe_writes": null, 
                        "validate": null
                    }
                }, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": true
                }, 
                "mode": "0600", 
                "owner": "root", 
                "path": "/opt/csc/slm_ansible_sandbox_ro_deployment_key_rsa", 
                "secontext": "system_u:object_r:usr_t:s0", 
                "size": 1679, 
                "state": "file", 
                "uid": 0
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }
        ]
    }
}
2017-08-07 04:03:52,859 p=80348 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 04:03:52,904 p=80348 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ item.upg }} and {{ item.key }}' failed. The error was: template error while templating string: unexpected 'end of statement block'. String: {% if False and  %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/healthcheck.yml': line 52, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Ensure docker project(s) is checked out\n      ^ here\n"}
2017-08-07 04:03:52,906 p=80348 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/healthcheck.retry

2017-08-07 04:03:52,906 p=80348 u=root |  PLAY RECAP *********************************************************************
2017-08-07 04:03:52,906 p=80348 u=root |  localhost                  : ok=5    changed=0    unreachable=0    failed=1   
2017-08-07 04:04:48,234 p=80438 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 04:04:48,235 p=80438 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 04:04:48,299 p=80438 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-07 04:04:48,346 p=80438 u=root |  TASK [setup] *******************************************************************
2017-08-07 04:04:48,816 p=80438 u=root |  ok: [localhost]
2017-08-07 04:04:48,835 p=80438 u=root |  TASK [Remove existing project from /opt/csc/src] *******************************
2017-08-07 04:04:48,900 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:04:49,052 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,053 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,053 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,053 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,053 p=80438 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:04:49,055 p=80438 u=root |  TASK [Remove existing Docker image] ********************************************
2017-08-07 04:04:49,112 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:04:49,425 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,425 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,425 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,426 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,426 p=80438 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:04:49,428 p=80438 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-07 04:04:49,545 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:04:49,725 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,725 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,725 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,725 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:04:49,725 p=80438 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:04:49,727 p=80438 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-07 04:04:49,865 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-07 04:04:50,680 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-07 04:04:50,680 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-07 04:04:50,680 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-07 04:04:50,680 p=80438 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-07 04:04:50,680 p=80438 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-07 04:04:50,681 p=80438 u=root |  PLAY RECAP *********************************************************************
2017-08-07 04:04:50,681 p=80438 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-07 06:15:34,241 p=80629 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 06:15:34,242 p=80629 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 06:15:34,308 p=80629 u=root |  PLAY [test] ********************************************************************
2017-08-07 06:15:34,358 p=80629 u=root |  TASK [setup] *******************************************************************
2017-08-07 06:15:34,847 p=80629 u=root |  ok: [localhost]
2017-08-07 06:15:34,850 p=80629 u=root |  TASK [Test] ********************************************************************
2017-08-07 06:20:35,402 p=80629 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-07 06:20:35,404 p=80629 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/test.retry

2017-08-07 06:20:35,404 p=80629 u=root |  PLAY RECAP *********************************************************************
2017-08-07 06:20:35,404 p=80629 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 22:32:13,449 p=81195 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 22:32:13,451 p=81195 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 22:32:13,534 p=81195 u=root |  PLAY [test] ********************************************************************
2017-08-07 22:32:13,588 p=81195 u=root |  TASK [setup] *******************************************************************
2017-08-07 22:32:14,152 p=81195 u=root |  ok: [localhost]
2017-08-07 22:32:14,154 p=81195 u=root |  TASK [Test] ********************************************************************
2017-08-07 22:32:55,069 p=81195 u=root |   [ERROR]: User interrupted execution

2017-08-07 23:41:56,121 p=81292 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:41:56,122 p=81292 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:41:56,192 p=81292 u=root |  PLAY [Wait] ********************************************************************
2017-08-07 23:41:56,242 p=81292 u=root |  TASK [setup] *******************************************************************
2017-08-07 23:41:56,727 p=81292 u=root |  ok: [localhost]
2017-08-07 23:41:56,730 p=81292 u=root |  TASK [Wait] ********************************************************************
2017-08-07 23:44:06,234 p=81292 u=root |   [ERROR]: User interrupted execution

2017-08-07 23:53:47,160 p=81360 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:53:47,161 p=81360 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:53:47,170 p=81360 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/wait.yml': line 15, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Wait
  ^ here

2017-08-07 23:54:10,019 p=81369 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:54:10,020 p=81369 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:54:10,052 p=81369 u=root |  ERROR! 'var' is not a valid attribute for a Task

The error appears to have been in '/opt/autodeploy/projects/container_upg/wait.yml': line 11, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - debug:
    ^ here

2017-08-07 23:54:26,903 p=81378 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:54:26,905 p=81378 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:54:26,968 p=81378 u=root |  PLAY [Wait] ********************************************************************
2017-08-07 23:54:27,012 p=81378 u=root |  TASK [setup] *******************************************************************
2017-08-07 23:54:27,511 p=81378 u=root |  ok: [localhost]
2017-08-07 23:54:27,514 p=81378 u=root |  TASK [Check for wait] **********************************************************
2017-08-07 23:54:27,704 p=81378 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003243", "end": "2017-08-07 23:54:27.688816", "failed": true, "rc": 1, "start": "2017-08-07 23:54:27.685573", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-07 23:54:27,705 p=81378 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-07 23:54:27,706 p=81378 u=root |  PLAY RECAP *********************************************************************
2017-08-07 23:54:27,706 p=81378 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-07 23:55:18,343 p=81444 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:55:18,344 p=81444 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:55:18,408 p=81444 u=root |  PLAY [Wait] ********************************************************************
2017-08-07 23:55:18,451 p=81444 u=root |  TASK [setup] *******************************************************************
2017-08-07 23:55:18,926 p=81444 u=root |  ok: [localhost]
2017-08-07 23:55:18,928 p=81444 u=root |  TASK [Check for wait] **********************************************************
2017-08-07 23:55:19,123 p=81444 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003214", "end": "2017-08-07 23:55:19.110133", "failed": true, "rc": 1, "start": "2017-08-07 23:55:19.106919", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-07 23:55:19,124 p=81444 u=root |  ...ignoring
2017-08-07 23:55:19,126 p=81444 u=root |  TASK [debug] *******************************************************************
2017-08-07 23:55:19,181 p=81444 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003214", 
        "end": "2017-08-07 23:55:19.110133", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-07 23:55:19.106919", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-07 23:55:19,183 p=81444 u=root |  TASK [Wait] ********************************************************************
2017-08-07 23:55:57,403 p=81444 u=root |   [ERROR]: User interrupted execution

2017-08-07 23:56:34,708 p=81515 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:56:34,710 p=81515 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:56:34,771 p=81515 u=root |  PLAY [Wait] ********************************************************************
2017-08-07 23:56:34,817 p=81515 u=root |  TASK [setup] *******************************************************************
2017-08-07 23:56:35,287 p=81515 u=root |  ok: [localhost]
2017-08-07 23:56:35,290 p=81515 u=root |  TASK [Check for wait] **********************************************************
2017-08-07 23:56:35,484 p=81515 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003378", "end": "2017-08-07 23:56:35.470985", "failed": true, "rc": 1, "start": "2017-08-07 23:56:35.467607", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-07 23:56:35,484 p=81515 u=root |  ...ignoring
2017-08-07 23:56:35,486 p=81515 u=root |  TASK [debug] *******************************************************************
2017-08-07 23:56:35,545 p=81515 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003378", 
        "end": "2017-08-07 23:56:35.470985", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-07 23:56:35.467607", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-07 23:56:35,548 p=81515 u=root |  TASK [Wait] ********************************************************************
2017-08-07 23:57:03,832 p=81515 u=root |   [ERROR]: User interrupted execution

2017-08-07 23:57:28,116 p=81587 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-07 23:57:28,117 p=81587 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-07 23:57:28,184 p=81587 u=root |  PLAY [Wait] ********************************************************************
2017-08-07 23:57:28,232 p=81587 u=root |  TASK [setup] *******************************************************************
2017-08-07 23:57:28,725 p=81587 u=root |  ok: [localhost]
2017-08-07 23:57:28,728 p=81587 u=root |  TASK [Check for wait] **********************************************************
2017-08-07 23:57:28,924 p=81587 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003274", "end": "2017-08-07 23:57:28.910358", "failed": true, "rc": 1, "start": "2017-08-07 23:57:28.907084", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-07 23:57:28,924 p=81587 u=root |  ...ignoring
2017-08-07 23:57:28,926 p=81587 u=root |  TASK [debug] *******************************************************************
2017-08-07 23:57:28,981 p=81587 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003274", 
        "end": "2017-08-07 23:57:28.910358", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-07 23:57:28.907084", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-07 23:57:28,984 p=81587 u=root |  TASK [Wait] ********************************************************************
2017-08-07 23:58:35,644 p=81587 u=root |   [ERROR]: User interrupted execution

2017-08-08 00:04:55,570 p=82028 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 00:04:55,571 p=82028 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 00:04:55,641 p=82028 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 00:04:55,692 p=82028 u=root |  TASK [setup] *******************************************************************
2017-08-08 00:04:56,199 p=82028 u=root |  ok: [localhost]
2017-08-08 00:04:56,201 p=82028 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 00:04:56,392 p=82028 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003189", "end": "2017-08-08 00:04:56.377600", "failed": true, "rc": 1, "start": "2017-08-08 00:04:56.374411", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 00:04:56,392 p=82028 u=root |  ...ignoring
2017-08-08 00:04:56,394 p=82028 u=root |  TASK [debug] *******************************************************************
2017-08-08 00:04:56,449 p=82028 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003189", 
        "end": "2017-08-08 00:04:56.377600", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 00:04:56.374411", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 00:04:56,451 p=82028 u=root |  TASK [Wait] ********************************************************************
2017-08-08 00:05:04,503 p=82028 u=root |   [ERROR]: User interrupted execution

2017-08-08 00:45:43,749 p=82433 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 00:45:43,751 p=82433 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 00:45:43,813 p=82433 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 00:45:43,857 p=82433 u=root |  TASK [setup] *******************************************************************
2017-08-08 00:45:44,371 p=82433 u=root |  ok: [localhost]
2017-08-08 00:45:44,375 p=82433 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 00:45:44,566 p=82433 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003496", "end": "2017-08-08 00:45:44.551914", "failed": true, "rc": 1, "start": "2017-08-08 00:45:44.548418", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 00:45:44,566 p=82433 u=root |  ...ignoring
2017-08-08 00:45:44,568 p=82433 u=root |  TASK [debug] *******************************************************************
2017-08-08 00:45:44,627 p=82433 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003496", 
        "end": "2017-08-08 00:45:44.551914", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 00:45:44.548418", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 00:45:44,629 p=82433 u=root |  TASK [Wait] ********************************************************************
2017-08-08 00:50:44,871 p=82433 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-08 00:50:44,873 p=82433 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-08 00:50:44,873 p=82433 u=root |  PLAY RECAP *********************************************************************
2017-08-08 00:50:44,873 p=82433 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-08 01:24:45,654 p=82543 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 01:24:45,655 p=82543 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 01:24:45,719 p=82543 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 01:24:45,765 p=82543 u=root |  TASK [setup] *******************************************************************
2017-08-08 01:24:46,242 p=82543 u=root |  ok: [localhost]
2017-08-08 01:24:46,245 p=82543 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 01:24:46,442 p=82543 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003422", "end": "2017-08-08 01:24:46.425950", "failed": true, "rc": 1, "start": "2017-08-08 01:24:46.422528", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 01:24:46,442 p=82543 u=root |  ...ignoring
2017-08-08 01:24:46,445 p=82543 u=root |  TASK [debug] *******************************************************************
2017-08-08 01:24:46,524 p=82543 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003422", 
        "end": "2017-08-08 01:24:46.425950", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 01:24:46.422528", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 01:24:46,526 p=82543 u=root |  TASK [Wait] ********************************************************************
2017-08-08 01:25:03,274 p=82543 u=root |   [ERROR]: User interrupted execution

2017-08-08 01:28:26,525 p=82882 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 01:28:26,526 p=82882 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 01:28:26,589 p=82882 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 01:28:26,636 p=82882 u=root |  TASK [setup] *******************************************************************
2017-08-08 01:28:27,103 p=82882 u=root |  ok: [localhost]
2017-08-08 01:28:27,105 p=82882 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 01:28:27,288 p=82882 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003137", "end": "2017-08-08 01:28:27.275056", "failed": true, "rc": 1, "start": "2017-08-08 01:28:27.271919", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 01:28:27,288 p=82882 u=root |  ...ignoring
2017-08-08 01:28:27,290 p=82882 u=root |  TASK [debug] *******************************************************************
2017-08-08 01:28:27,351 p=82882 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003137", 
        "end": "2017-08-08 01:28:27.275056", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 01:28:27.271919", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 01:28:27,353 p=82882 u=root |  TASK [Wait] ********************************************************************
2017-08-08 01:29:29,697 p=82882 u=root |   [ERROR]: User interrupted execution

2017-08-08 01:37:20,899 p=83111 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 01:37:20,901 p=83111 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 01:37:20,958 p=83111 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 01:37:21,012 p=83111 u=root |  TASK [setup] *******************************************************************
2017-08-08 01:37:21,484 p=83111 u=root |  ok: [localhost]
2017-08-08 01:37:21,487 p=83111 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 01:37:21,713 p=83111 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003368", "end": "2017-08-08 01:37:21.697543", "failed": true, "rc": 1, "start": "2017-08-08 01:37:21.694175", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 01:37:21,713 p=83111 u=root |  ...ignoring
2017-08-08 01:37:21,715 p=83111 u=root |  TASK [debug] *******************************************************************
2017-08-08 01:37:21,778 p=83111 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003368", 
        "end": "2017-08-08 01:37:21.697543", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 01:37:21.694175", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 01:37:21,781 p=83111 u=root |  TASK [Wait] ********************************************************************
2017-08-08 01:38:31,428 p=83111 u=root |   [ERROR]: User interrupted execution

2017-08-08 01:46:03,540 p=83243 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 01:46:03,541 p=83243 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 01:46:03,603 p=83243 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 01:46:03,650 p=83243 u=root |  TASK [setup] *******************************************************************
2017-08-08 01:46:04,138 p=83243 u=root |  ok: [localhost]
2017-08-08 01:46:04,142 p=83243 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 01:46:04,370 p=83243 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003149", "end": "2017-08-08 01:46:04.356685", "failed": true, "rc": 1, "start": "2017-08-08 01:46:04.353536", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 01:46:04,371 p=83243 u=root |  ...ignoring
2017-08-08 01:46:04,373 p=83243 u=root |  TASK [debug] *******************************************************************
2017-08-08 01:46:04,434 p=83243 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003149", 
        "end": "2017-08-08 01:46:04.356685", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 01:46:04.353536", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 01:46:04,438 p=83243 u=root |  TASK [Wait] ********************************************************************
2017-08-08 01:47:46,775 p=83243 u=root |   [ERROR]: User interrupted execution

2017-08-08 01:54:05,642 p=83371 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 01:54:05,644 p=83371 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 01:54:05,715 p=83371 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 01:54:05,777 p=83371 u=root |  TASK [setup] *******************************************************************
2017-08-08 01:54:06,283 p=83371 u=root |  ok: [localhost]
2017-08-08 01:54:06,287 p=83371 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 01:54:06,479 p=83371 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003348", "end": "2017-08-08 01:54:06.465854", "failed": true, "rc": 1, "start": "2017-08-08 01:54:06.462506", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 01:54:06,479 p=83371 u=root |  ...ignoring
2017-08-08 01:54:06,482 p=83371 u=root |  TASK [debug] *******************************************************************
2017-08-08 01:54:06,540 p=83371 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003348", 
        "end": "2017-08-08 01:54:06.465854", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 01:54:06.462506", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 01:54:06,542 p=83371 u=root |  TASK [Wait] ********************************************************************
2017-08-08 01:55:37,790 p=83371 u=root |   [ERROR]: User interrupted execution

2017-08-08 05:03:23,463 p=83675 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-08 05:03:23,465 p=83675 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-08 05:03:23,535 p=83675 u=root |  PLAY [Wait] ********************************************************************
2017-08-08 05:03:23,583 p=83675 u=root |  TASK [setup] *******************************************************************
2017-08-08 05:03:24,133 p=83675 u=root |  ok: [localhost]
2017-08-08 05:03:24,136 p=83675 u=root |  TASK [Check for wait] **********************************************************
2017-08-08 05:03:24,344 p=83675 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003436", "end": "2017-08-08 05:03:24.331115", "failed": true, "rc": 1, "start": "2017-08-08 05:03:24.327679", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-08 05:03:24,345 p=83675 u=root |  ...ignoring
2017-08-08 05:03:24,347 p=83675 u=root |  TASK [debug] *******************************************************************
2017-08-08 05:03:24,405 p=83675 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003436", 
        "end": "2017-08-08 05:03:24.331115", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-08 05:03:24.327679", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-08 05:03:24,409 p=83675 u=root |  TASK [Wait] ********************************************************************
2017-08-08 05:08:24,636 p=83675 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-08 05:08:24,637 p=83675 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-08 05:08:24,638 p=83675 u=root |  PLAY RECAP *********************************************************************
2017-08-08 05:08:24,638 p=83675 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 04:29:41,190 p=110571 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:29:41,191 p=110571 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:29:41,261 p=110571 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:29:41,306 p=110571 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:29:41,873 p=110571 u=root |  ok: [localhost]
2017-08-12 04:29:41,889 p=110571 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:29:42,118 p=110571 u=root |  changed: [localhost]
2017-08-12 04:29:42,120 p=110571 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:29:42,159 p=110571 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^zsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.061298", 
        "end": "2017-08-12 04:29:42.105629", 
        "rc": 0, 
        "start": "2017-08-12 04:29:42.044331", 
        "stderr": "", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 04:29:42,162 p=110571 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:29:42,180 p=110571 u=root |  ok: [localhost]
2017-08-12 04:29:42,183 p=110571 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:29:42,218 p=110571 u=root |  skipping: [localhost]
2017-08-12 04:29:42,219 p=110571 u=root |  TASK [Print existing slmio docker image and tag] *******************************
2017-08-12 04:29:42,254 p=110571 u=root |  ok: [localhost] => {
    "current_imagetag": ""
}
2017-08-12 04:29:42,256 p=110571 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] ************
2017-08-12 04:29:42,295 p=110571 u=root |  skipping: [localhost]
2017-08-12 04:29:42,296 p=110571 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:29:42,296 p=110571 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 04:31:24,233 p=110674 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:31:24,235 p=110674 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:31:24,300 p=110674 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:31:24,345 p=110674 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:31:24,860 p=110674 u=root |  ok: [localhost]
2017-08-12 04:31:24,879 p=110674 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:31:25,111 p=110674 u=root |  changed: [localhost]
2017-08-12 04:31:25,113 p=110674 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:31:25,156 p=110674 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.058406", 
        "end": "2017-08-12 04:31:25.098677", 
        "rc": 0, 
        "start": "2017-08-12 04:31:25.040271", 
        "stderr": "", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 04:31:25,158 p=110674 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:31:25,172 p=110674 u=root |  ok: [localhost]
2017-08-12 04:31:25,176 p=110674 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:31:25,211 p=110674 u=root |  skipping: [localhost]
2017-08-12 04:31:25,213 p=110674 u=root |  TASK [Print existing slmio docker image and tag] *******************************
2017-08-12 04:31:25,252 p=110674 u=root |  ok: [localhost] => {
    "current_imagetag": ""
}
2017-08-12 04:31:25,254 p=110674 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] ************
2017-08-12 04:31:25,291 p=110674 u=root |  skipping: [localhost]
2017-08-12 04:31:25,292 p=110674 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:31:25,292 p=110674 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 04:31:48,790 p=110756 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:31:48,791 p=110756 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:31:48,858 p=110756 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:31:48,910 p=110756 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:31:49,411 p=110756 u=root |  ok: [localhost]
2017-08-12 04:31:49,429 p=110756 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:31:49,672 p=110756 u=root |  changed: [localhost]
2017-08-12 04:31:49,674 p=110756 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:31:49,714 p=110756 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.073700", 
        "end": "2017-08-12 04:31:49.659474", 
        "rc": 0, 
        "start": "2017-08-12 04:31:49.585774", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 04:31:49,716 p=110756 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:31:49,732 p=110756 u=root |  ok: [localhost]
2017-08-12 04:31:49,734 p=110756 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:31:49,774 p=110756 u=root |  ok: [localhost]
2017-08-12 04:31:49,776 p=110756 u=root |  TASK [Print existing slmio docker image and tag] *******************************
2017-08-12 04:31:49,818 p=110756 u=root |  ok: [localhost] => {
    "current_imagetag": "v1.0.0"
}
2017-08-12 04:31:49,820 p=110756 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] ************
2017-08-12 04:31:49,864 p=110756 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'current_imagetag != desired_slmiotag' failed. The error was: error while evaluating conditional (current_imagetag != desired_slmiotag): 'desired_slmiotag' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 56, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Remove existing image if versions dont match (force rebuild)\n    ^ here\n"}
2017-08-12 04:31:49,865 p=110756 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-12 04:31:49,865 p=110756 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:31:49,865 p=110756 u=root |  localhost                  : ok=6    changed=1    unreachable=0    failed=1   
2017-08-12 04:32:29,209 p=110838 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:32:29,210 p=110838 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:32:29,275 p=110838 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:32:29,325 p=110838 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:32:29,818 p=110838 u=root |  ok: [localhost]
2017-08-12 04:32:29,838 p=110838 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:32:30,074 p=110838 u=root |  changed: [localhost]
2017-08-12 04:32:30,077 p=110838 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:32:30,117 p=110838 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.059162", 
        "end": "2017-08-12 04:32:30.061536", 
        "rc": 0, 
        "start": "2017-08-12 04:32:30.002374", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 04:32:30,119 p=110838 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:32:30,133 p=110838 u=root |  ok: [localhost]
2017-08-12 04:32:30,135 p=110838 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:32:30,175 p=110838 u=root |  ok: [localhost]
2017-08-12 04:32:30,177 p=110838 u=root |  TASK [Print existing slmio docker image and tag] *******************************
2017-08-12 04:32:30,218 p=110838 u=root |  ok: [localhost] => {
    "current_imagetag": "v1.0.0"
}
2017-08-12 04:32:30,221 p=110838 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] ************
2017-08-12 04:32:30,263 p=110838 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'current_imagetag != desired_imagetag' failed. The error was: error while evaluating conditional (current_imagetag != desired_imagetag): 'desired_imagetag' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 56, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Remove existing image if versions dont match (force rebuild)\n    ^ here\n"}
2017-08-12 04:32:30,264 p=110838 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-12 04:32:30,264 p=110838 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:32:30,264 p=110838 u=root |  localhost                  : ok=6    changed=1    unreachable=0    failed=1   
2017-08-12 04:35:22,698 p=110956 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:35:22,699 p=110956 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:35:22,766 p=110956 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:35:22,811 p=110956 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:35:23,300 p=110956 u=root |  ok: [localhost]
2017-08-12 04:35:23,318 p=110956 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:35:23,546 p=110956 u=root |  changed: [localhost]
2017-08-12 04:35:23,548 p=110956 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:35:23,589 p=110956 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.061668", 
        "end": "2017-08-12 04:35:23.533480", 
        "rc": 0, 
        "start": "2017-08-12 04:35:23.471812", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 04:35:23,591 p=110956 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:35:23,606 p=110956 u=root |  ok: [localhost]
2017-08-12 04:35:23,609 p=110956 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:35:23,644 p=110956 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ slmio_images.images | length > 0 }}' failed. The error was: error while evaluating conditional ({{ slmio_images.images | length > 0 }}): 'slmio_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 42, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Get existing image and tag\n    ^ here\n"}
2017-08-12 04:35:23,646 p=110956 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-12 04:35:23,646 p=110956 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:35:23,646 p=110956 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-12 04:35:54,727 p=111034 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 04:35:54,729 p=111034 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 04:35:54,793 p=111034 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 04:35:54,838 p=111034 u=root |  TASK [setup] *******************************************************************
2017-08-12 04:35:55,308 p=111034 u=root |  ok: [localhost]
2017-08-12 04:35:55,326 p=111034 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 04:35:55,555 p=111034 u=root |  changed: [localhost]
2017-08-12 04:35:55,557 p=111034 u=root |  TASK [debug] *******************************************************************
2017-08-12 04:35:55,604 p=111034 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.059747", 
        "end": "2017-08-12 04:35:55.542053", 
        "rc": 0, 
        "start": "2017-08-12 04:35:55.482306", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 04:35:55,606 p=111034 u=root |  TASK [set_fact] ****************************************************************
2017-08-12 04:35:55,620 p=111034 u=root |  ok: [localhost]
2017-08-12 04:35:55,623 p=111034 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 04:35:55,663 p=111034 u=root |  ok: [localhost]
2017-08-12 04:35:55,664 p=111034 u=root |  TASK [Print existing slmio docker image and tag] *******************************
2017-08-12 04:35:55,703 p=111034 u=root |  ok: [localhost] => {
    "current_imagetag": "v1.0.0"
}
2017-08-12 04:35:55,705 p=111034 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] ************
2017-08-12 04:35:57,573 p=111034 u=root |  changed: [localhost]
2017-08-12 04:35:57,576 p=111034 u=root |  PLAY RECAP *********************************************************************
2017-08-12 04:35:57,576 p=111034 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-12 06:18:41,815 p=118952 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:18:41,816 p=118952 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:18:41,831 p=118952 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/tag.yml': line 28, column 53, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - { upg: "{{ upg_slamio }}", image: slamio, name: docker-mediacascade, key: slamio_ro_deployment_key_rsa }
      - { upg: "{{ upg_slmzsync }}", image: slmzsync:v1.0.0, name: docker-mediacascade, key: slm_mediacascade_ro_deployment_key_rsa }
                                                    ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 06:19:13,566 p=118961 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:19:13,567 p=118961 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:19:13,667 p=118961 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:19:13,746 p=118961 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:19:14,364 p=118961 u=root |  ok: [localhost]
2017-08-12 06:19:14,381 p=118961 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:19:14,453 p=118961 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": true}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:19:14,453 p=118961 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:19:14,453 p=118961 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:19:14,465 p=118961 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:19:14,465 p=118961 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": true}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:19:14,773 p=118961 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:19:14,777 p=118961 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:19:14,777 p=118961 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:19:14,777 p=118961 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-12 06:20:17,430 p=119030 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:20:17,432 p=119030 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:20:17,498 p=119030 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:20:17,545 p=119030 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:20:18,031 p=119030 u=root |  ok: [localhost]
2017-08-12 06:20:18,049 p=119030 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:20:18,115 p=119030 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:20:18,115 p=119030 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:20:18,194 p=119030 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:20:18,194 p=119030 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": true}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:20:18,194 p=119030 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": true}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:20:18,429 p=119030 u=root |  ...ignoring
2017-08-12 06:20:18,430 p=119030 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:20:18,431 p=119030 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:20:18,577 p=119030 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:20:18,577 p=119030 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:20:19,387 p=119030 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 06:20:20,449 p=119030 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-12 06:20:21,295 p=119030 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-12 06:20:22,784 p=119030 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:20:22,786 p=119030 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:20:22,824 p=119030 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tag.yml': line 51, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Checkout the latest tagged version\n      ^ here\n"}
2017-08-12 06:20:22,826 p=119030 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:20:22,826 p=119030 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:20:22,826 p=119030 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-12 06:22:15,978 p=119175 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:22:15,979 p=119175 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:22:16,048 p=119175 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:22:16,102 p=119175 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:22:16,586 p=119175 u=root |  ok: [localhost]
2017-08-12 06:22:16,606 p=119175 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:22:16,671 p=119175 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:22:16,671 p=119175 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:22:16,694 p=119175 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:22:16,694 p=119175 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": true}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:22:16,695 p=119175 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": true}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:22:16,994 p=119175 u=root |  ...ignoring
2017-08-12 06:22:16,994 p=119175 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:22:16,996 p=119175 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:22:17,141 p=119175 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:22:17,142 p=119175 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:22:18,709 p=119175 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 06:22:20,508 p=119175 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-12 06:22:22,495 p=119175 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-12 06:22:23,966 p=119175 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:22:23,968 p=119175 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:22:24,175 p=119175 u=root |  failed: [localhost] (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) => {"changed": true, "cmd": "git checkout $(git describe --abbrev=0 --tags)", "delta": "0:00:00.003937", "end": "2017-08-12 06:22:24.154969", "failed": true, "item": {"image": "gitlab/gitlab-ce", "key": null, "name": null, "upg": false}, "rc": 128, "start": "2017-08-12 06:22:24.151032", "stderr": "fatal: Not a git repository (or any of the parent directories): .git\nfatal: Not a git repository (or any of the parent directories): .git", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 06:22:24,277 p=119175 u=root |  changed: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})
2017-08-12 06:22:24,372 p=119175 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 06:22:24,470 p=119175 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-12 06:22:24,568 p=119175 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-12 06:22:24,659 p=119175 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:22:24,661 p=119175 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:22:24,661 p=119175 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:22:24,661 p=119175 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 06:23:28,780 p=119394 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:23:28,781 p=119394 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:23:28,850 p=119394 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:23:28,896 p=119394 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:23:29,382 p=119394 u=root |  ok: [localhost]
2017-08-12 06:23:29,400 p=119394 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:23:29,460 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:23:29,460 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:23:29,555 p=119394 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slamio", "key": "slamio_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "msg": "Unable to find 'slamio_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:23:29,555 p=119394 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmsamba", "key": "slm_slmsamba_ro_deployment_key_rsa", "name": "docker-slmsamba", "upg": true}, "msg": "Unable to find 'slm_slmsamba_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:23:29,556 p=119394 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": true}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-12 06:23:29,786 p=119394 u=root |  ...ignoring
2017-08-12 06:23:29,786 p=119394 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:23:29,788 p=119394 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:23:29,931 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:23:29,931 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:23:31,424 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 06:23:32,910 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-12 06:23:34,423 p=119394 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-12 06:23:35,843 p=119394 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:23:35,845 p=119394 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:23:35,904 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:23:35,904 p=119394 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:23:36,053 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 06:23:36,150 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})
2017-08-12 06:23:36,248 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})
2017-08-12 06:23:36,347 p=119394 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:23:36,350 p=119394 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 06:23:36,390 p=119394 u=root |  ok: [localhost] => {
    "slmzsync_tag": "VARIABLE IS NOT DEFINED!"
}
2017-08-12 06:23:36,392 p=119394 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:23:36,392 p=119394 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-12 06:25:28,793 p=119601 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:25:28,794 p=119601 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:25:28,862 p=119601 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:25:28,909 p=119601 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:25:29,387 p=119601 u=root |  ok: [localhost]
2017-08-12 06:25:29,405 p=119601 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:25:29,469 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,469 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,470 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:25:29,549 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,549 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,779 p=119601 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:25:29,780 p=119601 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:25:29,850 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,850 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,850 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,851 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:25:29,851 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:25:31,333 p=119601 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:25:31,335 p=119601 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:25:31,391 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:25:31,391 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:25:31,392 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:25:31,392 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:25:31,408 p=119601 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:25:31,561 p=119601 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:25:31,563 p=119601 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 06:25:31,605 p=119601 u=root |  ok: [localhost] => {
    "slmzsync_tag": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
                "delta": "0:00:00.005276", 
                "end": "2017-08-12 06:25:31.547655", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "git checkout $(git describe --abbrev=0 --tags)", 
                        "_uses_shell": true, 
                        "chdir": "/opt/csc/src/docker-mediacascade", 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": true
                }, 
                "rc": 0, 
                "start": "2017-08-12 06:25:31.542379", 
                "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-12 06:25:31,607 p=119601 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:25:31,607 p=119601 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 06:43:02,548 p=119710 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:43:02,550 p=119710 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:43:02,618 p=119710 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:43:02,672 p=119710 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:43:03,176 p=119710 u=root |  ok: [localhost]
2017-08-12 06:43:03,194 p=119710 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:43:03,271 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,271 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,272 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,272 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,272 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:03,562 p=119710 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:03,564 p=119710 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:43:03,654 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,654 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,654 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,655 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:03,655 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:05,104 p=119710 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:05,106 p=119710 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:43:05,174 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:05,174 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:05,175 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:05,175 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:05,175 p=119710 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:05,322 p=119710 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:05,324 p=119710 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 06:43:05,366 p=119710 u=root |  ok: [localhost] => {
    "slmzsync_tag.stdout": "VARIABLE IS NOT DEFINED!"
}
2017-08-12 06:43:05,368 p=119710 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:43:05,368 p=119710 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 06:43:21,270 p=119818 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:43:21,271 p=119818 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:43:21,343 p=119818 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:43:21,390 p=119818 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:43:21,863 p=119818 u=root |  ok: [localhost]
2017-08-12 06:43:21,882 p=119818 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:43:21,947 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:21,947 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:21,947 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:21,970 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:21,970 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:22,248 p=119818 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:22,250 p=119818 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:43:22,399 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:22,400 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:22,400 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:22,400 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:22,400 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:23,877 p=119818 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:23,879 p=119818 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:43:23,953 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:43:23,953 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:43:23,954 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:43:23,954 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:43:23,954 p=119818 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:43:24,096 p=119818 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:43:24,098 p=119818 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 06:43:24,141 p=119818 u=root |  ok: [localhost] => {
    "slmzsync_tag.stdout_lines": "VARIABLE IS NOT DEFINED!"
}
2017-08-12 06:43:24,143 p=119818 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:43:24,143 p=119818 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 06:46:54,339 p=119930 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:46:54,341 p=119930 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:46:54,424 p=119930 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:46:54,495 p=119930 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:46:55,010 p=119930 u=root |  ok: [localhost]
2017-08-12 06:46:55,029 p=119930 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:46:55,094 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,094 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,095 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,095 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:46:55,183 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,440 p=119930 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:46:55,442 p=119930 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:46:55,532 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,532 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,533 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,533 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:46:55,533 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:46:56,405 p=119930 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:46:56,407 p=119930 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:46:56,466 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:46:56,467 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:46:56,467 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:46:56,557 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:46:56,557 p=119930 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:46:56,654 p=119930 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:46:56,657 p=119930 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 06:46:56,701 p=119930 u=root |  ok: [localhost] => {
    "slmzsync_tag": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
                "delta": "0:00:00.006061", 
                "end": "2017-08-12 06:46:56.638584", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "git checkout $(git describe --abbrev=0 --tags)", 
                        "_uses_shell": true, 
                        "chdir": "/opt/csc/src/docker-mediacascade", 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": true
                }, 
                "rc": 0, 
                "start": "2017-08-12 06:46:56.632523", 
                "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-12 06:46:56,702 p=119930 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:46:56,702 p=119930 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-12 06:47:31,706 p=120027 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:47:31,707 p=120027 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:47:31,778 p=120027 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:47:31,827 p=120027 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:47:32,324 p=120027 u=root |  ok: [localhost]
2017-08-12 06:47:32,344 p=120027 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:47:32,398 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,398 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,399 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:32,432 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,432 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,755 p=120027 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:47:32,757 p=120027 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:47:32,919 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,919 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,920 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,920 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:32,920 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:34,313 p=120027 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:47:34,315 p=120027 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:47:34,373 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:34,374 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:34,374 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:34,374 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:34,385 p=120027 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:34,569 p=120027 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.005305", "end": "2017-08-12 06:47:34.553020", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 06:47:34.547715", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 06:47:34,574 p=120027 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:47:34,575 p=120027 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:47:34,575 p=120027 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 06:47:48,096 p=120131 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:47:48,098 p=120131 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:47:48,170 p=120131 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:47:48,218 p=120131 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:47:48,728 p=120131 u=root |  ok: [localhost]
2017-08-12 06:47:48,747 p=120131 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:47:48,810 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:48,812 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:48,812 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:48,812 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:48,834 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:49,140 p=120131 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:47:49,143 p=120131 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:47:49,239 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:49,240 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:49,240 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:49,240 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:49,240 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:50,664 p=120131 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:47:50,667 p=120131 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:47:50,739 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:47:50,739 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:47:50,739 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:47:50,739 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:47:50,739 p=120131 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:47:50,748 p=120131 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 128, "stderr": "fatal: Not a git repository (or any of the parent directories): .git\nfatal: Not a git repository (or any of the parent directories): .git\n", "stdout": "", "stdout_lines": []}
2017-08-12 06:47:50,754 p=120131 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:47:50,754 p=120131 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:47:50,754 p=120131 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 06:48:17,101 p=120233 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:48:17,103 p=120233 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:48:17,177 p=120233 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:48:17,235 p=120233 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:48:17,753 p=120233 u=root |  ok: [localhost]
2017-08-12 06:48:17,773 p=120233 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:48:17,826 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:48:17,827 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:48:17,827 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:48:17,827 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:48:17,860 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:48:18,178 p=120233 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:48:18,179 p=120233 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:48:18,279 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:48:18,279 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:48:18,279 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:48:18,280 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:48:18,280 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:48:19,696 p=120233 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:48:19,698 p=120233 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:48:19,757 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:48:19,758 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:48:19,758 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:48:19,758 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:48:19,839 p=120233 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:48:19,949 p=120233 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.003681", "end": "2017-08-12 06:48:19.932710", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 06:48:19.929029", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 06:48:19,950 p=120233 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:48:19,950 p=120233 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:48:19,950 p=120233 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 06:50:10,261 p=120339 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 06:50:10,262 p=120339 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 06:50:10,350 p=120339 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 06:50:10,394 p=120339 u=root |  TASK [setup] *******************************************************************
2017-08-12 06:50:10,903 p=120339 u=root |  ok: [localhost]
2017-08-12 06:50:10,923 p=120339 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 06:50:11,057 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,057 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,058 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,058 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,058 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:50:11,319 p=120339 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:50:11,321 p=120339 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 06:50:11,419 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,420 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,420 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,420 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:50:11,420 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:50:13,363 p=120339 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 06:50:13,365 p=120339 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 06:50:13,416 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 06:50:13,417 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 06:50:13,417 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 06:50:13,417 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 06:50:13,504 p=120339 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 06:50:13,601 p=120339 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.003038", "end": "2017-08-12 06:50:13.585484", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 06:50:13.582446", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 06:50:13,603 p=120339 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 06:50:13,603 p=120339 u=root |  PLAY RECAP *********************************************************************
2017-08-12 06:50:13,603 p=120339 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:12:45,861 p=120470 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:12:45,863 p=120470 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:12:45,928 p=120470 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:12:45,976 p=120470 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:12:46,461 p=120470 u=root |  ok: [localhost]
2017-08-12 07:12:46,479 p=120470 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:12:46,619 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:12:46,619 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:12:46,619 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:12:46,619 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:12:46,619 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:12:46,856 p=120470 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:12:46,858 p=120470 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:12:47,000 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:12:47,001 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:12:47,001 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:12:47,001 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:12:47,001 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:12:48,458 p=120470 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:12:48,460 p=120470 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:12:48,585 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:12:48,585 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:12:48,585 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:12:48,585 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:12:48,585 p=120470 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:12:48,677 p=120470 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.003101", "end": "2017-08-12 07:12:48.662705", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:12:48.659604", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:12:48,679 p=120470 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:12:48,679 p=120470 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:12:48,679 p=120470 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:16:05,586 p=120574 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:16:05,588 p=120574 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:16:05,653 p=120574 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:16:05,700 p=120574 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:16:06,177 p=120574 u=root |  ok: [localhost]
2017-08-12 07:16:06,197 p=120574 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:16:06,264 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,265 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,265 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,265 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:16:06,288 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,579 p=120574 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:16:06,581 p=120574 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:16:06,673 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,673 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,673 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,674 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:16:06,674 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:16:08,393 p=120574 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:16:08,395 p=120574 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:16:08,462 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:16:08,462 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:16:08,463 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:16:08,463 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:16:08,463 p=120574 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:16:08,605 p=120574 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.003223", "end": "2017-08-12 07:16:08.591387", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:16:08.588164", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:16:08,606 p=120574 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:16:08,607 p=120574 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:16:08,607 p=120574 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:21:38,496 p=120679 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:21:38,497 p=120679 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:21:38,559 p=120679 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:21:38,615 p=120679 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:21:39,114 p=120679 u=root |  ok: [localhost]
2017-08-12 07:21:39,135 p=120679 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:21:39,270 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,270 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,271 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,271 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,271 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:21:39,517 p=120679 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:21:39,518 p=120679 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:21:39,590 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,590 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,590 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,591 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:21:39,591 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:21:41,170 p=120679 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:21:41,172 p=120679 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:21:41,243 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:21:41,243 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:21:41,243 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:21:41,244 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:21:41,244 p=120679 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:21:41,385 p=120679 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=o", "--tags)"], "delta": "0:00:00.002947", "end": "2017-08-12 07:21:41.371602", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:21:41.368655", "stderr": "error: unknown option `abbrev=o'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:21:41,386 p=120679 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:21:41,386 p=120679 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:21:41,387 p=120679 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:22:00,893 p=120783 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:22:00,895 p=120783 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:22:00,953 p=120783 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:22:00,998 p=120783 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:22:01,482 p=120783 u=root |  ok: [localhost]
2017-08-12 07:22:01,500 p=120783 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:22:01,562 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:01,563 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:01,563 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:01,563 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:01,639 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:01,875 p=120783 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:01,877 p=120783 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:22:02,022 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:02,022 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:02,022 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:02,022 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:02,022 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:03,664 p=120783 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:03,666 p=120783 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:22:03,733 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:03,733 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:03,734 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:03,734 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:03,735 p=120783 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:03,876 p=120783 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.003087", "end": "2017-08-12 07:22:03.862554", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:22:03.859467", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:22:03,878 p=120783 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:22:03,878 p=120783 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:22:03,878 p=120783 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:22:26,172 p=120887 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:22:26,174 p=120887 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:22:26,245 p=120887 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:22:26,288 p=120887 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:22:26,784 p=120887 u=root |  ok: [localhost]
2017-08-12 07:22:26,804 p=120887 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:22:26,866 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:26,866 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:26,866 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:26,867 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:26,949 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:27,183 p=120887 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:27,185 p=120887 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:22:27,245 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:27,245 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:27,245 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:27,257 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:27,257 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:31,769 p=120887 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:31,771 p=120887 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:22:31,833 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:31,833 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:31,833 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:31,908 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:31,908 p=120887 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:32,007 p=120887 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.002546", "end": "2017-08-12 07:22:31.993249", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:22:31.990703", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:22:32,009 p=120887 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:22:32,009 p=120887 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:22:32,009 p=120887 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:22:45,601 p=120991 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:22:45,603 p=120991 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:22:45,673 p=120991 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:22:45,719 p=120991 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:22:46,197 p=120991 u=root |  ok: [localhost]
2017-08-12 07:22:46,216 p=120991 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:22:46,300 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,300 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,300 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,301 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,301 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:46,589 p=120991 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:46,591 p=120991 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:22:46,684 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,685 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,685 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,685 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:46,685 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:48,573 p=120991 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:22:48,575 p=120991 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:22:48,702 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:22:48,702 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:22:48,702 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:22:48,702 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:22:48,702 p=120991 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:22:48,796 p=120991 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git", "describe", "--abbrev=0", "--tags)"], "delta": "0:00:00.002974", "end": "2017-08-12 07:22:48.782316", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 129, "start": "2017-08-12 07:22:48.779342", "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:22:48,797 p=120991 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:22:48,797 p=120991 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:22:48,798 p=120991 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:22:53,029 p=121094 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-12 07:22:53,031 p=121094 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:22:53,032 p=121094 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:22:53,067 p=121094 u=root |  Loading callback plugin default of type stdout, v2.0 from /usr/lib/python2.7/site-packages/ansible/plugins/callback/__init__.pyc
2017-08-12 07:22:53,089 p=121094 u=root |  PLAYBOOK: tag.yml **************************************************************
2017-08-12 07:22:53,089 p=121094 u=root |  1 plays in tag.yml
2017-08-12 07:22:53,092 p=121094 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:22:53,151 p=121094 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:22:53,348 p=121094 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/system/setup.py
2017-08-12 07:22:53,644 p=121094 u=root |  ok: [localhost]
2017-08-12 07:22:53,663 p=121094 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:22:53,663 p=121094 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:32
2017-08-12 07:22:53,726 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:53,728 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:53,728 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:53,728 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:53,802 p=121094 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/files/stat.py
2017-08-12 07:22:53,809 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:53,968 p=121094 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/files/file.py
2017-08-12 07:22:54,060 p=121094 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "changed": false, 
    "checksum": "8207c8dadca37c10a53dd14a03b0217f8e7ec080", 
    "dest": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
    "diff": {
        "after": {
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa"
        }, 
        "before": {
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa"
        }
    }, 
    "gid": 0, 
    "group": "root", 
    "invocation": {
        "module_args": {
            "backup": null, 
            "content": null, 
            "delimiter": null, 
            "dest": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "diff_peek": null, 
            "directory_mode": null, 
            "follow": false, 
            "force": false, 
            "group": null, 
            "mode": 384, 
            "original_basename": "slm_mediacascade_ro_deployment_key_rsa", 
            "owner": null, 
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "recurse": false, 
            "regexp": null, 
            "remote_src": null, 
            "selevel": null, 
            "serole": null, 
            "setype": null, 
            "seuser": null, 
            "src": "slm_mediacascade_ro_deployment_key_rsa", 
            "state": null, 
            "unsafe_writes": null, 
            "validate": null
        }
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "mode": "0600", 
    "owner": "root", 
    "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
    "secontext": "system_u:object_r:usr_t:s0", 
    "size": 1675, 
    "state": "file", 
    "uid": 0
}
2017-08-12 07:22:54,061 p=121094 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:22:54,061 p=121094 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:41
2017-08-12 07:22:54,211 p=121094 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/source_control/git.py
2017-08-12 07:22:54,213 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:54,213 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:54,213 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:54,213 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:54,214 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,629 p=121094 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "after": "83a29bc83f2306f78ee33e76d1fed745948da559", 
    "before": "83a29bc83f2306f78ee33e76d1fed745948da559", 
    "changed": false, 
    "invocation": {
        "module_args": {
            "accept_hostkey": true, 
            "bare": false, 
            "clone": true, 
            "depth": null, 
            "dest": "/opt/csc/src/docker-mediacascade", 
            "executable": null, 
            "force": true, 
            "key_file": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "recursive": true, 
            "reference": null, 
            "refspec": null, 
            "remote": "origin", 
            "repo": "git@github.csc.com:Automation/docker-mediacascade.git", 
            "ssh_opts": null, 
            "track_submodules": false, 
            "umask": null, 
            "update": true, 
            "verify_commit": false, 
            "version": "HEAD"
        }, 
        "module_name": "git"
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "warnings": []
}
2017-08-12 07:22:55,631 p=121094 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:22:55,631 p=121094 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:51
2017-08-12 07:22:55,756 p=121094 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/commands/command.py
2017-08-12 07:22:55,758 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,758 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,758 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,758 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,759 p=121094 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:22:55,856 p=121094 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "changed": true, 
    "cmd": [
        "git", 
        "checkout", 
        "$(git", 
        "describe", 
        "--abbrev=0", 
        "--tags)"
    ], 
    "delta": "0:00:00.003594", 
    "end": "2017-08-12 07:22:55.842796", 
    "failed": true, 
    "invocation": {
        "module_args": {
            "_raw_params": "git checkout $(git describe --abbrev=0 --tags)", 
            "_uses_shell": false, 
            "chdir": "/opt/csc/src/docker-mediacascade", 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }, 
        "module_name": "command"
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "rc": 129, 
    "start": "2017-08-12 07:22:55.839202", 
    "stderr": "error: unknown option `abbrev=0'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", 
    "stdout": "", 
    "stdout_lines": [], 
    "warnings": []
}
2017-08-12 07:22:55,858 p=121094 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:22:55,858 p=121094 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:22:55,858 p=121094 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:26:34,993 p=121199 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-12 07:26:34,994 p=121199 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:26:34,995 p=121199 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:26:35,031 p=121199 u=root |  Loading callback plugin default of type stdout, v2.0 from /usr/lib/python2.7/site-packages/ansible/plugins/callback/__init__.pyc
2017-08-12 07:26:35,055 p=121199 u=root |  PLAYBOOK: tag.yml **************************************************************
2017-08-12 07:26:35,055 p=121199 u=root |  1 plays in tag.yml
2017-08-12 07:26:35,058 p=121199 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:26:35,113 p=121199 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:26:35,311 p=121199 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/system/setup.py
2017-08-12 07:26:35,608 p=121199 u=root |  ok: [localhost]
2017-08-12 07:26:35,627 p=121199 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:26:35,627 p=121199 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:32
2017-08-12 07:26:35,692 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:35,693 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:35,693 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:35,693 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:35,761 p=121199 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/files/stat.py
2017-08-12 07:26:35,767 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:35,924 p=121199 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/files/file.py
2017-08-12 07:26:36,014 p=121199 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "changed": false, 
    "checksum": "8207c8dadca37c10a53dd14a03b0217f8e7ec080", 
    "dest": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
    "diff": {
        "after": {
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa"
        }, 
        "before": {
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa"
        }
    }, 
    "gid": 0, 
    "group": "root", 
    "invocation": {
        "module_args": {
            "backup": null, 
            "content": null, 
            "delimiter": null, 
            "dest": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "diff_peek": null, 
            "directory_mode": null, 
            "follow": false, 
            "force": false, 
            "group": null, 
            "mode": 384, 
            "original_basename": "slm_mediacascade_ro_deployment_key_rsa", 
            "owner": null, 
            "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "recurse": false, 
            "regexp": null, 
            "remote_src": null, 
            "selevel": null, 
            "serole": null, 
            "setype": null, 
            "seuser": null, 
            "src": "slm_mediacascade_ro_deployment_key_rsa", 
            "state": null, 
            "unsafe_writes": null, 
            "validate": null
        }
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "mode": "0600", 
    "owner": "root", 
    "path": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
    "secontext": "system_u:object_r:usr_t:s0", 
    "size": 1675, 
    "state": "file", 
    "uid": 0
}
2017-08-12 07:26:36,015 p=121199 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:26:36,016 p=121199 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:41
2017-08-12 07:26:36,065 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:36,066 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:36,066 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:36,066 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:36,163 p=121199 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/source_control/git.py
2017-08-12 07:26:36,165 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,773 p=121199 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "after": "83a29bc83f2306f78ee33e76d1fed745948da559", 
    "before": "83a29bc83f2306f78ee33e76d1fed745948da559", 
    "changed": false, 
    "invocation": {
        "module_args": {
            "accept_hostkey": true, 
            "bare": false, 
            "clone": true, 
            "depth": null, 
            "dest": "/opt/csc/src/docker-mediacascade", 
            "executable": null, 
            "force": true, 
            "key_file": "/opt/csc/slm_mediacascade_ro_deployment_key_rsa", 
            "recursive": true, 
            "reference": null, 
            "refspec": null, 
            "remote": "origin", 
            "repo": "git@github.csc.com:Automation/docker-mediacascade.git", 
            "ssh_opts": null, 
            "track_submodules": false, 
            "umask": null, 
            "update": true, 
            "verify_commit": false, 
            "version": "HEAD"
        }, 
        "module_name": "git"
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "warnings": []
}
2017-08-12 07:26:37,775 p=121199 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:26:37,775 p=121199 u=root |  task path: /opt/autodeploy/projects/container_upg/tag.yml:51
2017-08-12 07:26:37,843 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slamio", 
        "key": "slamio_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,844 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmsamba", 
        "key": "slm_slmsamba_ro_deployment_key_rsa", 
        "name": "docker-slmsamba", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,844 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmpuppet", 
        "key": "slm_slmpuppet_ro_deployment_key_rsa", 
        "name": "docker-slmpuppet", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,844 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'})  => {
    "changed": false, 
    "item": {
        "image": "slmansible", 
        "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
        "name": "ansible-sandbox", 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,844 p=121199 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None})  => {
    "changed": false, 
    "item": {
        "image": "gitlab/gitlab-ce", 
        "key": null, 
        "name": null, 
        "upg": false
    }, 
    "skip_reason": "Conditional check failed", 
    "skipped": true
}
2017-08-12 07:26:37,904 p=121199 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/core/commands/command.py
2017-08-12 07:26:37,996 p=121199 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {
    "changed": true, 
    "cmd": [
        "git", 
        "checkout", 
        "$(git", 
        "describe", 
        "--tags", 
        "--abbrev=0)"
    ], 
    "delta": "0:00:00.003493", 
    "end": "2017-08-12 07:26:37.983219", 
    "failed": true, 
    "invocation": {
        "module_args": {
            "_raw_params": "git checkout $(git describe --tags --abbrev=0)", 
            "_uses_shell": false, 
            "chdir": "/opt/csc/src/docker-mediacascade", 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }, 
        "module_name": "command"
    }, 
    "item": {
        "image": "slmzsync", 
        "key": "slm_mediacascade_ro_deployment_key_rsa", 
        "name": "docker-mediacascade", 
        "upg": true
    }, 
    "rc": 129, 
    "start": "2017-08-12 07:26:37.979726", 
    "stderr": "error: unknown option `tags'\nusage: git checkout [options] <branch>\n   or: git checkout [options] [<branch>] -- <file>...\n\n    -q, --quiet           suppress progress reporting\n    -b <branch>           create and checkout a new branch\n    -B <branch>           create/reset and checkout a branch\n    -l                    create reflog for new branch\n    --detach              detach the HEAD at named commit\n    -t, --track           set upstream info for new branch\n    --orphan <new branch>\n                          new unparented branch\n    -2, --ours            checkout our version for unmerged files\n    -3, --theirs          checkout their version for unmerged files\n    -f, --force           force checkout (throw away local modifications)\n    -m, --merge           perform a 3-way merge with the new branch\n    --overwrite-ignore    update ignored files (default)\n    --conflict <style>    conflict style (merge or diff3)\n    -p, --patch           select hunks interactively\n    --ignore-skip-worktree-bits\n                          do not limit pathspecs to sparse entries only", 
    "stdout": "", 
    "stdout_lines": [], 
    "warnings": []
}
2017-08-12 07:26:37,998 p=121199 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:26:37,998 p=121199 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:26:37,998 p=121199 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:27:09,598 p=121303 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:27:09,600 p=121303 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:27:09,666 p=121303 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:27:09,718 p=121303 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:27:10,191 p=121303 u=root |  ok: [localhost]
2017-08-12 07:27:10,209 p=121303 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:27:10,273 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,273 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,273 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:27:10,353 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,353 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,591 p=121303 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:27:10,593 p=121303 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:27:10,735 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,736 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,736 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,736 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:27:10,736 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:27:12,174 p=121303 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:27:12,176 p=121303 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:27:12,300 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:27:12,300 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:27:12,300 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:27:12,300 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:27:12,300 p=121303 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:27:12,391 p=121303 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) => {"changed": true, "cmd": ["git", "checkout", "$(git describe --tags --abbrev=0)"], "delta": "0:00:00.003117", "end": "2017-08-12 07:27:12.376939", "failed": true, "item": {"image": "slmzsync", "key": "slm_mediacascade_ro_deployment_key_rsa", "name": "docker-mediacascade", "upg": true}, "rc": 1, "start": "2017-08-12 07:27:12.373822", "stderr": "error: pathspec '$(git describe --tags --abbrev=0)' did not match any file(s) known to git.", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-12 07:27:12,392 p=121303 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tag.retry

2017-08-12 07:27:12,393 p=121303 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:27:12,393 p=121303 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-12 07:29:02,884 p=121408 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:29:02,885 p=121408 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:29:02,954 p=121408 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:29:02,996 p=121408 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:29:03,478 p=121408 u=root |  ok: [localhost]
2017-08-12 07:29:03,496 p=121408 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:29:03,556 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,556 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,557 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,557 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:29:03,568 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,862 p=121408 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:29:03,864 p=121408 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:29:03,953 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,953 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,954 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,954 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:29:03,954 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:29:05,598 p=121408 u=root |  ok: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:29:05,599 p=121408 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:29:05,667 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:29:05,668 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:29:05,668 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) 
2017-08-12 07:29:05,668 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:29:05,668 p=121408 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:29:05,812 p=121408 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'})
2017-08-12 07:29:05,814 p=121408 u=root |  TASK [Show slmzsync_tag] *******************************************************
2017-08-12 07:29:05,852 p=121408 u=root |  ok: [localhost] => {
    "slmzsync_tag": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "git checkout $(git describe --tags --abbrev=0)", 
                "delta": "0:00:00.005217", 
                "end": "2017-08-12 07:29:05.798891", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "git checkout $(git describe --tags --abbrev=0)", 
                        "_uses_shell": true, 
                        "chdir": "/opt/csc/src/docker-mediacascade", 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": true
                }, 
                "rc": 0, 
                "start": "2017-08-12 07:29:05.793674", 
                "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-12 07:29:05,854 p=121408 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:29:05,854 p=121408 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 07:30:25,349 p=121516 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:30:25,351 p=121516 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:30:25,417 p=121516 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:30:25,470 p=121516 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:30:25,939 p=121516 u=root |  ok: [localhost]
2017-08-12 07:30:25,961 p=121516 u=root |  TASK [Ensure git deployment key(s) is in place] ********************************
2017-08-12 07:30:26,028 p=121516 u=root |  failed: [localhost] (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'}) => {"failed": true, "item": {"image": "slmpuppet", "key": "slm_slmpuppet_ro_deployment_key_rsa", "name": "docker-slmpuppet", "upg": true}, "msg": "Unable to find 'slm_slmpuppet_ro_deployment_key_rsa' in expected paths."}
2017-08-12 07:30:26,028 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,028 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:30:26,031 p=121516 u=root |  ...ignoring
2017-08-12 07:30:26,031 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,031 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,031 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,033 p=121516 u=root |  TASK [Ensure docker project(s) is checked out] *********************************
2017-08-12 07:30:26,092 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,092 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:30:26,957 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,957 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,957 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:30:26,957 p=121516 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 07:30:26,959 p=121516 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:30:27,015 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmansible', u'name': u'ansible-sandbox', u'key': u'slm_ansible_sandbox_ro_deployment_key_rsa'}) 
2017-08-12 07:30:27,015 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'gitlab/gitlab-ce', u'name': None, u'key': None}) 
2017-08-12 07:30:27,175 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmzsync', u'name': u'docker-mediacascade', u'key': u'slm_mediacascade_ro_deployment_key_rsa'}) 
2017-08-12 07:30:27,175 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slamio', u'name': u'docker-mediacascade', u'key': u'slamio_ro_deployment_key_rsa'}) 
2017-08-12 07:30:27,175 p=121516 u=root |  skipping: [localhost] => (item={u'upg': False, u'image': u'slmsamba', u'name': u'docker-slmsamba', u'key': u'slm_slmsamba_ro_deployment_key_rsa'}) 
2017-08-12 07:30:27,175 p=121516 u=root |  changed: [localhost] => (item={u'upg': True, u'image': u'slmpuppet', u'name': u'docker-slmpuppet', u'key': u'slm_slmpuppet_ro_deployment_key_rsa'})
2017-08-12 07:30:27,177 p=121516 u=root |  TASK [Show image_tag] **********************************************************
2017-08-12 07:30:27,224 p=121516 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "gitlab/gitlab-ce", 
                    "key": null, 
                    "name": null, 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmansible", 
                    "key": "slm_ansible_sandbox_ro_deployment_key_rsa", 
                    "name": "ansible-sandbox", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "git checkout $(git describe --tags --abbrev=0)", 
                "delta": "0:00:00.005501", 
                "end": "2017-08-12 07:30:27.155296", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "git checkout $(git describe --tags --abbrev=0)", 
                        "_uses_shell": true, 
                        "chdir": "/opt/csc/src/docker-slmpuppet", 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": {
                    "image": "slmpuppet", 
                    "key": "slm_slmpuppet_ro_deployment_key_rsa", 
                    "name": "docker-slmpuppet", 
                    "upg": true
                }, 
                "rc": 0, 
                "start": "2017-08-12 07:30:27.149795", 
                "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at fc60d40... Merge pull request #1 from adean20/initial", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmsamba", 
                    "key": "slm_slmsamba_ro_deployment_key_rsa", 
                    "name": "docker-slmsamba", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slamio", 
                    "key": "slamio_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "changed": false, 
                "item": {
                    "image": "slmzsync", 
                    "key": "slm_mediacascade_ro_deployment_key_rsa", 
                    "name": "docker-mediacascade", 
                    "upg": false
                }, 
                "skip_reason": "Conditional check failed", 
                "skipped": true
            }
        ]
    }
}
2017-08-12 07:30:27,226 p=121516 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:30:27,226 p=121516 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-12 07:58:15,168 p=121689 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:58:15,170 p=121689 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:58:15,180 p=121689 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 19, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Ensure docker-mediacascade project is checked out
  ^ here

2017-08-12 07:58:35,032 p=121698 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:58:35,033 p=121698 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:58:35,102 p=121698 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:58:35,148 p=121698 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:58:35,648 p=121698 u=root |  ok: [localhost]
2017-08-12 07:58:35,652 p=121698 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 07:58:35,710 p=121698 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'mediacascade_git_deployment_key' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 13, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: \"Ensure docker-mediacascade git deployment key is in place\"\n    ^ here\n"}
2017-08-12 07:58:35,712 p=121698 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/original.retry

2017-08-12 07:58:35,712 p=121698 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:58:35,712 p=121698 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-12 07:59:49,276 p=121760 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 07:59:49,277 p=121760 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 07:59:49,347 p=121760 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 07:59:49,395 p=121760 u=root |  TASK [setup] *******************************************************************
2017-08-12 07:59:49,881 p=121760 u=root |  ok: [localhost]
2017-08-12 07:59:49,887 p=121760 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 07:59:50,220 p=121760 u=root |  ok: [localhost]
2017-08-12 07:59:50,222 p=121760 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 07:59:52,005 p=121760 u=root |  ok: [localhost]
2017-08-12 07:59:52,006 p=121760 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 07:59:52,181 p=121760 u=root |  changed: [localhost]
2017-08-12 07:59:52,183 p=121760 u=root |  TASK [Debug Git checkout of docker-mediacascade] *******************************
2017-08-12 07:59:52,226 p=121760 u=root |  ok: [localhost] => {
    "git_mediacascade": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.004899", 
        "end": "2017-08-12 07:59:52.168527", 
        "rc": 0, 
        "start": "2017-08-12 07:59:52.163628", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 07:59:52,228 p=121760 u=root |  TASK [Check if slmzsync Docker image exists] ***********************************
2017-08-12 07:59:52,577 p=121760 u=root |  ok: [localhost]
2017-08-12 07:59:52,579 p=121760 u=root |  TASK [debug] *******************************************************************
2017-08-12 07:59:52,618 p=121760 u=root |  ok: [localhost] => {
    "slmzsync_image": {
        "changed": false, 
        "images": []
    }
}
2017-08-12 07:59:52,620 p=121760 u=root |  TASK [Remove existing slmzsync Docker image] ***********************************
2017-08-12 07:59:52,663 p=121760 u=root |  skipping: [localhost]
2017-08-12 07:59:52,665 p=121760 u=root |  PLAY RECAP *********************************************************************
2017-08-12 07:59:52,666 p=121760 u=root |  localhost                  : ok=7    changed=1    unreachable=0    failed=0   
2017-08-12 08:00:15,584 p=121886 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:00:15,586 p=121886 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:00:15,650 p=121886 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:00:15,694 p=121886 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:00:16,197 p=121886 u=root |  ok: [localhost]
2017-08-12 08:00:16,201 p=121886 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:00:16,529 p=121886 u=root |  ok: [localhost]
2017-08-12 08:00:16,530 p=121886 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:00:16,906 p=121886 u=root |   [ERROR]: User interrupted execution

2017-08-12 08:05:24,193 p=121987 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:05:24,194 p=121987 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:05:24,262 p=121987 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:05:24,309 p=121987 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:05:24,790 p=121987 u=root |  ok: [localhost]
2017-08-12 08:05:24,794 p=121987 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:05:25,128 p=121987 u=root |  ok: [localhost]
2017-08-12 08:05:25,130 p=121987 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:05:26,708 p=121987 u=root |  ok: [localhost]
2017-08-12 08:05:26,710 p=121987 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 08:05:26,882 p=121987 u=root |  changed: [localhost]
2017-08-12 08:05:26,884 p=121987 u=root |  TASK [Debug Git checkout of docker-mediacascade] *******************************
2017-08-12 08:05:26,924 p=121987 u=root |  ok: [localhost] => {
    "git_mediacascade": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.005204", 
        "end": "2017-08-12 08:05:26.868745", 
        "rc": 0, 
        "start": "2017-08-12 08:05:26.863541", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 08:05:26,926 p=121987 u=root |  TASK [debug] *******************************************************************
2017-08-12 08:05:26,963 p=121987 u=root |  ok: [localhost] => {
    "slmzsync_image": "VARIABLE IS NOT DEFINED!"
}
2017-08-12 08:05:26,965 p=121987 u=root |  TASK [Remove existing slmzsync Docker image] ***********************************
2017-08-12 08:05:26,998 p=121987 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ slmzsync_image.images | length > 0 }}' failed. The error was: error while evaluating conditional ({{ slmzsync_image.images | length > 0 }}): 'slmzsync_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 45, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Remove existing slmzsync Docker image\n    ^ here\n"}
2017-08-12 08:05:26,999 p=121987 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/original.retry

2017-08-12 08:05:26,999 p=121987 u=root |  PLAY RECAP *********************************************************************
2017-08-12 08:05:27,000 p=121987 u=root |  localhost                  : ok=6    changed=1    unreachable=0    failed=1   
2017-08-12 08:06:11,720 p=122099 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:06:11,722 p=122099 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:06:11,786 p=122099 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:06:11,829 p=122099 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:06:12,306 p=122099 u=root |  ok: [localhost]
2017-08-12 08:06:12,310 p=122099 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:06:12,646 p=122099 u=root |  ok: [localhost]
2017-08-12 08:06:12,647 p=122099 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:06:14,232 p=122099 u=root |  ok: [localhost]
2017-08-12 08:06:14,234 p=122099 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 08:06:14,405 p=122099 u=root |  changed: [localhost]
2017-08-12 08:06:14,407 p=122099 u=root |  TASK [Debug Git checkout of docker-mediacascade] *******************************
2017-08-12 08:06:14,443 p=122099 u=root |  ok: [localhost] => {
    "git_mediacascade": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.005383", 
        "end": "2017-08-12 08:06:14.391386", 
        "rc": 0, 
        "start": "2017-08-12 08:06:14.386003", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 08:06:14,445 p=122099 u=root |  PLAY RECAP *********************************************************************
2017-08-12 08:06:14,445 p=122099 u=root |  localhost                  : ok=5    changed=1    unreachable=0    failed=0   
2017-08-12 08:11:37,866 p=122208 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:11:37,867 p=122208 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:11:37,936 p=122208 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:11:37,982 p=122208 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:11:38,463 p=122208 u=root |  ok: [localhost]
2017-08-12 08:11:38,467 p=122208 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:11:38,833 p=122208 u=root |  ok: [localhost]
2017-08-12 08:11:38,835 p=122208 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:11:40,444 p=122208 u=root |  ok: [localhost]
2017-08-12 08:11:40,445 p=122208 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 08:11:40,618 p=122208 u=root |  changed: [localhost]
2017-08-12 08:11:40,620 p=122208 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 08:11:40,659 p=122208 u=root |  ok: [localhost] => {
    "git_mediacascade": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.005175", 
        "end": "2017-08-12 08:11:40.603613", 
        "rc": 0, 
        "start": "2017-08-12 08:11:40.598438", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 08:11:40,661 p=122208 u=root |  TASK [Get list of slmio docker image tags present] *****************************
2017-08-12 08:11:40,827 p=122208 u=root |  changed: [localhost]
2017-08-12 08:11:40,829 p=122208 u=root |  TASK [Show] ********************************************************************
2017-08-12 08:11:40,873 p=122208 u=root |  ok: [localhost] => {
    "slmzsync_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.062814", 
        "end": "2017-08-12 08:11:40.814612", 
        "rc": 0, 
        "start": "2017-08-12 08:11:40.751798", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 08:11:40,874 p=122208 u=root |  PLAY RECAP *********************************************************************
2017-08-12 08:11:40,874 p=122208 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-12 08:42:01,902 p=122368 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:42:01,904 p=122368 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:42:01,982 p=122368 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:42:02,030 p=122368 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:42:02,514 p=122368 u=root |  ok: [localhost]
2017-08-12 08:42:02,518 p=122368 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:42:02,853 p=122368 u=root |  ok: [localhost]
2017-08-12 08:42:02,855 p=122368 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:42:04,375 p=122368 u=root |  ok: [localhost]
2017-08-12 08:42:04,376 p=122368 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 08:42:04,545 p=122368 u=root |  changed: [localhost]
2017-08-12 08:42:04,547 p=122368 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 08:42:04,589 p=122368 u=root |  ok: [localhost] => {
    "git_mediacascade": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.005094", 
        "end": "2017-08-12 08:42:04.531940", 
        "rc": 0, 
        "start": "2017-08-12 08:42:04.526846", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 08:42:04,591 p=122368 u=root |  TASK [Get list of slmio docker image tags present] *****************************
2017-08-12 08:42:04,752 p=122368 u=root |  changed: [localhost]
2017-08-12 08:42:04,754 p=122368 u=root |  TASK [Show] ********************************************************************
2017-08-12 08:42:04,801 p=122368 u=root |  ok: [localhost] => {
    "slmzsync_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.063245", 
        "end": "2017-08-12 08:42:04.738954", 
        "rc": 0, 
        "start": "2017-08-12 08:42:04.675709", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 08:42:04,803 p=122368 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 08:42:04,846 p=122368 u=root |  ok: [localhost]
2017-08-12 08:42:04,848 p=122368 u=root |  TASK [Show existing docker image and tag] **************************************
2017-08-12 08:42:04,888 p=122368 u=root |  ok: [localhost] => {
    "current_slmzsynctag": "v1.0.0"
}
2017-08-12 08:42:04,889 p=122368 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 08:42:06,740 p=122368 u=root |  changed: [localhost]
2017-08-12 08:42:06,745 p=122368 u=root |  PLAY RECAP *********************************************************************
2017-08-12 08:42:06,745 p=122368 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-12 08:58:50,757 p=130200 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 08:58:50,758 p=130200 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 08:58:50,825 p=130200 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 08:58:50,877 p=130200 u=root |  TASK [setup] *******************************************************************
2017-08-12 08:58:51,390 p=130200 u=root |  ok: [localhost]
2017-08-12 08:58:51,394 p=130200 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 08:58:51,732 p=130200 u=root |  ok: [localhost]
2017-08-12 08:58:51,734 p=130200 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 08:58:53,303 p=130200 u=root |  ok: [localhost]
2017-08-12 08:58:53,304 p=130200 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 08:58:53,487 p=130200 u=root |  changed: [localhost]
2017-08-12 08:58:53,489 p=130200 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 08:58:53,532 p=130200 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git checkout $(git describe --abbrev=0 --tags)", 
        "delta": "0:00:00.005262", 
        "end": "2017-08-12 08:58:53.473330", 
        "rc": 0, 
        "start": "2017-08-12 08:58:53.468068", 
        "stderr": "Note: checking out 'v1.0.0'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b new_branch_name\n\nHEAD is now at 83a29bc... Merge pull request #2 from adean20/master", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 08:58:53,534 p=130200 u=root |  TASK [Get list of slmio docker image tags present] *****************************
2017-08-12 08:58:53,697 p=130200 u=root |  changed: [localhost]
2017-08-12 08:58:53,698 p=130200 u=root |  TASK [Show] ********************************************************************
2017-08-12 08:58:53,743 p=130200 u=root |  ok: [localhost] => {
    "slmzsync_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.062116", 
        "end": "2017-08-12 08:58:53.684141", 
        "rc": 0, 
        "start": "2017-08-12 08:58:53.622025", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 08:58:53,745 p=130200 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 08:58:53,785 p=130200 u=root |  ok: [localhost]
2017-08-12 08:58:53,787 p=130200 u=root |  TASK [Show existing docker image and tag] **************************************
2017-08-12 08:58:53,829 p=130200 u=root |  ok: [localhost] => {
    "current_slmzsynctag": "v1.0.0"
}
2017-08-12 08:58:53,831 p=130200 u=root |  PLAY RECAP *********************************************************************
2017-08-12 08:58:53,831 p=130200 u=root |  localhost                  : ok=9    changed=2    unreachable=0    failed=0   
2017-08-12 09:00:57,138 p=130328 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 09:00:57,139 p=130328 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 09:00:57,211 p=130328 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 09:00:57,258 p=130328 u=root |  TASK [setup] *******************************************************************
2017-08-12 09:00:57,757 p=130328 u=root |  ok: [localhost]
2017-08-12 09:00:57,761 p=130328 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 09:00:58,092 p=130328 u=root |  ok: [localhost]
2017-08-12 09:00:58,093 p=130328 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 09:00:59,628 p=130328 u=root |  ok: [localhost]
2017-08-12 09:00:59,629 p=130328 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 09:00:59,806 p=130328 u=root |  changed: [localhost]
2017-08-12 09:00:59,808 p=130328 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 09:00:59,918 p=130328 u=root |  changed: [localhost]
2017-08-12 09:00:59,920 p=130328 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 09:00:59,962 p=130328 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.005522", 
        "end": "2017-08-12 09:00:59.903340", 
        "rc": 0, 
        "start": "2017-08-12 09:00:59.897818", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 09:00:59,965 p=130328 u=root |  TASK [Get list of slmio docker image tags present] *****************************
2017-08-12 09:01:00,131 p=130328 u=root |  changed: [localhost]
2017-08-12 09:01:00,133 p=130328 u=root |  TASK [Show] ********************************************************************
2017-08-12 09:01:00,174 p=130328 u=root |  ok: [localhost] => {
    "slmzsync_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.063081", 
        "end": "2017-08-12 09:01:00.118408", 
        "rc": 0, 
        "start": "2017-08-12 09:01:00.055327", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 09:01:00,176 p=130328 u=root |  TASK [Get existing image and tag] **********************************************
2017-08-12 09:01:00,225 p=130328 u=root |  ok: [localhost]
2017-08-12 09:01:00,227 p=130328 u=root |  TASK [Show existing docker image and tag] **************************************
2017-08-12 09:01:00,273 p=130328 u=root |  ok: [localhost] => {
    "current_slmzsynctag": "v1.0.0"
}
2017-08-12 09:01:00,274 p=130328 u=root |  PLAY RECAP *********************************************************************
2017-08-12 09:01:00,275 p=130328 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-12 19:33:01,538 p=130794 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:33:01,539 p=130794 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:33:01,553 p=130794 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 79, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: Show
      debug:
           ^ here

2017-08-12 19:33:36,371 p=130807 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:33:36,373 p=130807 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:33:36,384 p=130807 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 79, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  - name: Show
     debug:
          ^ here

2017-08-12 19:34:54,994 p=130816 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:34:54,996 p=130816 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:34:55,100 p=130816 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 19:34:55,180 p=130816 u=root |  TASK [setup] *******************************************************************
2017-08-12 19:34:55,853 p=130816 u=root |  ok: [localhost]
2017-08-12 19:34:55,874 p=130816 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 19:34:56,229 p=130816 u=root |  ok: [localhost]
2017-08-12 19:34:56,231 p=130816 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 19:34:57,785 p=130816 u=root |  ok: [localhost]
2017-08-12 19:34:57,786 p=130816 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 19:34:57,977 p=130816 u=root |  changed: [localhost]
2017-08-12 19:34:57,980 p=130816 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 19:34:58,089 p=130816 u=root |  changed: [localhost]
2017-08-12 19:34:58,091 p=130816 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 19:34:58,142 p=130816 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003679", 
        "end": "2017-08-12 19:34:58.074386", 
        "rc": 0, 
        "start": "2017-08-12 19:34:58.070707", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:34:58,145 p=130816 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 19:34:58,333 p=130816 u=root |  changed: [localhost]
2017-08-12 19:34:58,336 p=130816 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 19:34:58,381 p=130816 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.071352", 
        "end": "2017-08-12 19:34:58.316523", 
        "rc": 0, 
        "start": "2017-08-12 19:34:58.245171", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:34:58,382 p=130816 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 19:34:58,773 p=130816 u=root |  ok: [localhost]
2017-08-12 19:34:58,794 p=130816 u=root |  TASK [Ensure slam.io {{ slamio_branch }} image is built] ***********************
2017-08-12 19:34:59,086 p=130816 u=root |  FAILED - RETRYING: TASK: Ensure slam.io {{ slamio_branch }} image is built (3 retries left).
2017-08-12 19:35:07,082 p=130816 u=root |   [ERROR]: User interrupted execution

2017-08-12 19:35:49,993 p=130966 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:35:49,994 p=130966 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:35:50,067 p=130966 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 19:35:50,118 p=130966 u=root |  TASK [setup] *******************************************************************
2017-08-12 19:35:50,673 p=130966 u=root |  ok: [localhost]
2017-08-12 19:35:50,694 p=130966 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 19:35:51,065 p=130966 u=root |  ok: [localhost]
2017-08-12 19:35:51,066 p=130966 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 19:35:52,643 p=130966 u=root |  ok: [localhost]
2017-08-12 19:35:52,644 p=130966 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 19:35:52,840 p=130966 u=root |  changed: [localhost]
2017-08-12 19:35:52,842 p=130966 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 19:35:52,951 p=130966 u=root |  changed: [localhost]
2017-08-12 19:35:52,953 p=130966 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 19:35:52,998 p=130966 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003687", 
        "end": "2017-08-12 19:35:52.938717", 
        "rc": 0, 
        "start": "2017-08-12 19:35:52.935030", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:35:53,000 p=130966 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 19:35:53,172 p=130966 u=root |  changed: [localhost]
2017-08-12 19:35:53,175 p=130966 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 19:35:53,212 p=130966 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.064228", 
        "end": "2017-08-12 19:35:53.159122", 
        "rc": 0, 
        "start": "2017-08-12 19:35:53.094894", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:35:53,214 p=130966 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 19:35:53,594 p=130966 u=root |  ok: [localhost]
2017-08-12 19:35:53,596 p=130966 u=root |  TASK [Ensure slmzsync image is built] ******************************************
2017-08-12 19:35:53,890 p=130966 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (3 retries left).
2017-08-12 19:36:24,138 p=130966 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (2 retries left).
2017-08-12 19:36:54,387 p=130966 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (1 retries left).
2017-08-12 19:37:24,644 p=130966 u=root |  fatal: [localhost]: FAILED! => {"attempts": 3, "changed": false, "failed": true, "msg": "Requested build path /opt/csc/src/slamio/prodrel could not be found or you do not have access."}
2017-08-12 19:37:24,648 p=130966 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/original.retry

2017-08-12 19:37:24,648 p=130966 u=root |  PLAY RECAP *********************************************************************
2017-08-12 19:37:24,648 p=130966 u=root |  localhost                  : ok=9    changed=3    unreachable=0    failed=1   
2017-08-12 19:39:03,072 p=375 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:39:03,073 p=375 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:39:03,152 p=375 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 19:39:03,200 p=375 u=root |  TASK [setup] *******************************************************************
2017-08-12 19:39:03,727 p=375 u=root |  ok: [localhost]
2017-08-12 19:39:03,745 p=375 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 19:39:04,093 p=375 u=root |  ok: [localhost]
2017-08-12 19:39:04,095 p=375 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 19:39:05,824 p=375 u=root |  ok: [localhost]
2017-08-12 19:39:05,826 p=375 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 19:39:06,022 p=375 u=root |  changed: [localhost]
2017-08-12 19:39:06,024 p=375 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 19:39:06,142 p=375 u=root |  changed: [localhost]
2017-08-12 19:39:06,144 p=375 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 19:39:06,185 p=375 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003663", 
        "end": "2017-08-12 19:39:06.129172", 
        "rc": 0, 
        "start": "2017-08-12 19:39:06.125509", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:39:06,187 p=375 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 19:39:06,383 p=375 u=root |  changed: [localhost]
2017-08-12 19:39:06,385 p=375 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 19:39:06,427 p=375 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.068806", 
        "end": "2017-08-12 19:39:06.369787", 
        "rc": 0, 
        "start": "2017-08-12 19:39:06.300981", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:39:06,429 p=375 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 19:39:06,793 p=375 u=root |  ok: [localhost]
2017-08-12 19:39:06,795 p=375 u=root |  TASK [Ensure slmzsync image is built] ******************************************
2017-08-12 19:42:59,986 p=375 u=root |  changed: [localhost]
2017-08-12 19:42:59,993 p=375 u=root |  TASK [Show new image] **********************************************************
2017-08-12 19:43:00,045 p=375 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:git_tags from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:38ee5daddaa6509f9233b39a1a1df9fc69d3473d668af89af02957be006b197d", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "6134a8b49cfc61070d68fc988744d94935f12846a411116d511b07dc7614a247", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:38ee5daddaa6509f9233b39a1a1df9fc69d3473d668af89af02957be006b197d", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-12T23:42:57.432061947Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "244", 
                    "DeviceName": "docker-253:0-260130-16a2a1aed7e5937f92de123b2412daf625583f133c0b9b3bfade368f9c372c94", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:450367a86264fea0e7158e74859be72f7191010f2816ce25ea7ccddd70588c15", 
            "Os": "linux", 
            "Parent": "sha256:38ee5daddaa6509f9233b39a1a1df9fc69d3473d668af89af02957be006b197d", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:git_tags"
            ], 
            "Size": 433557820, 
            "VirtualSize": 433557820
        }
    }
}
2017-08-12 19:43:00,047 p=375 u=root |  PLAY RECAP *********************************************************************
2017-08-12 19:43:00,047 p=375 u=root |  localhost                  : ok=11   changed=4    unreachable=0    failed=0   
2017-08-12 19:49:41,645 p=8285 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:49:41,647 p=8285 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:49:41,839 p=8285 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 19:49:41,947 p=8285 u=root |  TASK [setup] *******************************************************************
2017-08-12 19:49:42,519 p=8285 u=root |  ok: [localhost]
2017-08-12 19:49:42,538 p=8285 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 19:49:42,890 p=8285 u=root |  ok: [localhost]
2017-08-12 19:49:42,892 p=8285 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 19:49:44,546 p=8285 u=root |  ok: [localhost]
2017-08-12 19:49:44,549 p=8285 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 19:49:44,741 p=8285 u=root |  changed: [localhost]
2017-08-12 19:49:44,743 p=8285 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 19:49:44,850 p=8285 u=root |  changed: [localhost]
2017-08-12 19:49:44,855 p=8285 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 19:49:44,903 p=8285 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003200", 
        "end": "2017-08-12 19:49:44.837680", 
        "rc": 0, 
        "start": "2017-08-12 19:49:44.834480", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:49:44,905 p=8285 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 19:49:45,079 p=8285 u=root |  changed: [localhost]
2017-08-12 19:49:45,081 p=8285 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 19:49:45,126 p=8285 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.064218", 
        "end": "2017-08-12 19:49:45.066359", 
        "rc": 0, 
        "start": "2017-08-12 19:49:45.002141", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:49:45,128 p=8285 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 19:49:45,574 p=8285 u=root |  ok: [localhost]
2017-08-12 19:49:45,576 p=8285 u=root |  TASK [Ensure slmzsync image is built] ******************************************
2017-08-12 19:53:36,219 p=8285 u=root |  changed: [localhost]
2017-08-12 19:53:36,222 p=8285 u=root |  TASK [Show new image] **********************************************************
2017-08-12 19:53:36,271 p=8285 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:git_tags from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:f50f928db7a4881b4be746a67ad2484a9a76afccb51706b1675324f2a29246d8", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "1c6e89eff0e2222211a0e9a16600a526da5019da6f6a5058830d9589350b777d", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:f50f928db7a4881b4be746a67ad2484a9a76afccb51706b1675324f2a29246d8", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-12T23:53:33.750894228Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "262", 
                    "DeviceName": "docker-253:0-260130-85802c948f4ff85448297cbbaa331d50e7fe3328cbd24161acae2dad098a4593", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:8b8a34c39dd3b56dfb8edfc805136e6a8f6be09ab5ca38fa181b74106dc656e8", 
            "Os": "linux", 
            "Parent": "sha256:f50f928db7a4881b4be746a67ad2484a9a76afccb51706b1675324f2a29246d8", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:git_tags"
            ], 
            "Size": 433557820, 
            "VirtualSize": 433557820
        }
    }
}
2017-08-12 19:53:36,273 p=8285 u=root |  PLAY RECAP *********************************************************************
2017-08-12 19:53:36,273 p=8285 u=root |  localhost                  : ok=11   changed=4    unreachable=0    failed=0   
2017-08-12 19:56:34,044 p=16059 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:56:34,046 p=16059 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:56:34,063 p=16059 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/original.yml': line 53, column 13, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      name: slmzsync
      tag: {{ current_tags }}
            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 19:57:02,010 p=16068 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 19:57:02,011 p=16068 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 19:57:02,087 p=16068 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 19:57:02,162 p=16068 u=root |  TASK [setup] *******************************************************************
2017-08-12 19:57:02,709 p=16068 u=root |  ok: [localhost]
2017-08-12 19:57:02,727 p=16068 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 19:57:03,067 p=16068 u=root |  ok: [localhost]
2017-08-12 19:57:03,069 p=16068 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 19:57:04,523 p=16068 u=root |  ok: [localhost]
2017-08-12 19:57:04,526 p=16068 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 19:57:04,703 p=16068 u=root |  changed: [localhost]
2017-08-12 19:57:04,705 p=16068 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 19:57:04,811 p=16068 u=root |  changed: [localhost]
2017-08-12 19:57:04,814 p=16068 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 19:57:04,860 p=16068 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003280", 
        "end": "2017-08-12 19:57:04.798743", 
        "rc": 0, 
        "start": "2017-08-12 19:57:04.795463", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:57:04,861 p=16068 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 19:57:05,040 p=16068 u=root |  changed: [localhost]
2017-08-12 19:57:05,042 p=16068 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 19:57:05,080 p=16068 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.065277", 
        "end": "2017-08-12 19:57:05.024849", 
        "rc": 0, 
        "start": "2017-08-12 19:57:04.959572", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 19:57:05,082 p=16068 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 19:57:05,457 p=16068 u=root |  ok: [localhost]
2017-08-12 19:57:05,460 p=16068 u=root |  TASK [Ensure slmzsync image is built] ******************************************
2017-08-12 19:57:05,776 p=16068 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (3 retries left).
2017-08-12 19:57:36,045 p=16068 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (2 retries left).
2017-08-12 19:58:06,314 p=16068 u=root |  FAILED - RETRYING: TASK: Ensure slmzsync image is built (1 retries left).
2017-08-12 19:58:36,569 p=16068 u=root |  An exception occurred during task execution. To see the full traceback, use -vvv. The error was: docker.errors.APIError: 500 Server Error: Internal Server Error ("Error parsing reference: "slmzsync:{'changed': True, 'end': '2017-08-12 19:57:04.798743', 'stdout': 'v1.0.0', 'cmd': 'git describe --tags', 'start': '2017-08-12 19:57:04.795463', 'delta': '0:00:00.003280', 'stderr': '', 'rc': 0, 'stdout_lines': ['v1.0.0'], 'warnings': []}" is not a valid repository/tag")
2017-08-12 19:58:36,569 p=16068 u=root |  fatal: [localhost]: FAILED! => {"attempts": 3, "changed": false, "failed": true, "module_stderr": "Traceback (most recent call last):\n  File \"/tmp/ansible_xJHJLW/ansible_module_docker_image.py\", line 593, in <module>\n    main()\n  File \"/tmp/ansible_xJHJLW/ansible_module_docker_image.py\", line 585, in main\n    ImageManager(client, results)\n  File \"/tmp/ansible_xJHJLW/ansible_module_docker_image.py\", line 291, in __init__\n    self.present()\n  File \"/tmp/ansible_xJHJLW/ansible_module_docker_image.py\", line 319, in present\n    self.results['image'] = self.build_image()\n  File \"/tmp/ansible_xJHJLW/ansible_module_docker_image.py\", line 514, in build_image\n    for line in self.client.build(**params):\n  File \"/usr/lib/python2.7/site-packages/docker/client.py\", line 238, in _stream_helper\n    yield self._result(response)\n  File \"/usr/lib/python2.7/site-packages/docker/client.py\", line 158, in _result\n    self._raise_for_status(response)\n  File \"/usr/lib/python2.7/site-packages/docker/client.py\", line 154, in _raise_for_status\n    raise errors.APIError(e, response, explanation=explanation)\ndocker.errors.APIError: 500 Server Error: Internal Server Error (\"Error parsing reference: \"slmzsync:{'changed': True, 'end': '2017-08-12 19:57:04.798743', 'stdout': 'v1.0.0', 'cmd': 'git describe --tags', 'start': '2017-08-12 19:57:04.795463', 'delta': '0:00:00.003280', 'stderr': '', 'rc': 0, 'stdout_lines': ['v1.0.0'], 'warnings': []}\" is not a valid repository/tag\")\n", "module_stdout": "", "msg": "MODULE FAILURE"}
2017-08-12 19:58:36,573 p=16068 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/original.retry

2017-08-12 19:58:36,574 p=16068 u=root |  PLAY RECAP *********************************************************************
2017-08-12 19:58:36,574 p=16068 u=root |  localhost                  : ok=9    changed=3    unreachable=0    failed=1   
2017-08-12 20:00:45,892 p=16273 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:00:45,893 p=16273 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:00:45,969 p=16273 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:00:46,017 p=16273 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:00:46,533 p=16273 u=root |  ok: [localhost]
2017-08-12 20:00:46,550 p=16273 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 20:00:46,903 p=16273 u=root |  ok: [localhost]
2017-08-12 20:00:46,905 p=16273 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 20:00:48,402 p=16273 u=root |  ok: [localhost]
2017-08-12 20:00:48,403 p=16273 u=root |  TASK [Checkout the latest tagged version] **************************************
2017-08-12 20:00:48,587 p=16273 u=root |  changed: [localhost]
2017-08-12 20:00:48,589 p=16273 u=root |  TASK [Git the tagged version] **************************************************
2017-08-12 20:00:48,701 p=16273 u=root |  changed: [localhost]
2017-08-12 20:00:48,703 p=16273 u=root |  TASK [Show the git checkout of docker-mediacascade] ****************************
2017-08-12 20:00:48,746 p=16273 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003586", 
        "end": "2017-08-12 20:00:48.687872", 
        "rc": 0, 
        "start": "2017-08-12 20:00:48.684286", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:00:48,748 p=16273 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 20:00:48,921 p=16273 u=root |  changed: [localhost]
2017-08-12 20:00:48,923 p=16273 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 20:00:48,973 p=16273 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.064773", 
        "end": "2017-08-12 20:00:48.908438", 
        "rc": 0, 
        "start": "2017-08-12 20:00:48.843665", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:00:48,975 p=16273 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 20:00:51,044 p=16273 u=root |  changed: [localhost]
2017-08-12 20:00:51,046 p=16273 u=root |  TASK [Ensure slmzsync image is built] ******************************************
2017-08-12 20:04:44,207 p=16273 u=root |  changed: [localhost]
2017-08-12 20:04:44,209 p=16273 u=root |  TASK [Show new image] **********************************************************
2017-08-12 20:04:44,250 p=16273 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:9a28f5ad0340d0131eac96b49cfdd83b5b4df400b60ddf0f5e3697bf1d51d61c", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "cf087adb8a68237e3b030594d6d5fe5c50d10e3359e1364277e23ff494368602", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:9a28f5ad0340d0131eac96b49cfdd83b5b4df400b60ddf0f5e3697bf1d51d61c", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T00:04:41.412601616Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "283", 
                    "DeviceName": "docker-253:0-260130-0c9f17e3a434281fa0c359b8b9d6a403e9f40dcc7578afd10d684dad029c0159", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:14455b1825013a6700dedc8888e3c306aa4d61f1f716694367f06c362ee6a4b8", 
            "Os": "linux", 
            "Parent": "sha256:9a28f5ad0340d0131eac96b49cfdd83b5b4df400b60ddf0f5e3697bf1d51d61c", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557820, 
            "VirtualSize": 433557820
        }
    }
}
2017-08-12 20:04:44,252 p=16273 u=root |  PLAY RECAP *********************************************************************
2017-08-12 20:04:44,252 p=16273 u=root |  localhost                  : ok=11   changed=5    unreachable=0    failed=0   
2017-08-12 20:16:10,377 p=24125 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:16:10,378 p=24125 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:16:10,451 p=24125 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:16:10,508 p=24125 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:16:11,031 p=24125 u=root |  ok: [localhost]
2017-08-12 20:16:11,067 p=24125 u=root |  TASK [Ensure "docker-mediacascade" git deployment key is in place] *************
2017-08-12 20:16:11,420 p=24125 u=root |  ok: [localhost]
2017-08-12 20:16:11,424 p=24125 u=root |  TASK [Ensure "docker-mediacascade" project is checked out] *********************
2017-08-12 20:16:12,220 p=24125 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "cmd": ["/usr/bin/git", "fetch", "origin"], "failed": true, "msg": "Failed to download remote objects and refs:  Warning: Permanently added 'github.csc.com,52.5.179.62' (ECDSA) to the list of known hosts.\r\nfatal: remote error: \n  Automation/\"docker-mediacascade is not a valid repository name\n  Email devcloud_support@csc.com for help\n"}
2017-08-12 20:16:12,221 p=24125 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/docker_mediacascade.retry

2017-08-12 20:16:12,221 p=24125 u=root |  PLAY RECAP *********************************************************************
2017-08-12 20:16:12,221 p=24125 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-12 20:17:02,632 p=24208 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:17:02,633 p=24208 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:17:02,708 p=24208 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:17:02,753 p=24208 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:17:03,265 p=24208 u=root |  ok: [localhost]
2017-08-12 20:17:03,303 p=24208 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 20:17:03,581 p=24208 u=root |   [ERROR]: User interrupted execution

2017-08-12 20:17:17,864 p=24274 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:17:17,865 p=24274 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:17:17,941 p=24274 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:17:17,990 p=24274 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:17:18,512 p=24274 u=root |  ok: [localhost]
2017-08-12 20:17:18,551 p=24274 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 20:17:18,903 p=24274 u=root |  ok: [localhost]
2017-08-12 20:17:18,907 p=24274 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 20:17:20,620 p=24274 u=root |  changed: [localhost]
2017-08-12 20:17:20,623 p=24274 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 20:17:20,813 p=24274 u=root |  changed: [localhost]
2017-08-12 20:17:20,816 p=24274 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 20:17:20,933 p=24274 u=root |  changed: [localhost]
2017-08-12 20:17:20,936 p=24274 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 20:17:20,957 p=24274 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003526", 
        "end": "2017-08-12 20:17:20.919511", 
        "rc": 0, 
        "start": "2017-08-12 20:17:20.915985", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:17:20,959 p=24274 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 20:17:21,146 p=24274 u=root |  changed: [localhost]
2017-08-12 20:17:21,148 p=24274 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 20:17:21,168 p=24274 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.068349", 
        "end": "2017-08-12 20:17:21.132499", 
        "rc": 0, 
        "start": "2017-08-12 20:17:21.064150", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:17:21,169 p=24274 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 20:17:23,108 p=24274 u=root |  changed: [localhost]
2017-08-12 20:17:23,111 p=24274 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 20:21:19,901 p=24274 u=root |  changed: [localhost]
2017-08-12 20:21:19,903 p=24274 u=root |  TASK [Show new image] **********************************************************
2017-08-12 20:21:19,925 p=24274 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:e979e519346aef46443c9f64d141049e931296944bd149bf2d1e24407bfe3fb0", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "c73025e109fe1d66c49b007b9cfcda67e2565c819982094be5a9395f22f4a005", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:e979e519346aef46443c9f64d141049e931296944bd149bf2d1e24407bfe3fb0", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T00:21:17.315520774Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "304", 
                    "DeviceName": "docker-253:0-260130-ec5ca55c9520fe39ba161430e14aaf58d3c0139be216691c6ce277b43e6f80ae", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:d1d15a9e6cf7a02184486de2220b71912fe50da9eb26dc42fc408876e306bae7", 
            "Os": "linux", 
            "Parent": "sha256:e979e519346aef46443c9f64d141049e931296944bd149bf2d1e24407bfe3fb0", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 20:21:19,927 p=24274 u=root |  PLAY RECAP *********************************************************************
2017-08-12 20:21:19,927 p=24274 u=root |  localhost                  : ok=11   changed=6    unreachable=0    failed=0   
2017-08-12 20:28:46,507 p=32108 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:28:46,508 p=32108 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:28:46,519 p=32108 u=root |  ERROR! 'gather_facts' is not a valid attribute for a PlaybookInclude

The error appears to have been in '/opt/autodeploy/projects/container_upg/tryme.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-12 20:29:08,695 p=32117 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:29:08,696 p=32117 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:29:08,705 p=32117 u=root |  ERROR! 'gather_facts' is not a valid attribute for a PlaybookInclude

The error appears to have been in '/opt/autodeploy/projects/container_upg/tryme.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-12 20:30:02,573 p=32126 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:30:02,574 p=32126 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:30:02,601 p=32126 u=root |  ERROR! included task files must contain a list of tasks

The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 2, column 1, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
vars:
^ here

2017-08-12 20:30:30,772 p=32136 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:30:30,773 p=32136 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:30:30,807 p=32136 u=root |  ERROR! no action detected in task. This often indicates a misspelled module name, or incorrect module path.

The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- vars:
  ^ here


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- vars:
  ^ here

2017-08-12 20:32:11,905 p=32145 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:32:11,906 p=32145 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:32:11,943 p=32145 u=root |  ERROR! unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>

The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: Set vars for tasks file
  ^ here


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 2, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

---
- name: Set vars for tasks file
  ^ here

2017-08-12 20:33:19,065 p=32154 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:33:19,067 p=32154 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:33:19,141 p=32154 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:33:19,200 p=32154 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:33:19,707 p=32154 u=root |  ok: [localhost]
2017-08-12 20:33:19,712 p=32154 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 20:33:19,769 p=32154 u=root |  ok: [localhost]
2017-08-12 20:33:19,788 p=32154 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 20:33:20,136 p=32154 u=root |  ok: [localhost]
2017-08-12 20:33:20,140 p=32154 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 20:33:21,935 p=32154 u=root |  ok: [localhost]
2017-08-12 20:33:21,938 p=32154 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 20:33:22,113 p=32154 u=root |  changed: [localhost]
2017-08-12 20:33:22,116 p=32154 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 20:33:22,225 p=32154 u=root |  changed: [localhost]
2017-08-12 20:33:22,228 p=32154 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 20:33:22,248 p=32154 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003262", 
        "end": "2017-08-12 20:33:22.211856", 
        "rc": 0, 
        "start": "2017-08-12 20:33:22.208594", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:33:22,250 p=32154 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 20:33:22,433 p=32154 u=root |  changed: [localhost]
2017-08-12 20:33:22,435 p=32154 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 20:33:22,454 p=32154 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.063276", 
        "end": "2017-08-12 20:33:22.420230", 
        "rc": 0, 
        "start": "2017-08-12 20:33:22.356954", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:33:22,456 p=32154 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 20:33:24,353 p=32154 u=root |  changed: [localhost]
2017-08-12 20:33:24,356 p=32154 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 20:37:08,751 p=32154 u=root |  changed: [localhost]
2017-08-12 20:37:08,753 p=32154 u=root |  TASK [Show new image] **********************************************************
2017-08-12 20:37:08,779 p=32154 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:2f1e491bd8ade282227fa76b7efd71b041f185934043db608b24c56bab991551", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "4115b223ff21d756afb4139ab5038e3e3201190cc33b59445a261a026b1fe268", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:2f1e491bd8ade282227fa76b7efd71b041f185934043db608b24c56bab991551", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T00:37:06.326951811Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "325", 
                    "DeviceName": "docker-253:0-260130-dcc368be37d2ca46f9cc42d2af53a1ceb4004daf9abb15bb726e8424d16c5aa6", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:6a27ea8ae7fa00910a45841ca3958e0990bc9b859d79bc56047f5fd38b96993c", 
            "Os": "linux", 
            "Parent": "sha256:2f1e491bd8ade282227fa76b7efd71b041f185934043db608b24c56bab991551", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 20:37:08,781 p=32154 u=root |  PLAY RECAP *********************************************************************
2017-08-12 20:37:08,781 p=32154 u=root |  localhost                  : ok=12   changed=5    unreachable=0    failed=0   
2017-08-12 20:42:57,925 p=40060 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 20:42:57,926 p=40060 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 20:42:58,004 p=40060 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 20:42:58,053 p=40060 u=root |  TASK [setup] *******************************************************************
2017-08-12 20:42:58,543 p=40060 u=root |  ok: [localhost]
2017-08-12 20:42:58,547 p=40060 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 20:42:58,599 p=40060 u=root |  ok: [localhost]
2017-08-12 20:42:58,621 p=40060 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 20:42:58,943 p=40060 u=root |  ok: [localhost]
2017-08-12 20:42:58,946 p=40060 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 20:43:00,488 p=40060 u=root |  ok: [localhost]
2017-08-12 20:43:00,492 p=40060 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 20:43:00,665 p=40060 u=root |  changed: [localhost]
2017-08-12 20:43:00,668 p=40060 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 20:43:00,774 p=40060 u=root |  changed: [localhost]
2017-08-12 20:43:00,777 p=40060 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 20:43:00,797 p=40060 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003483", 
        "end": "2017-08-12 20:43:00.760147", 
        "rc": 0, 
        "start": "2017-08-12 20:43:00.756664", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:43:00,799 p=40060 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 20:43:00,959 p=40060 u=root |  changed: [localhost]
2017-08-12 20:43:00,961 p=40060 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 20:43:00,980 p=40060 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.060129", 
        "end": "2017-08-12 20:43:00.945654", 
        "rc": 0, 
        "start": "2017-08-12 20:43:00.885525", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 20:43:00,982 p=40060 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 20:43:02,910 p=40060 u=root |  changed: [localhost]
2017-08-12 20:43:02,913 p=40060 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 20:46:45,731 p=40060 u=root |  changed: [localhost]
2017-08-12 20:46:45,733 p=40060 u=root |  TASK [Show new image] **********************************************************
2017-08-12 20:46:45,758 p=40060 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:19ce7108fc702a84dfb0945d8c194cc048d82f81c8ede06133c8b011bde9937a", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "8575143e66411f19ef9b2b6efc89ac6907b543fdfa392e2216f41f8377d98069", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:19ce7108fc702a84dfb0945d8c194cc048d82f81c8ede06133c8b011bde9937a", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T00:46:43.411491307Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "346", 
                    "DeviceName": "docker-253:0-260130-692670c3f678c048830dcce9e69d73046cce658e02abd4057580156a7691fc73", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:c14b1e3989266afd74a11caae9d61d677da9eefb6a1d9fd5e316c9568eddb837", 
            "Os": "linux", 
            "Parent": "sha256:19ce7108fc702a84dfb0945d8c194cc048d82f81c8ede06133c8b011bde9937a", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 20:46:45,760 p=40060 u=root |  PLAY RECAP *********************************************************************
2017-08-12 20:46:45,760 p=40060 u=root |  localhost                  : ok=12   changed=5    unreachable=0    failed=0   
2017-08-12 21:19:33,682 p=47917 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:19:33,683 p=47917 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:19:33,715 p=47917 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 79, column 27, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    path: /images
    patterns: {{ image }}*.tar.bz2
                          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 21:20:12,768 p=47926 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:20:12,769 p=47926 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:20:12,796 p=47926 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 79, column 29, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    path: /images
    patterns: "{{ image }}"*.tar.bz2
                            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 21:20:35,196 p=47935 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:20:35,197 p=47935 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:20:35,225 p=47935 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 103, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    flat: yes
    src: {{ slmzsynctar }}
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 21:21:48,048 p=47944 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:21:48,050 p=47944 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:21:48,076 p=47944 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 103, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    flat: yes
    src: {{ slmzsynctar }}
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-12 21:22:34,992 p=47953 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:22:34,994 p=47953 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:22:35,076 p=47953 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:22:35,133 p=47953 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:22:35,703 p=47953 u=root |  ok: [localhost]
2017-08-12 21:22:35,705 p=47953 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:22:35,738 p=47953 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'git_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 5, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#--------------------------------------------------\n- name: Set vars for tasks file\n  ^ here\n"}
2017-08-12 21:22:35,739 p=47953 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:22:35,739 p=47953 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:22:35,739 p=47953 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-12 21:23:58,906 p=48014 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:23:58,908 p=48014 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:23:58,981 p=48014 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:23:59,026 p=48014 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:23:59,531 p=48014 u=root |  ok: [localhost]
2017-08-12 21:23:59,533 p=48014 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:23:59,569 p=48014 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'git_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 5, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#--------------------------------------------------\n- name: Set vars for tasks file\n  ^ here\n"}
2017-08-12 21:23:59,571 p=48014 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:23:59,571 p=48014 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:23:59,571 p=48014 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-12 21:24:08,502 p=48075 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:24:08,504 p=48075 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:24:08,588 p=48075 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:24:08,633 p=48075 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:24:09,134 p=48075 u=root |  ok: [localhost]
2017-08-12 21:24:09,137 p=48075 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:24:09,153 p=48075 u=root |  ok: [localhost]
2017-08-12 21:24:09,177 p=48075 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 21:24:09,502 p=48075 u=root |  ok: [localhost]
2017-08-12 21:24:09,506 p=48075 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 21:24:11,120 p=48075 u=root |  ok: [localhost]
2017-08-12 21:24:11,123 p=48075 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 21:24:11,298 p=48075 u=root |  changed: [localhost]
2017-08-12 21:24:11,301 p=48075 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 21:24:11,413 p=48075 u=root |  changed: [localhost]
2017-08-12 21:24:11,416 p=48075 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 21:24:11,438 p=48075 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003343", 
        "end": "2017-08-12 21:24:11.399266", 
        "rc": 0, 
        "start": "2017-08-12 21:24:11.395923", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:24:11,441 p=48075 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 21:24:11,625 p=48075 u=root |  changed: [localhost]
2017-08-12 21:24:11,627 p=48075 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 21:24:11,648 p=48075 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.070877", 
        "end": "2017-08-12 21:24:11.610684", 
        "rc": 0, 
        "start": "2017-08-12 21:24:11.539807", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:24:11,651 p=48075 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 21:24:13,469 p=48075 u=root |  changed: [localhost]
2017-08-12 21:24:13,473 p=48075 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 21:27:54,507 p=48075 u=root |  changed: [localhost]
2017-08-12 21:27:54,509 p=48075 u=root |  TASK [Show new image] **********************************************************
2017-08-12 21:27:54,531 p=48075 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:3347c4e2ecb498d8c99c2c2339765e0a0a2a39b94620f281be96d2487a748ffd", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "abaf59a6770ac47004083f1a5c8dec396af489f353619540609d5413ddf7585b", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:3347c4e2ecb498d8c99c2c2339765e0a0a2a39b94620f281be96d2487a748ffd", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T01:27:52.198231656Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "368", 
                    "DeviceName": "docker-253:0-260130-3a2517c3124d3db2ded91f3bfda4ef80602f6c643941483c7c6dda00d1aa1201", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:12690b10044e18fffd893722f5bf6df4e1bb960c8ba0a66ccc7f601bc1f8a0dd", 
            "Os": "linux", 
            "Parent": "sha256:3347c4e2ecb498d8c99c2c2339765e0a0a2a39b94620f281be96d2487a748ffd", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 21:27:54,533 p=48075 u=root |  TASK [Set the slmzsynctar file name] *******************************************
2017-08-12 21:27:54,551 p=48075 u=root |  ok: [localhost]
2017-08-12 21:27:54,554 p=48075 u=root |  TASK [Find previously built slmzsync tar bzip files] ***************************
2017-08-12 21:27:54,755 p=48075 u=root |  ok: [localhost]
2017-08-12 21:27:54,758 p=48075 u=root |  TASK [Show old slmzsync tar bzip files] ****************************************
2017-08-12 21:27:54,780 p=48075 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [
            {
                "atime": 1499816353.8089743, 
                "ctime": 1502586126.3362396, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 145849571, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1490041142.9101853, 
                "nlink": 1, 
                "path": "/images/slmzsync-v1.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 145594161, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-12 21:27:54,785 p=48075 u=root |  TASK [Remove old slmzsync tar bzip files] **************************************
2017-08-12 21:27:54,898 p=48075 u=root |  changed: [localhost] => (item={u'uid': 0, u'woth': False, u'mtime': 1490041142.9101853, u'inode': 145849571, u'isgid': False, u'size': 145594161, u'roth': True, u'isuid': False, u'isreg': True, u'gid': 0, u'ischr': False, u'wusr': True, u'xoth': False, u'rusr': True, u'nlink': 1, u'issock': False, u'rgrp': True, u'path': u'/images/slmzsync-v1.0.0.tar.bz2', u'xusr': False, u'atime': 1499816353.8089743, u'isdir': False, u'ctime': 1502586126.3362396, u'wgrp': False, u'xgrp': False, u'dev': 64768, u'isblk': False, u'isfifo': False, u'mode': u'0644', u'islnk': False})
2017-08-12 21:27:54,901 p=48075 u=root |  TASK [Export new slmzsync to a tar bzip file] **********************************
2017-08-12 21:27:55,055 p=48075 u=root |  changed: [localhost]
2017-08-12 21:27:55,057 p=48075 u=root |  TASK [Ensure correct mode on slmzsynctar] **************************************
2017-08-12 21:27:55,162 p=48075 u=root |  ok: [localhost]
2017-08-12 21:27:55,167 p=48075 u=root |  TASK [Fetch /images/slmzsync-v1.0.0.tar.bz2 to Jenkins Server] *****************
2017-08-12 21:27:55,182 p=48075 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 103, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ slmzsynctar }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 21:27:55,183 p=48075 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:27:55,183 p=48075 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:27:55,183 p=48075 u=root |  localhost                  : ok=18   changed=7    unreachable=0    failed=1   
2017-08-12 21:34:14,330 p=55953 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:34:14,331 p=55953 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:34:14,416 p=55953 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:34:14,464 p=55953 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:34:14,972 p=55953 u=root |  ok: [localhost]
2017-08-12 21:34:14,975 p=55953 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:34:14,991 p=55953 u=root |  ok: [localhost]
2017-08-12 21:34:15,012 p=55953 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 21:34:15,037 p=55953 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/etc/slm_mediacascade_ro_deployment_key_rsa' in expected paths."}
2017-08-12 21:34:15,040 p=55953 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:34:15,040 p=55953 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:34:15,040 p=55953 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-12 21:35:04,122 p=56018 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:35:04,123 p=56018 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:35:04,201 p=56018 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:35:04,248 p=56018 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:35:04,745 p=56018 u=root |  ok: [localhost]
2017-08-12 21:35:04,748 p=56018 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:35:04,764 p=56018 u=root |  ok: [localhost]
2017-08-12 21:35:04,785 p=56018 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 21:35:05,113 p=56018 u=root |  ok: [localhost]
2017-08-12 21:35:05,116 p=56018 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 21:35:06,903 p=56018 u=root |  ok: [localhost]
2017-08-12 21:35:06,906 p=56018 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 21:35:07,087 p=56018 u=root |  changed: [localhost]
2017-08-12 21:35:07,090 p=56018 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 21:35:07,197 p=56018 u=root |  changed: [localhost]
2017-08-12 21:35:07,201 p=56018 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 21:35:07,220 p=56018 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003256", 
        "end": "2017-08-12 21:35:07.185108", 
        "rc": 0, 
        "start": "2017-08-12 21:35:07.181852", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:35:07,222 p=56018 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 21:35:07,394 p=56018 u=root |  changed: [localhost]
2017-08-12 21:35:07,396 p=56018 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 21:35:07,416 p=56018 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.061032", 
        "end": "2017-08-12 21:35:07.380505", 
        "rc": 0, 
        "start": "2017-08-12 21:35:07.319473", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:35:07,417 p=56018 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 21:35:09,206 p=56018 u=root |  changed: [localhost]
2017-08-12 21:35:09,209 p=56018 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 21:38:55,699 p=56018 u=root |  changed: [localhost]
2017-08-12 21:38:55,701 p=56018 u=root |  TASK [Show new image] **********************************************************
2017-08-12 21:38:55,725 p=56018 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:bdb2a8fa1789a3c98c3be9a1a942ebdf98b7cae54cac0841e8486c599fb96e5b", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "89d1e44e405bda531b56b49db3e3d1565201b9814e14b86ea8e3227b06622c5d", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:bdb2a8fa1789a3c98c3be9a1a942ebdf98b7cae54cac0841e8486c599fb96e5b", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T01:38:53.270717467Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "389", 
                    "DeviceName": "docker-253:0-260130-eeed4e8096a74cb98457391276c293119a3f6995abd4989c82e2c43ee22bf896", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:d62785b510ba4d7c0ae2930fde4199cb0aa85a74eca507434ae27b8411818270", 
            "Os": "linux", 
            "Parent": "sha256:bdb2a8fa1789a3c98c3be9a1a942ebdf98b7cae54cac0841e8486c599fb96e5b", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 21:38:55,727 p=56018 u=root |  TASK [Set the slmzsynctar file name] *******************************************
2017-08-12 21:38:55,748 p=56018 u=root |  ok: [localhost]
2017-08-12 21:38:55,751 p=56018 u=root |  TASK [Find previously built slmzsync tar bzip files] ***************************
2017-08-12 21:38:55,950 p=56018 u=root |  ok: [localhost]
2017-08-12 21:38:55,953 p=56018 u=root |  TASK [Show old slmzsync tar bzip files] ****************************************
2017-08-12 21:38:55,975 p=56018 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [
            {
                "atime": 1502587674.9999635, 
                "ctime": 1502587675.0409615, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146391624, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502587675.0409615, 
                "nlink": 1, 
                "path": "/images/slmzsync-v1.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-12 21:38:55,981 p=56018 u=root |  TASK [Remove old slmzsync tar bzip files] **************************************
2017-08-12 21:38:56,101 p=56018 u=root |  changed: [localhost] => (item={u'uid': 0, u'woth': False, u'mtime': 1502587675.0409615, u'inode': 146391624, u'isgid': False, u'size': 14, u'roth': True, u'isuid': False, u'isreg': True, u'gid': 0, u'ischr': False, u'wusr': True, u'xoth': False, u'rusr': True, u'nlink': 1, u'issock': False, u'rgrp': True, u'path': u'/images/slmzsync-v1.0.0.tar.bz2', u'xusr': False, u'atime': 1502587674.9999635, u'isdir': False, u'ctime': 1502587675.0409615, u'wgrp': False, u'xgrp': False, u'dev': 64768, u'isblk': False, u'isfifo': False, u'mode': u'0644', u'islnk': False})
2017-08-12 21:38:56,105 p=56018 u=root |  TASK [Export new slmzsync to a tar bzip file] **********************************
2017-08-12 21:38:56,250 p=56018 u=root |  changed: [localhost]
2017-08-12 21:38:56,252 p=56018 u=root |  TASK [Ensure correct mode on slmzsynctar] **************************************
2017-08-12 21:38:56,359 p=56018 u=root |  ok: [localhost]
2017-08-12 21:38:56,362 p=56018 u=root |  TASK [Fetch /images/slmzsync-v1.0.0.tar.bz2 to Jenkins Server] *****************
2017-08-12 21:38:56,376 p=56018 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 103, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ slmzsynctar }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 21:38:56,379 p=56018 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:38:56,379 p=56018 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:38:56,379 p=56018 u=root |  localhost                  : ok=18   changed=7    unreachable=0    failed=1   
2017-08-12 21:42:59,815 p=63892 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 21:42:59,817 p=63892 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 21:42:59,897 p=63892 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 21:42:59,951 p=63892 u=root |  TASK [setup] *******************************************************************
2017-08-12 21:43:00,459 p=63892 u=root |  ok: [localhost]
2017-08-12 21:43:00,462 p=63892 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 21:43:00,478 p=63892 u=root |  ok: [localhost]
2017-08-12 21:43:00,499 p=63892 u=root |  TASK [Ensure docker-mediacascade git deployment key is in place] ***************
2017-08-12 21:43:00,826 p=63892 u=root |  ok: [localhost]
2017-08-12 21:43:00,829 p=63892 u=root |  TASK [Ensure docker-mediacascade project is checked out] ***********************
2017-08-12 21:43:02,415 p=63892 u=root |  ok: [localhost]
2017-08-12 21:43:02,418 p=63892 u=root |  TASK [Checkout the latest tagged version of docker-mediacascade] ***************
2017-08-12 21:43:02,610 p=63892 u=root |  changed: [localhost]
2017-08-12 21:43:02,614 p=63892 u=root |  TASK [Git the tagged version of "docker-mediacascade"] *************************
2017-08-12 21:43:02,720 p=63892 u=root |  changed: [localhost]
2017-08-12 21:43:02,724 p=63892 u=root |  TASK [Show tagged version of "docker-mediacascade"] ****************************
2017-08-12 21:43:02,744 p=63892 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003288", 
        "end": "2017-08-12 21:43:02.708018", 
        "rc": 0, 
        "start": "2017-08-12 21:43:02.704730", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:43:02,746 p=63892 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 21:43:02,914 p=63892 u=root |  changed: [localhost]
2017-08-12 21:43:02,915 p=63892 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 21:43:02,935 p=63892 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.059087", 
        "end": "2017-08-12 21:43:02.900326", 
        "rc": 0, 
        "start": "2017-08-12 21:43:02.841239", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 21:43:02,937 p=63892 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 21:43:04,772 p=63892 u=root |  changed: [localhost]
2017-08-12 21:43:04,775 p=63892 u=root |  TASK [Ensure "slmzsync" image is built] ****************************************
2017-08-12 21:46:47,223 p=63892 u=root |  changed: [localhost]
2017-08-12 21:46:47,225 p=63892 u=root |  TASK [Show new image] **********************************************************
2017-08-12 21:46:47,248 p=63892 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmzsync:v1.0.0 from /opt/csc/src/docker-mediacascade"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "--help"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:113cec17122c9c6963066d907e0ff5577aa09af27e199ee89236421a83a306e4", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Container": "36fb8daed3bf7b0a30c6fc55ce649f11dc6fe7978e84fa1ac8898e1174cabf76", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"--help\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": [
                    "/usr/bin/ansible-playbook"
                ], 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
                ], 
                "Hostname": "ae9df72d0f92", 
                "Image": "sha256:113cec17122c9c6963066d907e0ff5577aa09af27e199ee89236421a83a306e4", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "ansible", 
                "Volumes": null, 
                "WorkingDir": "/etc/ansible/roles/mediacascade/playbooks"
            }, 
            "Created": "2017-08-13T01:46:44.900213486Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "410", 
                    "DeviceName": "docker-253:0-260130-392ec4e1e34eadd964d83406b204681cd3a1e9cb68625778ffd6cf60bf814d91", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:3c359678032475ae04aa7dd750e049192e9c3aeb365797964eb148a12b71a559", 
            "Os": "linux", 
            "Parent": "sha256:113cec17122c9c6963066d907e0ff5577aa09af27e199ee89236421a83a306e4", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmzsync:v1.0.0"
            ], 
            "Size": 433557862, 
            "VirtualSize": 433557862
        }
    }
}
2017-08-12 21:46:47,250 p=63892 u=root |  TASK [Set the slmzsynctar file name] *******************************************
2017-08-12 21:46:47,276 p=63892 u=root |  ok: [localhost]
2017-08-12 21:46:47,280 p=63892 u=root |  TASK [Find previously built slmzsync tar bzip files] ***************************
2017-08-12 21:46:47,477 p=63892 u=root |  ok: [localhost]
2017-08-12 21:46:47,480 p=63892 u=root |  TASK [Show old slmzsync tar bzip files] ****************************************
2017-08-12 21:46:47,501 p=63892 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [
            {
                "atime": 1502588336.200263, 
                "ctime": 1502588336.235261, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146391612, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502588336.235261, 
                "nlink": 1, 
                "path": "/images/slmzsync-v1.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-12 21:46:47,504 p=63892 u=root |  TASK [Remove old slmzsync tar bzip files] **************************************
2017-08-12 21:46:47,622 p=63892 u=root |  changed: [localhost] => (item={u'uid': 0, u'woth': False, u'mtime': 1502588336.235261, u'inode': 146391612, u'isgid': False, u'size': 14, u'roth': True, u'isuid': False, u'isreg': True, u'gid': 0, u'ischr': False, u'wusr': True, u'xoth': False, u'rusr': True, u'nlink': 1, u'issock': False, u'rgrp': True, u'path': u'/images/slmzsync-v1.0.0.tar.bz2', u'xusr': False, u'atime': 1502588336.200263, u'isdir': False, u'ctime': 1502588336.235261, u'wgrp': False, u'xgrp': False, u'dev': 64768, u'isblk': False, u'isfifo': False, u'mode': u'0644', u'islnk': False})
2017-08-12 21:46:47,627 p=63892 u=root |  TASK [Export new slmzsync to a tar bzip file] **********************************
2017-08-12 21:46:47,768 p=63892 u=root |  changed: [localhost]
2017-08-12 21:46:47,770 p=63892 u=root |  TASK [Ensure correct mode on slmzsynctar] **************************************
2017-08-12 21:46:47,878 p=63892 u=root |  ok: [localhost]
2017-08-12 21:46:47,882 p=63892 u=root |  TASK [Fetch /images/slmzsync-v1.0.0.tar.bz2 to Jenkins Server] *****************
2017-08-12 21:46:47,896 p=63892 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 105, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ slmzsynctar }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 21:46:47,897 p=63892 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 21:46:47,897 p=63892 u=root |  PLAY RECAP *********************************************************************
2017-08-12 21:46:47,897 p=63892 u=root |  localhost                  : ok=18   changed=7    unreachable=0    failed=1   
2017-08-12 23:24:27,771 p=71960 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 23:24:27,772 p=71960 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 23:24:27,864 p=71960 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 23:24:27,935 p=71960 u=root |  TASK [setup] *******************************************************************
2017-08-12 23:24:28,541 p=71960 u=root |  ok: [localhost]
2017-08-12 23:24:28,543 p=71960 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 23:24:28,559 p=71960 u=root |  ok: [localhost]
2017-08-12 23:24:28,581 p=71960 u=root |  TASK [Ensure docker-slmpuppet git deployment key is in place] ******************
2017-08-12 23:24:28,940 p=71960 u=root |  changed: [localhost]
2017-08-12 23:24:28,944 p=71960 u=root |  TASK [Ensure docker-slmpuppet project is checked out] **************************
2017-08-12 23:24:30,525 p=71960 u=root |  changed: [localhost]
2017-08-12 23:24:30,529 p=71960 u=root |  TASK [Checkout the latest tagged version of docker-slmpuppet] ******************
2017-08-12 23:24:30,708 p=71960 u=root |  changed: [localhost]
2017-08-12 23:24:30,711 p=71960 u=root |  TASK [Git the tagged version of "docker-slmpuppet"] ****************************
2017-08-12 23:24:30,822 p=71960 u=root |  changed: [localhost]
2017-08-12 23:24:30,825 p=71960 u=root |  TASK [Show tagged version of "docker-slmpuppet"] *******************************
2017-08-12 23:24:30,844 p=71960 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003261", 
        "end": "2017-08-12 23:24:30.808674", 
        "rc": 0, 
        "start": "2017-08-12 23:24:30.805413", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:24:30,846 p=71960 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 23:24:31,034 p=71960 u=root |  changed: [localhost]
2017-08-12 23:24:31,036 p=71960 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 23:24:31,056 p=71960 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.079498", 
        "end": "2017-08-12 23:24:31.020063", 
        "rc": 0, 
        "start": "2017-08-12 23:24:30.940565", 
        "stderr": "", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-12 23:24:31,058 p=71960 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 23:24:31,396 p=71960 u=root |  ok: [localhost]
2017-08-12 23:24:31,400 p=71960 u=root |  TASK [Ensure "slmpuppet" image is built] ***************************************
2017-08-12 23:26:41,555 p=71960 u=root |  changed: [localhost]
2017-08-12 23:26:41,557 p=71960 u=root |  TASK [Show new image] **********************************************************
2017-08-12 23:26:41,582 p=71960 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmpuppet:v1.0.0 from /opt/csc/src/docker-slmpuppet"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "sudo puppet master --no-daemonize --verbose"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:253ab991702f39b15b3ceb0ec04df870db4cf261020c362f692267c8693bd42a", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Container": "5ef2d1691450a656933baad6118819496785767f4d7076324b813a82800b3244", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"/bin/sh\" \"-c\" \"sudo puppet master --no-daemonize --verbose\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:253ab991702f39b15b3ceb0ec04df870db4cf261020c362f692267c8693bd42a", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Created": "2017-08-13T03:26:39.266076966Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "441", 
                    "DeviceName": "docker-253:0-260130-067943186f47d5c8c2b4573edbdcae94d1aba703384f64bf2549d54e390f864e", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:198c354b431499321133abe6e845043d6401766185421522da8a6bbd1cfaf928", 
            "Os": "linux", 
            "Parent": "sha256:253ab991702f39b15b3ceb0ec04df870db4cf261020c362f692267c8693bd42a", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmpuppet:v1.0.0"
            ], 
            "Size": 231597059, 
            "VirtualSize": 231597059
        }
    }
}
2017-08-12 23:26:41,584 p=71960 u=root |  TASK [Set the tar bzip file name] **********************************************
2017-08-12 23:26:41,606 p=71960 u=root |  ok: [localhost]
2017-08-12 23:26:41,608 p=71960 u=root |  TASK [Find previously built slmpuppet tar bzip files] **************************
2017-08-12 23:26:41,803 p=71960 u=root |  ok: [localhost]
2017-08-12 23:26:41,807 p=71960 u=root |  TASK [Show old slmpuppet tar bzip files] ***************************************
2017-08-12 23:26:41,827 p=71960 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-12 23:26:41,831 p=71960 u=root |  TASK [Remove old slmpuppet tar bzip files] *************************************
2017-08-12 23:26:41,856 p=71960 u=root |  TASK [Export new slmpuppet to a tar bzip file] *********************************
2017-08-12 23:26:41,871 p=71960 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'slmzsynctar' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 95, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Export new {{ image }} to a tar bzip file\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 23:26:41,872 p=71960 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 23:26:41,872 p=71960 u=root |  PLAY RECAP *********************************************************************
2017-08-12 23:26:41,872 p=71960 u=root |  localhost                  : ok=15   changed=6    unreachable=0    failed=1   
2017-08-12 23:36:53,044 p=77343 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 23:36:53,045 p=77343 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 23:36:53,126 p=77343 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 23:36:53,179 p=77343 u=root |  TASK [setup] *******************************************************************
2017-08-12 23:36:53,706 p=77343 u=root |  ok: [localhost]
2017-08-12 23:36:53,709 p=77343 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 23:36:53,725 p=77343 u=root |  ok: [localhost]
2017-08-12 23:36:53,745 p=77343 u=root |  TASK [Ensure docker-slmpuppet git deployment key is in place] ******************
2017-08-12 23:36:54,078 p=77343 u=root |  ok: [localhost]
2017-08-12 23:36:54,081 p=77343 u=root |  TASK [Ensure docker-slmpuppet project is checked out] **************************
2017-08-12 23:36:55,665 p=77343 u=root |  changed: [localhost]
2017-08-12 23:36:55,668 p=77343 u=root |  TASK [Checkout the latest tagged version of docker-slmpuppet] ******************
2017-08-12 23:36:55,846 p=77343 u=root |  changed: [localhost]
2017-08-12 23:36:55,849 p=77343 u=root |  TASK [Git the tagged version of "docker-slmpuppet"] ****************************
2017-08-12 23:36:55,954 p=77343 u=root |  changed: [localhost]
2017-08-12 23:36:55,957 p=77343 u=root |  TASK [Show tagged version of "docker-slmpuppet"] *******************************
2017-08-12 23:36:55,977 p=77343 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003403", 
        "end": "2017-08-12 23:36:55.941788", 
        "rc": 0, 
        "start": "2017-08-12 23:36:55.938385", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:36:55,979 p=77343 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 23:36:56,155 p=77343 u=root |  changed: [localhost]
2017-08-12 23:36:56,156 p=77343 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 23:36:56,185 p=77343 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.065270", 
        "end": "2017-08-12 23:36:56.141560", 
        "rc": 0, 
        "start": "2017-08-12 23:36:56.076290", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:36:56,188 p=77343 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 23:36:57,915 p=77343 u=root |  changed: [localhost]
2017-08-12 23:36:57,918 p=77343 u=root |  TASK [Ensure "slmpuppet" image is built] ***************************************
2017-08-12 23:39:05,613 p=77343 u=root |  changed: [localhost]
2017-08-12 23:39:05,615 p=77343 u=root |  TASK [Show new image] **********************************************************
2017-08-12 23:39:05,637 p=77343 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmpuppet:v1.0.0 from /opt/csc/src/docker-slmpuppet"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "sudo puppet master --no-daemonize --verbose"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:98362700aeb8a03ed8ea4a786f798dc522b70cef17d65e7127ada1ad0211ab5f", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Container": "a052a1c877198f665997f6483b5da0649489e594b69a6279396edce5f983d64e", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"/bin/sh\" \"-c\" \"sudo puppet master --no-daemonize --verbose\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:98362700aeb8a03ed8ea4a786f798dc522b70cef17d65e7127ada1ad0211ab5f", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Created": "2017-08-13T03:39:03.34324046Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "468", 
                    "DeviceName": "docker-253:0-260130-f2478e078ed49de08bd33dd228e2526f96bc8fea60d8841f70a2dc8319e1a90c", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:4a80efe144fc877caf5219b492161011cc9ae49629c19fd9ff70fc7bb0897efc", 
            "Os": "linux", 
            "Parent": "sha256:98362700aeb8a03ed8ea4a786f798dc522b70cef17d65e7127ada1ad0211ab5f", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmpuppet:v1.0.0"
            ], 
            "Size": 231597059, 
            "VirtualSize": 231597059
        }
    }
}
2017-08-12 23:39:05,639 p=77343 u=root |  TASK [Set the tar bzip file name] **********************************************
2017-08-12 23:39:05,656 p=77343 u=root |  ok: [localhost]
2017-08-12 23:39:05,659 p=77343 u=root |  TASK [Find previously built slmpuppet tar bzip files] **************************
2017-08-12 23:39:05,860 p=77343 u=root |  ok: [localhost]
2017-08-12 23:39:05,863 p=77343 u=root |  TASK [Show old slmpuppet tar bzip files] ***************************************
2017-08-12 23:39:05,882 p=77343 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-12 23:39:05,886 p=77343 u=root |  TASK [Remove old slmpuppet tar bzip files] *************************************
2017-08-12 23:39:05,901 p=77343 u=root |  TASK [Export new slmpuppet to a tar bzip file] *********************************
2017-08-12 23:39:06,042 p=77343 u=root |  changed: [localhost]
2017-08-12 23:39:06,045 p=77343 u=root |  TASK [Ensure correct mode on /images/slmpuppet-v1.0.0.tar.bz2] *****************
2017-08-12 23:39:06,150 p=77343 u=root |  ok: [localhost]
2017-08-12 23:39:06,154 p=77343 u=root |  TASK [Fetch /images/slmpuppet-v1.0.0.tar.bz2 to Jenkins Server] ****************
2017-08-12 23:39:06,167 p=77343 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 105, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ tar_bzip }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 23:39:06,169 p=77343 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 23:39:06,169 p=77343 u=root |  PLAY RECAP *********************************************************************
2017-08-12 23:39:06,169 p=77343 u=root |  localhost                  : ok=17   changed=7    unreachable=0    failed=1   
2017-08-12 23:41:13,682 p=82734 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 23:41:13,683 p=82734 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 23:41:13,757 p=82734 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 23:41:13,808 p=82734 u=root |  TASK [setup] *******************************************************************
2017-08-12 23:41:14,315 p=82734 u=root |  ok: [localhost]
2017-08-12 23:41:14,317 p=82734 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 23:41:14,333 p=82734 u=root |  ok: [localhost]
2017-08-12 23:41:14,352 p=82734 u=root |  TASK [Ensure docker-slmpuppet git deployment key is in place] ******************
2017-08-12 23:41:14,673 p=82734 u=root |  ok: [localhost]
2017-08-12 23:41:14,676 p=82734 u=root |  TASK [Ensure docker-slmpuppet project is checked out] **************************
2017-08-12 23:41:16,200 p=82734 u=root |  changed: [localhost]
2017-08-12 23:41:16,203 p=82734 u=root |  TASK [Checkout the latest tagged version of docker-slmpuppet] ******************
2017-08-12 23:41:16,379 p=82734 u=root |  changed: [localhost]
2017-08-12 23:41:16,383 p=82734 u=root |  TASK [Git the tagged version of "docker-slmpuppet"] ****************************
2017-08-12 23:41:16,491 p=82734 u=root |  changed: [localhost]
2017-08-12 23:41:16,495 p=82734 u=root |  TASK [Show tagged version of "docker-slmpuppet"] *******************************
2017-08-12 23:41:16,514 p=82734 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003246", 
        "end": "2017-08-12 23:41:16.478681", 
        "rc": 0, 
        "start": "2017-08-12 23:41:16.475435", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:41:16,516 p=82734 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 23:41:16,691 p=82734 u=root |  changed: [localhost]
2017-08-12 23:41:16,692 p=82734 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 23:41:16,711 p=82734 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.061172", 
        "end": "2017-08-12 23:41:16.677494", 
        "rc": 0, 
        "start": "2017-08-12 23:41:16.616322", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:41:16,713 p=82734 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 23:41:18,440 p=82734 u=root |  changed: [localhost]
2017-08-12 23:41:18,443 p=82734 u=root |  TASK [Ensure "slmpuppet" image is built] ***************************************
2017-08-12 23:43:27,060 p=82734 u=root |  changed: [localhost]
2017-08-12 23:43:27,062 p=82734 u=root |  TASK [Show new image] **********************************************************
2017-08-12 23:43:27,083 p=82734 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmpuppet:v1.0.0 from /opt/csc/src/docker-slmpuppet"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "sudo puppet master --no-daemonize --verbose"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:761adeaf5639377b8b7f2dd9bce14c7ee8f782873f9f5df3187db8a6e5df8c69", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Container": "4947dd1ef8aa3f0dfbecbf91df623535265a609ee1d04f10986c1ac625f2cc01", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"/bin/sh\" \"-c\" \"sudo puppet master --no-daemonize --verbose\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:761adeaf5639377b8b7f2dd9bce14c7ee8f782873f9f5df3187db8a6e5df8c69", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Created": "2017-08-13T03:43:24.814274747Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "495", 
                    "DeviceName": "docker-253:0-260130-d6e0acab7e0bfcc7a97985d5205a1117036187ec7c14dedbeddebddce05ecec1", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:fa9228f0ef6fe74baac80cfabcfcc933308696be4e3e3427fab05429437b87f4", 
            "Os": "linux", 
            "Parent": "sha256:761adeaf5639377b8b7f2dd9bce14c7ee8f782873f9f5df3187db8a6e5df8c69", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmpuppet:v1.0.0"
            ], 
            "Size": 231597059, 
            "VirtualSize": 231597059
        }
    }
}
2017-08-12 23:43:27,085 p=82734 u=root |  TASK [Set the tar bzip file name] **********************************************
2017-08-12 23:43:27,102 p=82734 u=root |  ok: [localhost]
2017-08-12 23:43:27,105 p=82734 u=root |  TASK [Find previously built slmpuppet tar bzip files] **************************
2017-08-12 23:43:27,291 p=82734 u=root |  ok: [localhost]
2017-08-12 23:43:27,294 p=82734 u=root |  TASK [Show old slmpuppet tar bzip files] ***************************************
2017-08-12 23:43:27,313 p=82734 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 2, 
        "files": [
            {
                "atime": 1502595545.9948833, 
                "ctime": 1502595546.0288815, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146391637, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502595546.0288815, 
                "nlink": 1, 
                "path": "/images/slmpuppet-v1.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-12 23:43:27,316 p=82734 u=root |  TASK [Remove old slmpuppet tar bzip files] *************************************
2017-08-12 23:43:27,420 p=82734 u=root |  changed: [localhost] => (item={u'uid': 0, u'woth': False, u'mtime': 1502595546.0288815, u'inode': 146391637, u'isgid': False, u'size': 14, u'roth': True, u'isuid': False, u'isreg': True, u'gid': 0, u'ischr': False, u'wusr': True, u'xoth': False, u'rusr': True, u'nlink': 1, u'issock': False, u'rgrp': True, u'path': u'/images/slmpuppet-v1.0.0.tar.bz2', u'xusr': False, u'atime': 1502595545.9948833, u'isdir': False, u'ctime': 1502595546.0288815, u'wgrp': False, u'xgrp': False, u'dev': 64768, u'isblk': False, u'isfifo': False, u'mode': u'0644', u'islnk': False})
2017-08-12 23:43:27,423 p=82734 u=root |  TASK [Export new slmpuppet to a tar bzip file] *********************************
2017-08-12 23:43:27,563 p=82734 u=root |  changed: [localhost]
2017-08-12 23:43:27,566 p=82734 u=root |  TASK [Ensure correct mode on /images/slmpuppet-v1.0.0.tar.bz2] *****************
2017-08-12 23:43:27,667 p=82734 u=root |  ok: [localhost]
2017-08-12 23:43:27,670 p=82734 u=root |  TASK [Fetch /images/slmpuppet-v1.0.0.tar.bz2 to Jenkins Server] ****************
2017-08-12 23:43:27,683 p=82734 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 105, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ tar_bzip }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 23:43:27,684 p=82734 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 23:43:27,684 p=82734 u=root |  PLAY RECAP *********************************************************************
2017-08-12 23:43:27,684 p=82734 u=root |  localhost                  : ok=18   changed=8    unreachable=0    failed=1   
2017-08-12 23:45:30,248 p=88121 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-12 23:45:30,250 p=88121 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-12 23:45:30,326 p=88121 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-12 23:45:30,372 p=88121 u=root |  TASK [setup] *******************************************************************
2017-08-12 23:45:30,873 p=88121 u=root |  ok: [localhost]
2017-08-12 23:45:30,875 p=88121 u=root |  TASK [Set vars for tasks file] *************************************************
2017-08-12 23:45:30,890 p=88121 u=root |  ok: [localhost]
2017-08-12 23:45:30,913 p=88121 u=root |  TASK [Ensure docker-slmpuppet git deployment key is in place] ******************
2017-08-12 23:45:31,242 p=88121 u=root |  ok: [localhost]
2017-08-12 23:45:31,246 p=88121 u=root |  TASK [Ensure docker-slmpuppet project is checked out] **************************
2017-08-12 23:45:33,075 p=88121 u=root |  changed: [localhost]
2017-08-12 23:45:33,078 p=88121 u=root |  TASK [Checkout the latest tagged version of docker-slmpuppet] ******************
2017-08-12 23:45:33,254 p=88121 u=root |  changed: [localhost]
2017-08-12 23:45:33,257 p=88121 u=root |  TASK [Git the tagged version of "docker-slmpuppet"] ****************************
2017-08-12 23:45:33,370 p=88121 u=root |  changed: [localhost]
2017-08-12 23:45:33,373 p=88121 u=root |  TASK [Show tagged version of "docker-slmpuppet"] *******************************
2017-08-12 23:45:33,394 p=88121 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003872", 
        "end": "2017-08-12 23:45:33.357249", 
        "rc": 0, 
        "start": "2017-08-12 23:45:33.353377", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:45:33,397 p=88121 u=root |  TASK [Get list of docker image tags present] ***********************************
2017-08-12 23:45:33,571 p=88121 u=root |  changed: [localhost]
2017-08-12 23:45:33,573 p=88121 u=root |  TASK [Show the current image tags] *********************************************
2017-08-12 23:45:33,591 p=88121 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.063008", 
        "end": "2017-08-12 23:45:33.557916", 
        "rc": 0, 
        "start": "2017-08-12 23:45:33.494908", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-12 23:45:33,594 p=88121 u=root |  TASK [Remove existing image (force rebuild)] ***********************************
2017-08-12 23:45:35,323 p=88121 u=root |  changed: [localhost]
2017-08-12 23:45:35,326 p=88121 u=root |  TASK [Ensure "slmpuppet" image is built] ***************************************
2017-08-12 23:48:15,221 p=88121 u=root |  changed: [localhost]
2017-08-12 23:48:15,222 p=88121 u=root |  TASK [Show new image] **********************************************************
2017-08-12 23:48:15,243 p=88121 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmpuppet:v1.0.0 from /opt/csc/src/docker-slmpuppet"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "sudo puppet master --no-daemonize --verbose"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:2a211e7d5e2cd91a6b7f8b83f93b79d85e8252ccfa926ec45565bf4ad15e16c5", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Container": "48bcd58a9fbcbb39bfdf24bfae8fcb3e46636246edc87a33b711ecba5109b63e", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"/bin/sh\" \"-c\" \"sudo puppet master --no-daemonize --verbose\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:2a211e7d5e2cd91a6b7f8b83f93b79d85e8252ccfa926ec45565bf4ad15e16c5", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Created": "2017-08-13T03:48:12.934694484Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "522", 
                    "DeviceName": "docker-253:0-260130-abedf2b63caabd7c439ff489084faea767af3eafb2c6f9a3190d0e819b2a3318", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:758ae0f7da4308491691651dd0ee42ffb62464e3be6eb01279fe67c78ce0f598", 
            "Os": "linux", 
            "Parent": "sha256:2a211e7d5e2cd91a6b7f8b83f93b79d85e8252ccfa926ec45565bf4ad15e16c5", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmpuppet:v1.0.0"
            ], 
            "Size": 231597059, 
            "VirtualSize": 231597059
        }
    }
}
2017-08-12 23:48:15,245 p=88121 u=root |  TASK [Set the tar bzip file name] **********************************************
2017-08-12 23:48:15,262 p=88121 u=root |  ok: [localhost]
2017-08-12 23:48:15,265 p=88121 u=root |  TASK [Find previously built slmpuppet tar bzip files] **************************
2017-08-12 23:48:15,460 p=88121 u=root |  ok: [localhost]
2017-08-12 23:48:15,463 p=88121 u=root |  TASK [Show old slmpuppet tar bzip files] ***************************************
2017-08-12 23:48:15,483 p=88121 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 2, 
        "files": [
            {
                "atime": 1502595807.5131586, 
                "ctime": 1502595896.84647, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146391637, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502595807.5481567, 
                "nlink": 1, 
                "path": "/images/slmpuppet-v0wq.0.1.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-12 23:48:15,487 p=88121 u=root |  TASK [Remove old slmpuppet tar bzip files] *************************************
2017-08-12 23:48:15,594 p=88121 u=root |  changed: [localhost] => (item={u'uid': 0, u'woth': False, u'mtime': 1502595807.5481567, u'inode': 146391637, u'isgid': False, u'size': 14, u'roth': True, u'isuid': False, u'isreg': True, u'gid': 0, u'ischr': False, u'wusr': True, u'xoth': False, u'rusr': True, u'nlink': 1, u'issock': False, u'rgrp': True, u'path': u'/images/slmpuppet-v0wq.0.1.tar.bz2', u'xusr': False, u'atime': 1502595807.5131586, u'isdir': False, u'ctime': 1502595896.84647, u'wgrp': False, u'xgrp': False, u'dev': 64768, u'isblk': False, u'isfifo': False, u'mode': u'0644', u'islnk': False})
2017-08-12 23:48:15,597 p=88121 u=root |  TASK [Export new slmpuppet to a tar bzip file] *********************************
2017-08-12 23:48:15,740 p=88121 u=root |  changed: [localhost]
2017-08-12 23:48:15,744 p=88121 u=root |  TASK [Ensure correct mode on /images/slmpuppet-v1.0.0.tar.bz2] *****************
2017-08-12 23:48:15,849 p=88121 u=root |  ok: [localhost]
2017-08-12 23:48:15,852 p=88121 u=root |  TASK [Fetch /images/slmpuppet-v1.0.0.tar.bz2 to Jenkins Server] ****************
2017-08-12 23:48:15,866 p=88121 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 105, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ tar_bzip }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-12 23:48:15,868 p=88121 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-12 23:48:15,868 p=88121 u=root |  PLAY RECAP *********************************************************************
2017-08-12 23:48:15,868 p=88121 u=root |  localhost                  : ok=18   changed=8    unreachable=0    failed=1   
2017-08-13 00:22:45,899 p=94215 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:22:45,900 p=94215 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:22:45,913 p=94215 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 35, column 53, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      - { upg: "{{ upg_slamio }}", image: slamio, name: docker-mediacascade, key: slamio_ro_deployment_key_rsa }
      - { upg: "{{ upg_slmzsync }}", image: slmzsync:v1.0.0, name: docker-mediacascade, key: slm_mediacascade_ro_deployment_key_rsa }
                                                    ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 00:24:15,407 p=94224 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:24:15,408 p=94224 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:24:15,500 p=94224 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:24:15,574 p=94224 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:24:16,175 p=94224 u=root |  ok: [localhost]
2017-08-13 00:24:16,180 p=94224 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:24:16,488 p=94224 u=root |  changed: [localhost] => (item=docker images)
2017-08-13 00:24:16,505 p=94224 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:24:16,553 p=94224 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^docker images\" | awk '{print $2;}'", 
                "delta": "0:00:00.075770", 
                "end": "2017-08-13 00:24:16.471946", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^docker images\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "docker images", 
                "rc": 0, 
                "start": "2017-08-13 00:24:16.396176", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:24:16,554 p=94224 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:24:16,554 p=94224 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 00:24:48,210 p=94298 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:24:48,211 p=94298 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:24:48,286 p=94298 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:24:48,338 p=94298 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:24:48,878 p=94298 u=root |  ok: [localhost]
2017-08-13 00:24:48,882 p=94298 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:24:49,189 p=94298 u=root |  changed: [localhost] => (item=docker_images)
2017-08-13 00:24:49,191 p=94298 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:24:49,272 p=94298 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^docker_images\" | awk '{print $2;}'", 
                "delta": "0:00:00.069862", 
                "end": "2017-08-13 00:24:49.171096", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^docker_images\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "docker_images", 
                "rc": 0, 
                "start": "2017-08-13 00:24:49.101234", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:24:49,273 p=94298 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:24:49,274 p=94298 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 00:25:08,139 p=94372 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:25:08,141 p=94372 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:25:08,226 p=94372 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:25:08,281 p=94372 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:25:08,849 p=94372 u=root |  ok: [localhost]
2017-08-13 00:25:08,854 p=94372 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:25:09,154 p=94372 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 00:25:09,347 p=94372 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 00:25:09,549 p=94372 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 00:25:09,720 p=94372 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 00:25:09,889 p=94372 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 00:25:09,891 p=94372 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:25:09,941 p=94372 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.066085", 
                "end": "2017-08-13 00:25:09.132727", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 00:25:09.066642", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.076356", 
                "end": "2017-08-13 00:25:09.323410", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 00:25:09.247054", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.090203", 
                "end": "2017-08-13 00:25:09.526310", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 00:25:09.436107", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.074911", 
                "end": "2017-08-13 00:25:09.702584", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 00:25:09.627673", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.065529", 
                "end": "2017-08-13 00:25:09.872785", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 00:25:09.807256", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:25:09,944 p=94372 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:25:09,944 p=94372 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 00:26:35,938 p=94492 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:26:35,939 p=94492 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:26:36,016 p=94492 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:26:36,068 p=94492 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:26:36,626 p=94492 u=root |  ok: [localhost]
2017-08-13 00:26:36,630 p=94492 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:26:36,955 p=94492 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 00:26:37,150 p=94492 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 00:26:37,344 p=94492 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 00:26:37,525 p=94492 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 00:26:37,705 p=94492 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 00:26:37,708 p=94492 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:26:37,770 p=94492 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.091552", 
                "end": "2017-08-13 00:26:36.936601", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 00:26:36.845049", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.071646", 
                "end": "2017-08-13 00:26:37.131771", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 00:26:37.060125", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.083454", 
                "end": "2017-08-13 00:26:37.324637", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 00:26:37.241183", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.068582", 
                "end": "2017-08-13 00:26:37.505170", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 00:26:37.436588", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.085362", 
                "end": "2017-08-13 00:26:37.691378", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 00:26:37.606016", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:26:37,772 p=94492 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:26:37,830 p=94492 u=root |  ok: [localhost] => (item=slmansible) => {
    "image_tags.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmansible"
}
2017-08-13 00:26:37,839 p=94492 u=root |  ok: [localhost] => (item=slmzsync) => {
    "image_tags.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmzsync"
}
2017-08-13 00:26:37,839 p=94492 u=root |  ok: [localhost] => (item=slmsamba) => {
    "image_tags.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmsamba"
}
2017-08-13 00:26:37,839 p=94492 u=root |  ok: [localhost] => (item=slmpuppet) => {
    "image_tags.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmpuppet"
}
2017-08-13 00:26:37,840 p=94492 u=root |  ok: [localhost] => (item=slmio) => {
    "image_tags.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmio"
}
2017-08-13 00:26:37,841 p=94492 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:26:37,841 p=94492 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-13 00:27:13,132 p=94612 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:27:13,135 p=94612 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:27:13,209 p=94612 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:27:13,260 p=94612 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:27:13,802 p=94612 u=root |  ok: [localhost]
2017-08-13 00:27:13,805 p=94612 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:27:14,104 p=94612 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 00:27:14,294 p=94612 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 00:27:14,485 p=94612 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 00:27:14,663 p=94612 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 00:27:14,835 p=94612 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 00:27:14,837 p=94612 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:27:14,886 p=94612 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.064937", 
                "end": "2017-08-13 00:27:14.083870", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 00:27:14.018933", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.084668", 
                "end": "2017-08-13 00:27:14.277818", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 00:27:14.193150", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.088763", 
                "end": "2017-08-13 00:27:14.466754", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 00:27:14.377991", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.065614", 
                "end": "2017-08-13 00:27:14.638334", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 00:27:14.572720", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.068989", 
                "end": "2017-08-13 00:27:14.819081", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 00:27:14.750092", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:27:14,888 p=94612 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:27:14,953 p=94612 u=root |  ok: [localhost] => (item=slmpuppet) => {
    "image_tags.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmpuppet"
}
2017-08-13 00:27:14,953 p=94612 u=root |  ok: [localhost] => (item=slmio) => {
    "image_tags.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmio"
}
2017-08-13 00:27:14,953 p=94612 u=root |  ok: [localhost] => (item=slmansible) => {
    "image_tags.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmansible"
}
2017-08-13 00:27:14,956 p=94612 u=root |  ok: [localhost] => (item=slmzsync) => {
    "image_tags.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmzsync"
}
2017-08-13 00:27:14,956 p=94612 u=root |  ok: [localhost] => (item=slmsamba) => {
    "image_tags.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmsamba"
}
2017-08-13 00:27:14,957 p=94612 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:27:14,957 p=94612 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-13 00:28:01,404 p=94732 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:28:01,406 p=94732 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:28:01,498 p=94732 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:28:01,552 p=94732 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:28:02,128 p=94732 u=root |  ok: [localhost]
2017-08-13 00:28:02,135 p=94732 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:28:02,495 p=94732 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 00:28:02,673 p=94732 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 00:28:02,857 p=94732 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 00:28:03,028 p=94732 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 00:28:03,206 p=94732 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 00:28:03,207 p=94732 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:28:03,257 p=94732 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.081041", 
                "end": "2017-08-13 00:28:02.460459", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 00:28:02.379418", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.067345", 
                "end": "2017-08-13 00:28:02.650818", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 00:28:02.583473", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.067850", 
                "end": "2017-08-13 00:28:02.837401", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 00:28:02.769551", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.065502", 
                "end": "2017-08-13 00:28:03.004838", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 00:28:02.939336", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.081744", 
                "end": "2017-08-13 00:28:03.190341", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 00:28:03.108597", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:28:03,259 p=94732 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:28:03,324 p=94732 u=root |  ok: [localhost] => (item=slmio) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmio"
}
2017-08-13 00:28:03,325 p=94732 u=root |  ok: [localhost] => (item=slmansible) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmansible"
}
2017-08-13 00:28:03,329 p=94732 u=root |  ok: [localhost] => (item=slmzsync) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmzsync"
}
2017-08-13 00:28:03,330 p=94732 u=root |  ok: [localhost] => (item=slmsamba) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmsamba"
}
2017-08-13 00:28:03,330 p=94732 u=root |  ok: [localhost] => (item=slmpuppet) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmpuppet"
}
2017-08-13 00:28:03,331 p=94732 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:28:03,331 p=94732 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-13 00:30:35,564 p=94853 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 00:30:35,566 p=94853 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 00:30:35,639 p=94853 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 00:30:35,696 p=94853 u=root |  TASK [setup] *******************************************************************
2017-08-13 00:30:36,242 p=94853 u=root |  ok: [localhost]
2017-08-13 00:30:36,246 p=94853 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 00:30:36,562 p=94853 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 00:30:36,747 p=94853 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 00:30:36,923 p=94853 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 00:30:37,132 p=94853 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 00:30:37,302 p=94853 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 00:30:37,304 p=94853 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:30:37,355 p=94853 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.064813", 
                "end": "2017-08-13 00:30:36.539409", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 00:30:36.474596", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.073500", 
                "end": "2017-08-13 00:30:36.727734", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 00:30:36.654234", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.067757", 
                "end": "2017-08-13 00:30:36.898533", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 00:30:36.830776", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.091652", 
                "end": "2017-08-13 00:30:37.109164", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 00:30:37.017512", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.066790", 
                "end": "2017-08-13 00:30:37.284403", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 00:30:37.217613", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 00:30:37,357 p=94853 u=root |  TASK [debug] *******************************************************************
2017-08-13 00:30:37,422 p=94853 u=root |  ok: [localhost] => (item=slmpuppet) => {
    "image_tags.results.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmpuppet"
}
2017-08-13 00:30:37,422 p=94853 u=root |  ok: [localhost] => (item=slmio) => {
    "image_tags.results.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmio"
}
2017-08-13 00:30:37,423 p=94853 u=root |  ok: [localhost] => (item=slmansible) => {
    "image_tags.results.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmansible"
}
2017-08-13 00:30:37,426 p=94853 u=root |  ok: [localhost] => (item=slmzsync) => {
    "image_tags.results.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmzsync"
}
2017-08-13 00:30:37,426 p=94853 u=root |  ok: [localhost] => (item=slmsamba) => {
    "image_tags.results.item.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmsamba"
}
2017-08-13 00:30:37,427 p=94853 u=root |  PLAY RECAP *********************************************************************
2017-08-13 00:30:37,427 p=94853 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-13 01:27:15,667 p=95064 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 01:27:15,669 p=95064 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 01:27:15,768 p=95064 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 01:27:15,836 p=95064 u=root |  TASK [setup] *******************************************************************
2017-08-13 01:27:16,450 p=95064 u=root |  ok: [localhost]
2017-08-13 01:27:16,454 p=95064 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 01:27:16,767 p=95064 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 01:27:16,954 p=95064 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 01:27:17,126 p=95064 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 01:27:17,310 p=95064 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 01:27:17,464 p=95064 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 01:27:17,466 p=95064 u=root |  TASK [debug] *******************************************************************
2017-08-13 01:27:17,512 p=95064 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.085242", 
                "end": "2017-08-13 01:27:16.748247", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 01:27:16.663005", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.073425", 
                "end": "2017-08-13 01:27:16.938822", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 01:27:16.865397", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.073775", 
                "end": "2017-08-13 01:27:17.109060", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 01:27:17.035285", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.086196", 
                "end": "2017-08-13 01:27:17.294123", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 01:27:17.207927", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.062493", 
                "end": "2017-08-13 01:27:17.449818", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 01:27:17.387325", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 01:27:17,514 p=95064 u=root |  TASK [debug] *******************************************************************
2017-08-13 01:27:17,569 p=95064 u=root |  ok: [localhost] => (item=slmio) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmio"
}
2017-08-13 01:27:17,569 p=95064 u=root |  ok: [localhost] => (item=slmansible) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmansible"
}
2017-08-13 01:27:17,572 p=95064 u=root |  ok: [localhost] => (item=slmzsync) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmzsync"
}
2017-08-13 01:27:17,572 p=95064 u=root |  ok: [localhost] => (item=slmsamba) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmsamba"
}
2017-08-13 01:27:17,573 p=95064 u=root |  ok: [localhost] => (item=slmpuppet) => {
    "image_tags.results.stdout": "VARIABLE IS NOT DEFINED!", 
    "item": "slmpuppet"
}
2017-08-13 01:27:17,574 p=95064 u=root |  PLAY RECAP *********************************************************************
2017-08-13 01:27:17,574 p=95064 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=0   
2017-08-13 01:28:28,506 p=95184 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 01:28:28,507 p=95184 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 01:28:28,520 p=95184 u=root |  ERROR! 'with_items' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:05:19,040 p=95217 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:05:19,041 p=95217 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:05:19,055 p=95217 u=root |  ERROR! 'with_items' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:06:01,107 p=95226 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:06:01,109 p=95226 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:06:01,121 p=95226 u=root |  ERROR! 'with_items' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:07:28,088 p=95235 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:07:28,089 p=95235 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:07:28,170 p=95235 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:07:28,229 p=95235 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:07:28,760 p=95235 u=root |  ok: [localhost]
2017-08-13 02:07:28,763 p=95235 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:07:28,819 p=95235 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n#  block:\n    - name: Get list of docker image tags present for each image\n      ^ here\n"}
2017-08-13 02:07:28,820 p=95235 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 02:07:28,821 p=95235 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:07:28,821 p=95235 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-13 02:08:28,540 p=95296 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:08:28,541 p=95296 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:08:28,554 p=95296 u=root |  ERROR! 'block' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:09:32,416 p=95305 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:09:32,417 p=95305 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:09:32,429 p=95305 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 39, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: Do this
    ^ here

2017-08-13 02:09:58,250 p=95314 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:09:58,252 p=95314 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:09:58,263 p=95314 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 39, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: Do this
      ^ here

2017-08-13 02:10:52,136 p=95323 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:10:52,138 p=95323 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:10:52,152 p=95323 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:10:59,153 p=95331 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-13 02:10:59,154 p=95331 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:10:59,156 p=95331 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:10:59,167 p=95331 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:11:03,788 p=95339 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-13 02:11:03,790 p=95339 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:11:03,791 p=95339 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:11:03,803 p=95339 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:11:16,665 p=95347 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:11:16,666 p=95347 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:11:16,679 p=95347 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:11:39,990 p=95355 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:11:39,991 p=95355 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:11:40,004 p=95355 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:12:22,149 p=95364 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:12:22,151 p=95364 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:12:22,163 p=95364 u=root |  ERROR! 'block' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:16:33,492 p=95375 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:16:33,493 p=95375 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:16:33,506 p=95375 u=root |  ERROR! 'name' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 39, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - name: DO this
    ^ here

2017-08-13 02:18:56,093 p=95384 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:18:56,096 p=95384 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:18:56,169 p=95384 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:18:56,219 p=95384 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:18:56,726 p=95384 u=root |  ok: [localhost]
2017-08-13 02:18:56,730 p=95384 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:18:56,786 p=95384 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 8, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  - block:\n     - name: Get list of docker image tags present for each image\n       ^ here\n"}
2017-08-13 02:18:56,787 p=95384 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 02:18:56,787 p=95384 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:18:56,788 p=95384 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-13 02:21:21,224 p=95446 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:21:21,225 p=95446 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:21:21,238 p=95446 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 39, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - block:
    ^ here

2017-08-13 02:21:41,588 p=95455 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:21:41,589 p=95455 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:21:41,603 p=95455 u=root |  ERROR! 'with_items' is not a valid attribute for a Play

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 7, column 3, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


- name: Upgrade CAM host Docker Containers
  ^ here

2017-08-13 02:21:59,737 p=95464 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:21:59,738 p=95464 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:21:59,752 p=95464 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 39, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


  - block:
    ^ here

2017-08-13 02:22:12,769 p=95473 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:22:12,771 p=95473 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:22:12,837 p=95473 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:22:12,891 p=95473 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:22:13,407 p=95473 u=root |  ok: [localhost]
2017-08-13 02:22:13,410 p=95473 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:22:13,471 p=95473 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'item' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 8, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n  - block:\n     - name: Get list of docker image tags present for each image\n       ^ here\n"}
2017-08-13 02:22:13,473 p=95473 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 02:22:13,473 p=95473 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:22:13,473 p=95473 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-13 02:24:52,363 p=95534 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:24:52,364 p=95534 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:24:52,377 p=95534 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  -
    block:
    ^ here

2017-08-13 02:27:36,354 p=95544 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:27:36,356 p=95544 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:27:36,367 p=95544 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  -
    block:
    ^ here

2017-08-13 02:34:10,317 p=95553 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:34:10,318 p=95553 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:34:10,331 p=95553 u=root |  ERROR! 'with_items' is not a valid attribute for a Block

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 42, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

  -
    block:
    ^ here

2017-08-13 02:34:22,883 p=95562 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:34:22,884 p=95562 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:34:22,894 p=95562 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 53, column 5, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    with_items: "{{ docker_images }}"
    ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 02:34:35,043 p=95571 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:34:35,045 p=95571 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:34:35,114 p=95571 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:34:35,162 p=95571 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:34:35,668 p=95571 u=root |  ok: [localhost]
2017-08-13 02:34:35,671 p=95571 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:34:35,891 p=95571 u=root |  skipping: [localhost]
2017-08-13 02:34:35,893 p=95571 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:34:35,952 p=95571 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": false, 
        "msg": "remote module (command) does not support check mode", 
        "skipped": true
    }
}
2017-08-13 02:34:35,953 p=95571 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:34:35,953 p=95571 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=0   
2017-08-13 02:34:46,548 p=95637 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:34:46,550 p=95637 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:34:46,623 p=95637 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:34:46,678 p=95637 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:34:47,194 p=95637 u=root |  ok: [localhost]
2017-08-13 02:34:47,198 p=95637 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:34:47,483 p=95637 u=root |  changed: [localhost]
2017-08-13 02:34:47,485 p=95637 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:34:47,554 p=95637 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
        "delta": "0:00:00.066934", 
        "end": "2017-08-13 02:34:47.469299", 
        "rc": 0, 
        "start": "2017-08-13 02:34:47.402365", 
        "stderr": "", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-13 02:34:47,555 p=95637 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:34:47,555 p=95637 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 02:41:34,137 p=95717 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:41:34,139 p=95717 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:41:34,207 p=95717 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:41:34,254 p=95717 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:41:34,789 p=95717 u=root |  ok: [localhost]
2017-08-13 02:41:34,793 p=95717 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:41:35,074 p=95717 u=root |  changed: [localhost]
2017-08-13 02:41:35,077 p=95717 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:41:35,151 p=95717 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.061146", 
        "end": "2017-08-13 02:41:35.060334", 
        "rc": 0, 
        "start": "2017-08-13 02:41:34.999188", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 02:41:35,152 p=95717 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:41:35,152 p=95717 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 02:42:50,199 p=95791 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:42:50,200 p=95791 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:42:50,270 p=95791 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:42:50,322 p=95791 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:42:50,829 p=95791 u=root |  ok: [localhost]
2017-08-13 02:42:50,836 p=95791 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:42:51,106 p=95791 u=root |  changed: [localhost]
2017-08-13 02:42:51,108 p=95791 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:42:51,186 p=95791 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | awk '{print $2;}'", 
        "delta": "0:00:00.060548", 
        "end": "2017-08-13 02:42:51.091851", 
        "rc": 0, 
        "start": "2017-08-13 02:42:51.031303", 
        "stderr": "", 
        "stdout": "TAG\nv1.0.0\nlatest\n14.04.5\nubuntu14.04\nlatest\n5.6\nmaster-centos7\ncentos7\nlatest\nlatest\nlatest\n2.5.0", 
        "stdout_lines": [
            "TAG", 
            "v1.0.0", 
            "latest", 
            "14.04.5", 
            "ubuntu14.04", 
            "latest", 
            "5.6", 
            "master-centos7", 
            "centos7", 
            "latest", 
            "latest", 
            "latest", 
            "2.5.0"
        ], 
        "warnings": []
    }
}
2017-08-13 02:42:51,187 p=95791 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:42:51,188 p=95791 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 02:44:04,990 p=95872 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:44:04,992 p=95872 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:44:05,062 p=95872 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:44:05,111 p=95872 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:44:05,610 p=95872 u=root |  ok: [localhost]
2017-08-13 02:44:05,614 p=95872 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:44:05,891 p=95872 u=root |  changed: [localhost]
2017-08-13 02:44:05,893 p=95872 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:44:05,967 p=95872 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images", 
        "delta": "0:00:00.071350", 
        "end": "2017-08-13 02:44:05.876486", 
        "rc": 0, 
        "start": "2017-08-13 02:44:05.805136", 
        "stderr": "", 
        "stdout": "REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE\nslmpuppet                      v1.0.0              758ae0f7da43        2 hours ago         231.6 MB\nslmansible                     latest              7abe1d37ae7d        4 days ago          582.1 MB\ndocker.io/ubuntu               14.04.5             302fa07d8117        4 months ago        188 MB\ndocker.io/williamyeh/ansible   ubuntu14.04         93d0f002b8b8        5 months ago        254.3 MB\ndocker.io/gbevan/meanio        latest              ebb31af95151        10 months ago       1.043 GB\ndocker.io/mysql                5.6                 5e0f1b09e25e        12 months ago       328.8 MB\ndocker.io/williamyeh/ansible   master-centos7      a777c240ed03        12 months ago       344.3 MB\ndocker.io/centos               centos7             970633036444        12 months ago       196.7 MB\ndocker.io/centos               latest              970633036444        12 months ago       196.7 MB\ndocker.io/mongo                latest              a55d8a328b43        15 months ago       313.1 MB\ndocker.io/cscdock/atftpd       latest              9eda3ee61dc4        18 months ago       213 MB\ndocker.io/cscdock/hanlon       2.5.0               6f82a930404e        21 months ago       784.2 MB", 
        "stdout_lines": [
            "REPOSITORY                     TAG                 IMAGE ID            CREATED             SIZE", 
            "slmpuppet                      v1.0.0              758ae0f7da43        2 hours ago         231.6 MB", 
            "slmansible                     latest              7abe1d37ae7d        4 days ago          582.1 MB", 
            "docker.io/ubuntu               14.04.5             302fa07d8117        4 months ago        188 MB", 
            "docker.io/williamyeh/ansible   ubuntu14.04         93d0f002b8b8        5 months ago        254.3 MB", 
            "docker.io/gbevan/meanio        latest              ebb31af95151        10 months ago       1.043 GB", 
            "docker.io/mysql                5.6                 5e0f1b09e25e        12 months ago       328.8 MB", 
            "docker.io/williamyeh/ansible   master-centos7      a777c240ed03        12 months ago       344.3 MB", 
            "docker.io/centos               centos7             970633036444        12 months ago       196.7 MB", 
            "docker.io/centos               latest              970633036444        12 months ago       196.7 MB", 
            "docker.io/mongo                latest              a55d8a328b43        15 months ago       313.1 MB", 
            "docker.io/cscdock/atftpd       latest              9eda3ee61dc4        18 months ago       213 MB", 
            "docker.io/cscdock/hanlon       2.5.0               6f82a930404e        21 months ago       784.2 MB"
        ], 
        "warnings": []
    }
}
2017-08-13 02:44:05,968 p=95872 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:44:05,968 p=95872 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 02:51:28,332 p=95954 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:51:28,334 p=95954 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:51:28,345 p=95954 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 19, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

#      var: image_tags.results.stdout
#    with_items: "{{ docker_images }}"
                  ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 02:51:52,402 p=95963 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 02:51:52,403 p=95963 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 02:51:52,471 p=95963 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 02:51:52,520 p=95963 u=root |  TASK [setup] *******************************************************************
2017-08-13 02:51:53,037 p=95963 u=root |  ok: [localhost]
2017-08-13 02:51:53,042 p=95963 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 02:51:53,330 p=95963 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 02:51:53,512 p=95963 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 02:51:53,678 p=95963 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 02:51:53,866 p=95963 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 02:51:54,023 p=95963 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 02:51:54,025 p=95963 u=root |  TASK [debug] *******************************************************************
2017-08-13 02:51:54,069 p=95963 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.060979", 
                "end": "2017-08-13 02:51:53.313225", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 02:51:53.252246", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.077096", 
                "end": "2017-08-13 02:51:53.487706", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 02:51:53.410610", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.063451", 
                "end": "2017-08-13 02:51:53.660931", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 02:51:53.597480", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.090403", 
                "end": "2017-08-13 02:51:53.848889", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 02:51:53.758486", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.061253", 
                "end": "2017-08-13 02:51:54.008642", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 02:51:53.947389", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 02:51:54,070 p=95963 u=root |  PLAY RECAP *********************************************************************
2017-08-13 02:51:54,070 p=95963 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 04:24:13,931 p=96185 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:24:13,933 p=96185 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:24:14,001 p=96185 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 04:24:14,058 p=96185 u=root |  TASK [setup] *******************************************************************
2017-08-13 04:24:14,564 p=96185 u=root |  ok: [localhost]
2017-08-13 04:24:14,567 p=96185 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 04:24:14,855 p=96185 u=root |  changed: [localhost]
2017-08-13 04:24:14,857 p=96185 u=root |  TASK [debug] *******************************************************************
2017-08-13 04:24:14,919 p=96185 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.067135", 
        "end": "2017-08-13 04:24:14.840959", 
        "rc": 0, 
        "start": "2017-08-13 04:24:14.773824", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 04:24:14,920 p=96185 u=root |  PLAY RECAP *********************************************************************
2017-08-13 04:24:14,920 p=96185 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-13 04:27:04,994 p=96259 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:27:04,995 p=96259 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:27:05,004 p=96259 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Stop {{ image }} container
   ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 04:27:22,340 p=96268 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:27:22,342 p=96268 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:27:22,351 p=96268 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Stop {{ image }} container
   ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 04:27:58,776 p=96277 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:27:58,777 p=96277 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:27:58,787 p=96277 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Stop {{ image }} container
   ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 04:28:20,488 p=96286 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:28:20,490 p=96286 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:28:20,499 p=96286 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Stop {{ image }} container
   ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 04:28:42,437 p=96295 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:28:42,438 p=96295 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:28:42,447 p=96295 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - name: Stop "{{ image }}" container
   ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 04:29:01,772 p=96304 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:29:01,774 p=96304 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:29:01,846 p=96304 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 04:29:01,897 p=96304 u=root |  TASK [setup] *******************************************************************
2017-08-13 04:29:02,396 p=96304 u=root |  ok: [localhost]
2017-08-13 04:29:02,399 p=96304 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 04:29:02,683 p=96304 u=root |  changed: [localhost]
2017-08-13 04:29:02,686 p=96304 u=root |  TASK [debug] *******************************************************************
2017-08-13 04:29:02,747 p=96304 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.062852", 
        "end": "2017-08-13 04:29:02.669241", 
        "rc": 0, 
        "start": "2017-08-13 04:29:02.606389", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 04:29:02,781 p=96304 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 04:29:02,939 p=96304 u=root |  changed: [localhost]
2017-08-13 04:29:02,941 p=96304 u=root |  PLAY RECAP *********************************************************************
2017-08-13 04:29:02,941 p=96304 u=root |  localhost                  : ok=4    changed=2    unreachable=0    failed=0   
2017-08-13 04:29:37,581 p=96388 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 04:29:37,582 p=96388 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 04:29:37,653 p=96388 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 04:29:37,704 p=96388 u=root |  TASK [setup] *******************************************************************
2017-08-13 04:29:38,189 p=96388 u=root |  ok: [localhost]
2017-08-13 04:29:38,193 p=96388 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 04:29:38,479 p=96388 u=root |  changed: [localhost]
2017-08-13 04:29:38,481 p=96388 u=root |  TASK [debug] *******************************************************************
2017-08-13 04:29:38,541 p=96388 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.066422", 
        "end": "2017-08-13 04:29:38.465179", 
        "rc": 0, 
        "start": "2017-08-13 04:29:38.398757", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 04:29:38,581 p=96388 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 04:29:38,754 p=96388 u=root |  changed: [localhost]
2017-08-13 04:29:38,757 p=96388 u=root |  TASK [debug] *******************************************************************
2017-08-13 04:29:38,778 p=96388 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"{u'changed': True, u'end': u'2017-08-13 04:29:38.465179', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-13 04:29:38.398757', u'stderr': u'', u'delta': u'0:00:00.066422', 'stdout_lines': [u'v1.0.0'], u'warnings': []}\"", 
        "delta": "0:00:00.045828", 
        "end": "2017-08-13 04:29:38.734243", 
        "rc": 0, 
        "start": "2017-08-13 04:29:38.688415", 
        "stderr": "", 
        "stdout": "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"
        ], 
        "warnings": []
    }
}
2017-08-13 04:29:38,779 p=96388 u=root |  PLAY RECAP *********************************************************************
2017-08-13 04:29:38,779 p=96388 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-13 05:52:13,111 p=96662 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 05:52:13,113 p=96662 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 05:52:13,194 p=96662 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 05:52:13,253 p=96662 u=root |  TASK [setup] *******************************************************************
2017-08-13 05:52:13,794 p=96662 u=root |  ok: [localhost]
2017-08-13 05:52:13,798 p=96662 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 05:52:14,102 p=96662 u=root |  changed: [localhost]
2017-08-13 05:52:14,104 p=96662 u=root |  TASK [debug] *******************************************************************
2017-08-13 05:52:14,160 p=96662 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.089117", 
        "end": "2017-08-13 05:52:14.087719", 
        "rc": 0, 
        "start": "2017-08-13 05:52:13.998602", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 05:52:14,195 p=96662 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 05:52:14,350 p=96662 u=root |  changed: [localhost]
2017-08-13 05:52:14,353 p=96662 u=root |  TASK [debug] *******************************************************************
2017-08-13 05:52:14,373 p=96662 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"{u'changed': True, u'end': u'2017-08-13 05:52:14.087719', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-13 05:52:13.998602', u'stderr': u'', u'delta': u'0:00:00.089117', 'stdout_lines': [u'v1.0.0'], u'warnings': []}\"", 
        "delta": "0:00:00.043243", 
        "end": "2017-08-13 05:52:14.337283", 
        "rc": 0, 
        "start": "2017-08-13 05:52:14.294040", 
        "stderr": "", 
        "stdout": "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"
        ], 
        "warnings": []
    }
}
2017-08-13 05:52:14,375 p=96662 u=root |  PLAY RECAP *********************************************************************
2017-08-13 05:52:14,376 p=96662 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-13 17:11:33,640 p=97453 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:11:33,642 p=97453 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:11:33,718 p=97453 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:11:33,780 p=97453 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:11:34,456 p=97453 u=root |  ok: [localhost]
2017-08-13 17:11:34,460 p=97453 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:11:34,798 p=97453 u=root |  changed: [localhost]
2017-08-13 17:11:34,800 p=97453 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:11:34,842 p=97453 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.102537", 
        "end": "2017-08-13 17:11:34.784308", 
        "rc": 0, 
        "start": "2017-08-13 17:11:34.681771", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:11:34,881 p=97453 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:11:35,043 p=97453 u=root |  changed: [localhost]
2017-08-13 17:11:35,046 p=97453 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:11:35,069 p=97453 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"{u'changed': True, u'end': u'2017-08-13 17:11:34.784308', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-13 17:11:34.681771', u'stderr': u'', u'delta': u'0:00:00.102537', 'stdout_lines': [u'v1.0.0'], u'warnings': []}\"", 
        "delta": "0:00:00.043148", 
        "end": "2017-08-13 17:11:35.029391", 
        "rc": 0, 
        "start": "2017-08-13 17:11:34.986243", 
        "stderr": "", 
        "stdout": "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"
        ], 
        "warnings": []
    }
}
2017-08-13 17:11:35,071 p=97453 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:11:35,071 p=97453 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-13 17:12:25,291 p=97539 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:12:25,292 p=97539 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:12:25,360 p=97539 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:12:25,412 p=97539 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:12:25,908 p=97539 u=root |  ok: [localhost]
2017-08-13 17:12:25,912 p=97539 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:12:26,192 p=97539 u=root |  changed: [localhost]
2017-08-13 17:12:26,194 p=97539 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:12:26,256 p=97539 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.067535", 
        "end": "2017-08-13 17:12:26.177987", 
        "rc": 0, 
        "start": "2017-08-13 17:12:26.110452", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:12:26,290 p=97539 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:12:26,453 p=97539 u=root |  changed: [localhost]
2017-08-13 17:12:26,455 p=97539 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:12:26,477 p=97539 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", 
        "delta": "0:00:00.037229", 
        "end": "2017-08-13 17:12:26.440465", 
        "rc": 0, 
        "start": "2017-08-13 17:12:26.403236", 
        "stderr": "", 
        "stdout": "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"
        ], 
        "warnings": []
    }
}
2017-08-13 17:12:26,479 p=97539 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:12:26,479 p=97539 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-13 17:13:48,077 p=97625 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:13:48,078 p=97625 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:13:48,088 p=97625 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 36, column 27, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - debug:
        msg: "{{ image }}":"{{ image_tags.stdout }}"
                          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-13 17:14:13,757 p=97634 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:14:13,759 p=97634 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:14:13,827 p=97634 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:14:13,880 p=97634 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:14:14,401 p=97634 u=root |  ok: [localhost]
2017-08-13 17:14:14,405 p=97634 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:14:14,695 p=97634 u=root |  changed: [localhost]
2017-08-13 17:14:14,699 p=97634 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:14:14,760 p=97634 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.066128", 
        "end": "2017-08-13 17:14:14.680453", 
        "rc": 0, 
        "start": "2017-08-13 17:14:14.614325", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:14:14,797 p=97634 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:14:14,956 p=97634 u=root |  changed: [localhost]
2017-08-13 17:14:14,959 p=97634 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:14:14,978 p=97634 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 17:14:14,979 p=97634 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:14:14,979 p=97634 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-13 17:20:02,447 p=97745 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:20:02,449 p=97745 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:20:02,459 p=97745 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 47, column 32, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

    - debug:
        var: image_tags  - name: Remove existing image if versions dont match (force rebuild)
                               ^ here

2017-08-13 17:20:27,420 p=97754 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:20:27,422 p=97754 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:20:27,499 p=97754 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:20:27,559 p=97754 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:20:28,067 p=97754 u=root |  ok: [localhost]
2017-08-13 17:20:28,071 p=97754 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:20:28,356 p=97754 u=root |  changed: [localhost]
2017-08-13 17:20:28,358 p=97754 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:20:28,421 p=97754 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.064454", 
        "end": "2017-08-13 17:20:28.341946", 
        "rc": 0, 
        "start": "2017-08-13 17:20:28.277492", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:20:28,455 p=97754 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:20:28,608 p=97754 u=root |  changed: [localhost]
2017-08-13 17:20:28,611 p=97754 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:20:28,630 p=97754 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 17:20:28,632 p=97754 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:20:28,818 p=97754 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 17:20:28,978 p=97754 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 17:20:29,153 p=97754 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 17:20:29,310 p=97754 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 17:20:29,466 p=97754 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 17:20:29,468 p=97754 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:20:29,501 p=97754 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.065907", 
                "end": "2017-08-13 17:20:28.798935", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 17:20:28.733028", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.062251", 
                "end": "2017-08-13 17:20:28.958992", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 17:20:28.896741", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.081029", 
                "end": "2017-08-13 17:20:29.135347", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 17:20:29.054318", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.061596", 
                "end": "2017-08-13 17:20:29.291675", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 17:20:29.230079", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.061955", 
                "end": "2017-08-13 17:20:29.448490", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 17:20:29.386535", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 17:20:29,503 p=97754 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:20:29,503 p=97754 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-13 17:29:04,942 p=97900 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:29:04,944 p=97900 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:29:05,017 p=97900 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:29:05,065 p=97900 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:29:05,571 p=97900 u=root |  ok: [localhost]
2017-08-13 17:29:05,575 p=97900 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:29:05,853 p=97900 u=root |  changed: [localhost]
2017-08-13 17:29:05,856 p=97900 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:29:05,915 p=97900 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.064731", 
        "end": "2017-08-13 17:29:05.840110", 
        "rc": 0, 
        "start": "2017-08-13 17:29:05.775379", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:29:05,951 p=97900 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:29:06,118 p=97900 u=root |  changed: [localhost]
2017-08-13 17:29:06,121 p=97900 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:29:06,143 p=97900 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 17:29:06,145 p=97900 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:29:06,159 p=97900 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "list object has no element ()"}
2017-08-13 17:29:06,161 p=97900 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 17:29:06,161 p=97900 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:29:06,161 p=97900 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-13 17:38:07,065 p=97989 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:38:07,066 p=97989 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:38:07,140 p=97989 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:38:07,192 p=97989 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:38:07,678 p=97989 u=root |  ok: [localhost]
2017-08-13 17:38:07,681 p=97989 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:38:07,953 p=97989 u=root |  changed: [localhost]
2017-08-13 17:38:07,955 p=97989 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:38:08,011 p=97989 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.061988", 
        "end": "2017-08-13 17:38:07.938662", 
        "rc": 0, 
        "start": "2017-08-13 17:38:07.876674", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:38:08,046 p=97989 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:38:08,208 p=97989 u=root |  changed: [localhost]
2017-08-13 17:38:08,211 p=97989 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:38:08,230 p=97989 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 17:38:08,233 p=97989 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:38:08,419 p=97989 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 17:38:08,584 p=97989 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 17:38:08,762 p=97989 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 17:38:08,935 p=97989 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 17:38:09,088 p=97989 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 17:38:09,090 p=97989 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:38:09,113 p=97989 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                "delta": "0:00:00.063397", 
                "end": "2017-08-13 17:38:08.400487", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmansible\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 17:38:08.337090", 
                "stderr": "", 
                "stdout": "latest", 
                "stdout_lines": [
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                "delta": "0:00:00.062024", 
                "end": "2017-08-13 17:38:08.567433", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmio\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 17:38:08.505409", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                "delta": "0:00:00.084138", 
                "end": "2017-08-13 17:38:08.745838", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 17:38:08.661700", 
                "stderr": "", 
                "stdout": "v1.0.0", 
                "stdout_lines": [
                    "v1.0.0"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                "delta": "0:00:00.065662", 
                "end": "2017-08-13 17:38:08.912606", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmsamba\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 17:38:08.846944", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                "delta": "0:00:00.061500", 
                "end": "2017-08-13 17:38:09.072079", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^slmzsync\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 17:38:09.010579", 
                "stderr": "", 
                "stdout": "", 
                "stdout_lines": [], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 17:38:09,115 p=97989 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:38:09,115 p=97989 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-13 17:41:13,403 p=98135 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 17:41:13,404 p=98135 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 17:41:13,476 p=98135 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 17:41:13,527 p=98135 u=root |  TASK [setup] *******************************************************************
2017-08-13 17:41:14,036 p=98135 u=root |  ok: [localhost]
2017-08-13 17:41:14,039 p=98135 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:41:14,323 p=98135 u=root |  changed: [localhost]
2017-08-13 17:41:14,325 p=98135 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:41:14,386 p=98135 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.069944", 
        "end": "2017-08-13 17:41:14.308937", 
        "rc": 0, 
        "start": "2017-08-13 17:41:14.238993", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 17:41:14,419 p=98135 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 17:41:14,576 p=98135 u=root |  changed: [localhost]
2017-08-13 17:41:14,579 p=98135 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:41:14,598 p=98135 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 17:41:14,599 p=98135 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 17:41:14,785 p=98135 u=root |  changed: [localhost] => (item=slmansible)
2017-08-13 17:41:14,947 p=98135 u=root |  changed: [localhost] => (item=slmio)
2017-08-13 17:41:15,127 p=98135 u=root |  changed: [localhost] => (item=slmpuppet)
2017-08-13 17:41:15,297 p=98135 u=root |  changed: [localhost] => (item=slmsamba)
2017-08-13 17:41:15,457 p=98135 u=root |  changed: [localhost] => (item=slmzsync)
2017-08-13 17:41:15,459 p=98135 u=root |  TASK [debug] *******************************************************************
2017-08-13 17:41:15,490 p=98135 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "msg": "All items completed", 
        "results": [
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^s\" | awk '{print $2;}'", 
                "delta": "0:00:00.061284", 
                "end": "2017-08-13 17:41:14.767924", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^s\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmansible", 
                "rc": 0, 
                "start": "2017-08-13 17:41:14.706640", 
                "stderr": "", 
                "stdout": "v1.0.0\nlatest", 
                "stdout_lines": [
                    "v1.0.0", 
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^s\" | awk '{print $2;}'", 
                "delta": "0:00:00.065396", 
                "end": "2017-08-13 17:41:14.930871", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^s\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmio", 
                "rc": 0, 
                "start": "2017-08-13 17:41:14.865475", 
                "stderr": "", 
                "stdout": "v1.0.0\nlatest", 
                "stdout_lines": [
                    "v1.0.0", 
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^s\" | awk '{print $2;}'", 
                "delta": "0:00:00.084056", 
                "end": "2017-08-13 17:41:15.111074", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^s\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmpuppet", 
                "rc": 0, 
                "start": "2017-08-13 17:41:15.027018", 
                "stderr": "", 
                "stdout": "v1.0.0\nlatest", 
                "stdout_lines": [
                    "v1.0.0", 
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^s\" | awk '{print $2;}'", 
                "delta": "0:00:00.065133", 
                "end": "2017-08-13 17:41:15.279961", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^s\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmsamba", 
                "rc": 0, 
                "start": "2017-08-13 17:41:15.214828", 
                "stderr": "", 
                "stdout": "v1.0.0\nlatest", 
                "stdout_lines": [
                    "v1.0.0", 
                    "latest"
                ], 
                "warnings": []
            }, 
            {
                "_ansible_item_result": true, 
                "_ansible_no_log": false, 
                "_ansible_parsed": true, 
                "changed": true, 
                "cmd": "docker images | grep \"^s\" | awk '{print $2;}'", 
                "delta": "0:00:00.068646", 
                "end": "2017-08-13 17:41:15.442318", 
                "invocation": {
                    "module_args": {
                        "_raw_params": "docker images | grep \"^s\" | awk '{print $2;}'", 
                        "_uses_shell": true, 
                        "chdir": null, 
                        "creates": null, 
                        "executable": null, 
                        "removes": null, 
                        "warn": true
                    }, 
                    "module_name": "command"
                }, 
                "item": "slmzsync", 
                "rc": 0, 
                "start": "2017-08-13 17:41:15.373672", 
                "stderr": "", 
                "stdout": "v1.0.0\nlatest", 
                "stdout_lines": [
                    "v1.0.0", 
                    "latest"
                ], 
                "warnings": []
            }
        ]
    }
}
2017-08-13 17:41:15,491 p=98135 u=root |  PLAY RECAP *********************************************************************
2017-08-13 17:41:15,491 p=98135 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-13 18:00:34,370 p=98369 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 18:00:34,372 p=98369 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 18:00:34,447 p=98369 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 18:00:34,504 p=98369 u=root |  TASK [setup] *******************************************************************
2017-08-13 18:00:35,083 p=98369 u=root |  ok: [localhost]
2017-08-13 18:00:35,087 p=98369 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 18:00:35,384 p=98369 u=root |  changed: [localhost]
2017-08-13 18:00:35,386 p=98369 u=root |  TASK [debug] *******************************************************************
2017-08-13 18:00:35,466 p=98369 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.069204", 
        "end": "2017-08-13 18:00:35.368632", 
        "rc": 0, 
        "start": "2017-08-13 18:00:35.299428", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 18:00:35,487 p=98369 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 18:00:35,655 p=98369 u=root |  changed: [localhost]
2017-08-13 18:00:35,658 p=98369 u=root |  TASK [debug] *******************************************************************
2017-08-13 18:00:35,680 p=98369 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 18:00:35,683 p=98369 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 18:00:35,703 p=98369 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: unicode object has no element ()\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 41, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Get list of docker image tags present for each image\n      ^ here\n"}
2017-08-13 18:00:35,704 p=98369 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 18:00:35,704 p=98369 u=root |  PLAY RECAP *********************************************************************
2017-08-13 18:00:35,704 p=98369 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-13 18:00:59,064 p=98457 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-13 18:00:59,065 p=98457 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-13 18:00:59,137 p=98457 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-13 18:00:59,198 p=98457 u=root |  TASK [setup] *******************************************************************
2017-08-13 18:00:59,742 p=98457 u=root |  ok: [localhost]
2017-08-13 18:00:59,752 p=98457 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 18:01:00,058 p=98457 u=root |  changed: [localhost]
2017-08-13 18:01:00,060 p=98457 u=root |  TASK [debug] *******************************************************************
2017-08-13 18:01:00,137 p=98457 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.068640", 
        "end": "2017-08-13 18:01:00.043581", 
        "rc": 0, 
        "start": "2017-08-13 18:00:59.974941", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-13 18:01:00,158 p=98457 u=root |  TASK [Stop "slmpuppet" container] **********************************************
2017-08-13 18:01:00,325 p=98457 u=root |  changed: [localhost]
2017-08-13 18:01:00,328 p=98457 u=root |  TASK [debug] *******************************************************************
2017-08-13 18:01:00,354 p=98457 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-13 18:01:00,359 p=98457 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-13 18:01:00,378 p=98457 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'list object' has no attribute u'slmansible'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 41, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Get list of docker image tags present for each image\n      ^ here\n"}
2017-08-13 18:01:00,381 p=98457 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-13 18:01:00,381 p=98457 u=root |  PLAY RECAP *********************************************************************
2017-08-13 18:01:00,381 p=98457 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 00:13:07,014 p=98821 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 00:13:07,016 p=98821 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 00:13:07,057 p=98821 u=root |  ERROR! 'paths' is not a valid attribute for a Task

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 23, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - find:
      ^ here

2017-08-14 00:13:56,873 p=98830 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 00:13:56,874 p=98830 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 00:13:56,944 p=98830 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 00:13:56,997 p=98830 u=root |  TASK [setup] *******************************************************************
2017-08-14 00:13:57,549 p=98830 u=root |  ok: [localhost]
2017-08-14 00:13:57,553 p=98830 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 00:13:57,782 p=98830 u=root |  ok: [localhost]
2017-08-14 00:13:57,784 p=98830 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:13:57,847 p=98830 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 00:13:57,850 p=98830 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 00:13:58,143 p=98830 u=root |  changed: [localhost]
2017-08-14 00:13:58,145 p=98830 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:13:58,188 p=98830 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.076072", 
        "end": "2017-08-14 00:13:58.127383", 
        "rc": 0, 
        "start": "2017-08-14 00:13:58.051311", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 00:13:58,207 p=98830 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 00:13:58,369 p=98830 u=root |  changed: [localhost]
2017-08-14 00:13:58,371 p=98830 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:13:58,391 p=98830 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 00:13:58,395 p=98830 u=root |  TASK [Remove the slmpuppet Docker Container] ***********************************
2017-08-14 00:13:58,554 p=98830 u=root |  failed: [localhost] (item=slmansible) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.040952", "end": "2017-08-14 00:13:58.533090", "failed": true, "item": "slmansible", "rc": 1, "start": "2017-08-14 00:13:58.492138", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:13:58,694 p=98830 u=root |  failed: [localhost] (item=slmio) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.040800", "end": "2017-08-14 00:13:58.669833", "failed": true, "item": "slmio", "rc": 1, "start": "2017-08-14 00:13:58.629033", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:13:58,824 p=98830 u=root |  failed: [localhost] (item=slmpuppet) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.036644", "end": "2017-08-14 00:13:58.803191", "failed": true, "item": "slmpuppet", "rc": 1, "start": "2017-08-14 00:13:58.766547", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:13:58,959 p=98830 u=root |  failed: [localhost] (item=slmsamba) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.039007", "end": "2017-08-14 00:13:58.939262", "failed": true, "item": "slmsamba", "rc": 1, "start": "2017-08-14 00:13:58.900255", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:13:59,084 p=98830 u=root |  failed: [localhost] (item=slmzsync) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.040033", "end": "2017-08-14 00:13:59.071036", "failed": true, "item": "slmzsync", "rc": 1, "start": "2017-08-14 00:13:59.031003", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:13:59,085 p=98830 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 00:13:59,085 p=98830 u=root |  PLAY RECAP *********************************************************************
2017-08-14 00:13:59,086 p=98830 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=1   
2017-08-14 00:14:51,431 p=98967 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 00:14:51,432 p=98967 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 00:14:51,501 p=98967 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 00:14:51,551 p=98967 u=root |  TASK [setup] *******************************************************************
2017-08-14 00:14:52,064 p=98967 u=root |  ok: [localhost]
2017-08-14 00:14:52,068 p=98967 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 00:14:52,288 p=98967 u=root |  ok: [localhost]
2017-08-14 00:14:52,290 p=98967 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:14:52,356 p=98967 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [
            {
                "atime": 1502596095.6920345, 
                "ctime": 1502596095.7270327, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146383298, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502596095.7270327, 
                "nlink": 1, 
                "path": "/images/slmpuppet-v1.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-14 00:14:52,358 p=98967 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 00:14:52,648 p=98967 u=root |  changed: [localhost]
2017-08-14 00:14:52,650 p=98967 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:14:52,691 p=98967 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.068025", 
        "end": "2017-08-14 00:14:52.634406", 
        "rc": 0, 
        "start": "2017-08-14 00:14:52.566381", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 00:14:52,716 p=98967 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 00:14:52,886 p=98967 u=root |  changed: [localhost]
2017-08-14 00:14:52,889 p=98967 u=root |  TASK [debug] *******************************************************************
2017-08-14 00:14:52,910 p=98967 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 00:14:52,914 p=98967 u=root |  TASK [Remove the slmpuppet Docker Container] ***********************************
2017-08-14 00:14:53,094 p=98967 u=root |  failed: [localhost] (item=slmansible) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.047917", "end": "2017-08-14 00:14:53.075518", "failed": true, "item": "slmansible", "rc": 1, "start": "2017-08-14 00:14:53.027601", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:14:53,239 p=98967 u=root |  failed: [localhost] (item=slmio) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.038707", "end": "2017-08-14 00:14:53.222236", "failed": true, "item": "slmio", "rc": 1, "start": "2017-08-14 00:14:53.183529", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:14:53,399 p=98967 u=root |  failed: [localhost] (item=slmpuppet) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.037835", "end": "2017-08-14 00:14:53.382580", "failed": true, "item": "slmpuppet", "rc": 1, "start": "2017-08-14 00:14:53.344745", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:14:53,557 p=98967 u=root |  failed: [localhost] (item=slmsamba) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.045230", "end": "2017-08-14 00:14:53.534695", "failed": true, "item": "slmsamba", "rc": 1, "start": "2017-08-14 00:14:53.489465", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:14:53,693 p=98967 u=root |  failed: [localhost] (item=slmzsync) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.038076", "end": "2017-08-14 00:14:53.675991", "failed": true, "item": "slmzsync", "rc": 1, "start": "2017-08-14 00:14:53.637915", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 00:14:53,696 p=98967 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 00:14:53,696 p=98967 u=root |  PLAY RECAP *********************************************************************
2017-08-14 00:14:53,696 p=98967 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=1   
2017-08-14 01:16:48,796 p=99164 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:16:48,797 p=99164 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:16:48,874 p=99164 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 01:16:48,929 p=99164 u=root |  TASK [setup] *******************************************************************
2017-08-14 01:16:49,442 p=99164 u=root |  ok: [localhost]
2017-08-14 01:16:49,446 p=99164 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 01:16:49,673 p=99164 u=root |  ok: [localhost]
2017-08-14 01:16:49,675 p=99164 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:16:49,731 p=99164 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [
            {
                "atime": 1502596095.6920345, 
                "ctime": 1502687796.0904768, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146383298, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502596095.7270327, 
                "nlink": 1, 
                "path": "/images/slmpuppet-v.0.0.1.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-14 01:16:49,733 p=99164 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 01:16:50,022 p=99164 u=root |  changed: [localhost]
2017-08-14 01:16:50,023 p=99164 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:16:50,068 p=99164 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.067552", 
        "end": "2017-08-14 01:16:50.007352", 
        "rc": 0, 
        "start": "2017-08-14 01:16:49.939800", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 01:16:50,088 p=99164 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 01:16:50,241 p=99164 u=root |  changed: [localhost]
2017-08-14 01:16:50,243 p=99164 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:16:50,263 p=99164 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 01:16:50,265 p=99164 u=root |  TASK [Remove the slmpuppet Docker Container] ***********************************
2017-08-14 01:16:50,426 p=99164 u=root |  failed: [localhost] (item=slmansible) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.041985", "end": "2017-08-14 01:16:50.401546", "failed": true, "item": "slmansible", "rc": 1, "start": "2017-08-14 01:16:50.359561", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 01:16:50,561 p=99164 u=root |  failed: [localhost] (item=slmio) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.045023", "end": "2017-08-14 01:16:50.541984", "failed": true, "item": "slmio", "rc": 1, "start": "2017-08-14 01:16:50.496961", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 01:16:50,686 p=99164 u=root |  failed: [localhost] (item=slmpuppet) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.036124", "end": "2017-08-14 01:16:50.667328", "failed": true, "item": "slmpuppet", "rc": 1, "start": "2017-08-14 01:16:50.631204", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 01:16:50,812 p=99164 u=root |  failed: [localhost] (item=slmsamba) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.036242", "end": "2017-08-14 01:16:50.793790", "failed": true, "item": "slmsamba", "rc": 1, "start": "2017-08-14 01:16:50.757548", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 01:16:50,932 p=99164 u=root |  failed: [localhost] (item=slmzsync) => {"changed": true, "cmd": "docker rm", "delta": "0:00:00.035031", "end": "2017-08-14 01:16:50.919407", "failed": true, "item": "slmzsync", "rc": 1, "start": "2017-08-14 01:16:50.884376", "stderr": "docker: \"rm\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rm --help'.\n\nUsage:\tdocker rm [OPTIONS] CONTAINER [CONTAINER...]\n\nRemove one or more containers", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 01:16:50,933 p=99164 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 01:16:50,933 p=99164 u=root |  PLAY RECAP *********************************************************************
2017-08-14 01:16:50,933 p=99164 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=1   
2017-08-14 01:19:07,059 p=99302 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:19:07,060 p=99302 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:19:07,070 p=99302 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 24, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

   - name: Get list of docker image tags present for each image
      shell: docker images | grep "^{{ image }}" | awk '{print $2;}'
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-14 01:19:37,186 p=99311 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:19:37,187 p=99311 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:19:37,198 p=99311 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 24, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

   - name: Get list of docker image tags present for each image
      shell: docker images | grep "^{{ image }}" | awk '{print $2;}'
           ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-14 01:19:52,433 p=99320 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:19:52,434 p=99320 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:19:52,505 p=99320 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 01:19:52,556 p=99320 u=root |  TASK [setup] *******************************************************************
2017-08-14 01:19:53,056 p=99320 u=root |  ok: [localhost]
2017-08-14 01:19:53,060 p=99320 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 01:19:53,350 p=99320 u=root |  changed: [localhost]
2017-08-14 01:19:53,352 p=99320 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 01:19:53,587 p=99320 u=root |  ok: [localhost]
2017-08-14 01:19:53,589 p=99320 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:19:53,633 p=99320 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 01:19:53,635 p=99320 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 01:19:53,826 p=99320 u=root |  changed: [localhost]
2017-08-14 01:19:53,828 p=99320 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:19:53,868 p=99320 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.064929", 
        "end": "2017-08-14 01:19:53.812543", 
        "rc": 0, 
        "start": "2017-08-14 01:19:53.747614", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 01:19:53,889 p=99320 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 01:19:54,036 p=99320 u=root |  changed: [localhost]
2017-08-14 01:19:54,038 p=99320 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:19:54,057 p=99320 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 01:19:54,059 p=99320 u=root |  PLAY RECAP *********************************************************************
2017-08-14 01:19:54,059 p=99320 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-14 01:37:04,336 p=99429 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:37:04,337 p=99429 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:37:04,403 p=99429 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 01:37:04,451 p=99429 u=root |  TASK [setup] *******************************************************************
2017-08-14 01:37:04,963 p=99429 u=root |  ok: [localhost]
2017-08-14 01:37:04,966 p=99429 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 01:37:05,256 p=99429 u=root |  changed: [localhost]
2017-08-14 01:37:05,257 p=99429 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 01:37:05,492 p=99429 u=root |  ok: [localhost]
2017-08-14 01:37:05,494 p=99429 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:37:05,539 p=99429 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 01:37:05,558 p=99429 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 01:37:05,888 p=99429 u=root |  ok: [localhost]
2017-08-14 01:37:05,892 p=99429 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 01:37:06,045 p=99429 u=root |  changed: [localhost]
2017-08-14 01:37:06,047 p=99429 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:37:06,066 p=99429 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 01:37:06,067 p=99429 u=root |  PLAY RECAP *********************************************************************
2017-08-14 01:37:06,067 p=99429 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-14 01:39:18,765 p=99532 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 01:39:18,766 p=99532 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 01:39:18,833 p=99532 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 01:39:18,880 p=99532 u=root |  TASK [setup] *******************************************************************
2017-08-14 01:39:19,391 p=99532 u=root |  ok: [localhost]
2017-08-14 01:39:19,395 p=99532 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 01:39:19,669 p=99532 u=root |  changed: [localhost]
2017-08-14 01:39:19,671 p=99532 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 01:39:19,904 p=99532 u=root |  ok: [localhost]
2017-08-14 01:39:19,906 p=99532 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:39:19,953 p=99532 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 01:39:19,972 p=99532 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 01:39:20,309 p=99532 u=root |  ok: [localhost]
2017-08-14 01:39:20,312 p=99532 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 01:39:20,456 p=99532 u=root |  changed: [localhost]
2017-08-14 01:39:20,459 p=99532 u=root |  TASK [debug] *******************************************************************
2017-08-14 01:39:20,477 p=99532 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 01:39:20,479 p=99532 u=root |  PLAY RECAP *********************************************************************
2017-08-14 01:39:20,479 p=99532 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-14 03:47:54,312 p=99721 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 03:47:54,313 p=99721 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 03:47:54,388 p=99721 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 03:47:54,437 p=99721 u=root |  TASK [setup] *******************************************************************
2017-08-14 03:47:54,948 p=99721 u=root |  ok: [localhost]
2017-08-14 03:47:54,951 p=99721 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 03:47:55,239 p=99721 u=root |  changed: [localhost]
2017-08-14 03:47:55,241 p=99721 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 03:47:55,463 p=99721 u=root |  ok: [localhost]
2017-08-14 03:47:55,465 p=99721 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:47:55,504 p=99721 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 03:47:55,525 p=99721 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 03:47:55,867 p=99721 u=root |  ok: [localhost]
2017-08-14 03:47:55,871 p=99721 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 03:47:56,014 p=99721 u=root |  changed: [localhost]
2017-08-14 03:47:56,015 p=99721 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:47:56,033 p=99721 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 03:47:56,035 p=99721 u=root |  PLAY RECAP *********************************************************************
2017-08-14 03:47:56,035 p=99721 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-14 03:54:23,417 p=99825 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 03:54:23,419 p=99825 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 03:54:23,496 p=99825 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 03:54:23,544 p=99825 u=root |  TASK [setup] *******************************************************************
2017-08-14 03:54:24,038 p=99825 u=root |  ok: [localhost]
2017-08-14 03:54:24,042 p=99825 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 03:54:24,325 p=99825 u=root |  changed: [localhost]
2017-08-14 03:54:24,327 p=99825 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 03:54:24,543 p=99825 u=root |  ok: [localhost]
2017-08-14 03:54:24,560 p=99825 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:54:24,605 p=99825 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 03:54:24,625 p=99825 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 03:54:24,960 p=99825 u=root |  ok: [localhost]
2017-08-14 03:54:24,963 p=99825 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 03:54:25,109 p=99825 u=root |  changed: [localhost]
2017-08-14 03:54:25,111 p=99825 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:54:25,130 p=99825 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 03:54:25,132 p=99825 u=root |  PLAY RECAP *********************************************************************
2017-08-14 03:54:25,132 p=99825 u=root |  localhost                  : ok=7    changed=2    unreachable=0    failed=0   
2017-08-14 03:54:56,521 p=99928 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 03:54:56,523 p=99928 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 03:54:56,607 p=99928 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 03:54:56,654 p=99928 u=root |  TASK [setup] *******************************************************************
2017-08-14 03:54:57,158 p=99928 u=root |  ok: [localhost]
2017-08-14 03:54:57,162 p=99928 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 03:54:57,457 p=99928 u=root |  changed: [localhost]
2017-08-14 03:54:57,459 p=99928 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 03:54:57,693 p=99928 u=root |  ok: [localhost]
2017-08-14 03:54:57,695 p=99928 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:54:57,738 p=99928 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 03:54:57,758 p=99928 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 03:54:57,779 p=99928 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/slmpuppet*' in expected paths."}
2017-08-14 03:54:57,780 p=99928 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 03:54:57,780 p=99928 u=root |  PLAY RECAP *********************************************************************
2017-08-14 03:54:57,780 p=99928 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-14 03:55:18,717 p=100010 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 03:55:18,718 p=100010 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 03:55:18,785 p=100010 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 03:55:18,832 p=100010 u=root |  TASK [setup] *******************************************************************
2017-08-14 03:55:19,332 p=100010 u=root |  ok: [localhost]
2017-08-14 03:55:19,336 p=100010 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 03:55:19,615 p=100010 u=root |  changed: [localhost]
2017-08-14 03:55:19,617 p=100010 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 03:55:19,826 p=100010 u=root |  ok: [localhost]
2017-08-14 03:55:19,842 p=100010 u=root |  TASK [debug] *******************************************************************
2017-08-14 03:55:19,881 p=100010 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 03:55:19,903 p=100010 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 03:55:19,924 p=100010 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/\"slmpuppet*\"' in expected paths."}
2017-08-14 03:55:19,927 p=100010 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 03:55:19,928 p=100010 u=root |  PLAY RECAP *********************************************************************
2017-08-14 03:55:19,928 p=100010 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-14 04:05:41,139 p=100117 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:05:41,141 p=100117 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:05:41,207 p=100117 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:05:41,253 p=100117 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:05:41,772 p=100117 u=root |  ok: [localhost]
2017-08-14 04:05:41,777 p=100117 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:05:42,055 p=100117 u=root |  changed: [localhost]
2017-08-14 04:05:42,057 p=100117 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:05:42,291 p=100117 u=root |  ok: [localhost]
2017-08-14 04:05:42,293 p=100117 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:05:42,333 p=100117 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:05:42,334 p=100117 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:05:42,463 p=100117 u=root |  ok: [localhost]
2017-08-14 04:05:42,465 p=100117 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:05:42,504 p=100117 u=root |  ok: [localhost] => {
    "new_images": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:05:42,526 p=100117 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:05:42,545 p=100117 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/\"slmpuppet*\"' in expected paths."}
2017-08-14 04:05:42,546 p=100117 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:05:42,547 p=100117 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:05:42,547 p=100117 u=root |  localhost                  : ok=6    changed=1    unreachable=0    failed=1   
2017-08-14 04:06:15,415 p=100207 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:06:15,417 p=100207 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:06:15,484 p=100207 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:06:15,530 p=100207 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:06:16,035 p=100207 u=root |  ok: [localhost]
2017-08-14 04:06:16,039 p=100207 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:06:16,330 p=100207 u=root |  changed: [localhost]
2017-08-14 04:06:16,332 p=100207 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:06:16,565 p=100207 u=root |  ok: [localhost]
2017-08-14 04:06:16,567 p=100207 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:06:16,607 p=100207 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:06:16,609 p=100207 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:06:16,739 p=100207 u=root |  ok: [localhost]
2017-08-14 04:06:16,741 p=100207 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:06:16,783 p=100207 u=root |  ok: [localhost] => {
    "new_images": {
        "changed": false, 
        "examined": 2, 
        "files": [
            {
                "atime": 1502596095.6920345, 
                "ctime": 1502687867.612723, 
                "dev": 64768, 
                "gid": 0, 
                "inode": 146383298, 
                "isblk": false, 
                "ischr": false, 
                "isdir": false, 
                "isfifo": false, 
                "isgid": false, 
                "islnk": false, 
                "isreg": true, 
                "issock": false, 
                "isuid": false, 
                "mode": "0644", 
                "mtime": 1502596095.7270327, 
                "nlink": 1, 
                "path": "/images/slmpuppet-v2.0.0.tar.bz2", 
                "rgrp": true, 
                "roth": true, 
                "rusr": true, 
                "size": 14, 
                "uid": 0, 
                "wgrp": false, 
                "woth": false, 
                "wusr": true, 
                "xgrp": false, 
                "xoth": false, 
                "xusr": false
            }
        ], 
        "matched": 1, 
        "msg": ""
    }
}
2017-08-14 04:06:16,811 p=100207 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:06:16,831 p=100207 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/\"slmpuppet*\"' in expected paths."}
2017-08-14 04:06:16,832 p=100207 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:06:16,832 p=100207 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:06:16,832 p=100207 u=root |  localhost                  : ok=6    changed=1    unreachable=0    failed=1   
2017-08-14 04:07:47,269 p=100299 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:07:47,271 p=100299 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:07:47,348 p=100299 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:07:47,395 p=100299 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:07:47,889 p=100299 u=root |  ok: [localhost]
2017-08-14 04:07:47,893 p=100299 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:07:48,170 p=100299 u=root |  changed: [localhost]
2017-08-14 04:07:48,172 p=100299 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:07:48,402 p=100299 u=root |  ok: [localhost]
2017-08-14 04:07:48,404 p=100299 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:07:48,448 p=100299 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:07:48,450 p=100299 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:07:48,581 p=100299 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ls", "/images", "|", "grep", "slmpuppet"], "delta": "0:00:00.002626", "end": "2017-08-14 04:07:48.566685", "failed": true, "rc": 2, "start": "2017-08-14 04:07:48.564059", "stderr": "ls: cannot access |: No such file or directory\nls: cannot access grep: No such file or directory\nls: cannot access slmpuppet: No such file or directory", "stdout": "/images:\nslmpuppet-v2.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2", "stdout_lines": ["/images:", "slmpuppet-v2.0.0.tar.bz2", "slmzsync-v1.0.0.tar.bz2"], "warnings": []}
2017-08-14 04:07:48,583 p=100299 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:07:48,583 p=100299 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:07:48,583 p=100299 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-14 04:08:11,062 p=100386 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:08:11,063 p=100386 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:08:11,134 p=100386 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:08:11,185 p=100386 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:08:11,695 p=100386 u=root |  ok: [localhost]
2017-08-14 04:08:11,699 p=100386 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:08:11,976 p=100386 u=root |  changed: [localhost]
2017-08-14 04:08:11,978 p=100386 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:12,216 p=100386 u=root |  ok: [localhost]
2017-08-14 04:08:12,218 p=100386 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:08:12,260 p=100386 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:08:12,262 p=100386 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:12,389 p=100386 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ls", "/images", "|", "grep", "slmpuppet"], "delta": "0:00:00.002891", "end": "2017-08-14 04:08:12.372650", "failed": true, "rc": 2, "start": "2017-08-14 04:08:12.369759", "stderr": "ls: cannot access |: No such file or directory\nls: cannot access grep: No such file or directory\nls: cannot access slmpuppet: No such file or directory", "stdout": "/images:\nslmpuppet-v2.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2", "stdout_lines": ["/images:", "slmpuppet-v2.0.0.tar.bz2", "slmzsync-v1.0.0.tar.bz2"], "warnings": []}
2017-08-14 04:08:12,390 p=100386 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:08:12,391 p=100386 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:08:12,391 p=100386 u=root |  localhost                  : ok=4    changed=1    unreachable=0    failed=1   
2017-08-14 04:08:27,425 p=100473 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:08:27,426 p=100473 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:08:27,495 p=100473 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:08:27,541 p=100473 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:08:28,042 p=100473 u=root |  ok: [localhost]
2017-08-14 04:08:28,046 p=100473 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:08:28,343 p=100473 u=root |  changed: [localhost]
2017-08-14 04:08:28,345 p=100473 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:28,570 p=100473 u=root |  ok: [localhost]
2017-08-14 04:08:28,572 p=100473 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:08:28,614 p=100473 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:08:28,615 p=100473 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:28,762 p=100473 u=root |  changed: [localhost]
2017-08-14 04:08:28,766 p=100473 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:08:28,809 p=100473 u=root |  ok: [localhost] => {
    "new_images": {
        "changed": true, 
        "cmd": "ls /images | grep \"slmpuppet\"", 
        "delta": "0:00:00.006821", 
        "end": "2017-08-14 04:08:28.747019", 
        "rc": 0, 
        "start": "2017-08-14 04:08:28.740198", 
        "stderr": "", 
        "stdout": "slmpuppet-v2.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v2.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 04:08:28,829 p=100473 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:08:28,849 p=100473 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/\"slmpuppet*\"' in expected paths."}
2017-08-14 04:08:28,850 p=100473 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:08:28,850 p=100473 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:08:28,850 p=100473 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-14 04:08:53,210 p=100566 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:08:53,211 p=100566 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:08:53,286 p=100566 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:08:53,332 p=100566 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:08:53,864 p=100566 u=root |  ok: [localhost]
2017-08-14 04:08:53,868 p=100566 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:08:54,145 p=100566 u=root |  changed: [localhost]
2017-08-14 04:08:54,147 p=100566 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:54,373 p=100566 u=root |  ok: [localhost]
2017-08-14 04:08:54,375 p=100566 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:08:54,415 p=100566 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:08:54,417 p=100566 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:08:54,553 p=100566 u=root |  changed: [localhost]
2017-08-14 04:08:54,555 p=100566 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:08:54,601 p=100566 u=root |  ok: [localhost] => {
    "new_images.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 04:08:54,621 p=100566 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:08:54,641 p=100566 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '/images/\"slmpuppet*\"' in expected paths."}
2017-08-14 04:08:54,642 p=100566 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 04:08:54,642 p=100566 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:08:54,642 p=100566 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-14 04:09:39,082 p=100659 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:09:39,084 p=100659 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:09:39,160 p=100659 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:09:39,213 p=100659 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:09:39,716 p=100659 u=root |  ok: [localhost]
2017-08-14 04:09:39,720 p=100659 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:09:40,012 p=100659 u=root |  changed: [localhost]
2017-08-14 04:09:40,014 p=100659 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:09:40,246 p=100659 u=root |  ok: [localhost]
2017-08-14 04:09:40,248 p=100659 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:09:40,288 p=100659 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:09:40,290 p=100659 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:09:40,418 p=100659 u=root |  changed: [localhost]
2017-08-14 04:09:40,420 p=100659 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:09:40,463 p=100659 u=root |  ok: [localhost] => {
    "new_images.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 04:09:40,483 p=100659 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:09:40,675 p=100659 u=root |  changed: [localhost]
2017-08-14 04:09:40,679 p=100659 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 04:09:40,824 p=100659 u=root |  changed: [localhost]
2017-08-14 04:09:40,826 p=100659 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:09:40,853 p=100659 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 04:09:40,857 p=100659 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:09:40,857 p=100659 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-14 04:10:29,916 p=100769 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 04:10:29,918 p=100769 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 04:10:30,003 p=100769 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 04:10:30,054 p=100769 u=root |  TASK [setup] *******************************************************************
2017-08-14 04:10:30,549 p=100769 u=root |  ok: [localhost]
2017-08-14 04:10:30,553 p=100769 u=root |  TASK [Get list of docker image tags present for each image] ********************
2017-08-14 04:10:30,838 p=100769 u=root |  changed: [localhost]
2017-08-14 04:10:30,840 p=100769 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:10:31,086 p=100769 u=root |  ok: [localhost]
2017-08-14 04:10:31,088 p=100769 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:10:31,131 p=100769 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": false, 
        "examined": 2, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-14 04:10:31,133 p=100769 u=root |  TASK [Check for new image] *****************************************************
2017-08-14 04:10:31,272 p=100769 u=root |  changed: [localhost]
2017-08-14 04:10:31,274 p=100769 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:10:31,315 p=100769 u=root |  ok: [localhost] => {
    "new_images.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 04:10:31,335 p=100769 u=root |  TASK [Copy the slmpuppet tar bzip file to /tmp] ********************************
2017-08-14 04:10:31,691 p=100769 u=root |  changed: [localhost]
2017-08-14 04:10:31,695 p=100769 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 04:10:31,854 p=100769 u=root |  changed: [localhost]
2017-08-14 04:10:31,855 p=100769 u=root |  TASK [debug] *******************************************************************
2017-08-14 04:10:31,875 p=100769 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 04:10:31,876 p=100769 u=root |  PLAY RECAP *********************************************************************
2017-08-14 04:10:31,876 p=100769 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-14 05:35:58,246 p=100963 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:35:58,247 p=100963 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:35:58,320 p=100963 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:35:58,368 p=100963 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:35:58,881 p=100963 u=root |  ok: [localhost]
2017-08-14 05:35:58,919 p=100963 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:35:59,178 p=100963 u=root |  changed: [localhost]
2017-08-14 05:35:59,183 p=100963 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:35:59,297 p=100963 u=root |  changed: [localhost]
2017-08-14 05:35:59,299 p=100963 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:35:59,317 p=100963 u=root |  ok: [localhost] => {
    "new_images.stdout": "VARIABLE IS NOT DEFINED!"
}
2017-08-14 05:35:59,320 p=100963 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:35:59,338 p=100963 u=root |  skipping: [localhost]
2017-08-14 05:35:59,344 p=100963 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:35:59,510 p=100963 u=root |  changed: [localhost]
2017-08-14 05:35:59,511 p=100963 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:35:59,537 p=100963 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:35:59,539 p=100963 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:35:59,539 p=100963 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=0   
2017-08-14 05:38:56,609 p=101061 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:38:56,611 p=101061 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:38:56,677 p=101061 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:38:56,727 p=101061 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:38:57,235 p=101061 u=root |  ok: [localhost]
2017-08-14 05:38:57,271 p=101061 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:38:57,525 p=101061 u=root |  changed: [localhost]
2017-08-14 05:38:57,529 p=101061 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:38:57,643 p=101061 u=root |  changed: [localhost]
2017-08-14 05:38:57,645 p=101061 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:38:57,664 p=101061 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 05:38:57,667 p=101061 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:38:57,682 p=101061 u=root |  skipping: [localhost]
2017-08-14 05:38:57,685 p=101061 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:38:57,840 p=101061 u=root |  changed: [localhost]
2017-08-14 05:38:57,842 p=101061 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:38:57,860 p=101061 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:38:57,862 p=101061 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:38:57,862 p=101061 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=0   
2017-08-14 05:39:59,817 p=101158 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:39:59,819 p=101158 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:39:59,885 p=101158 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:39:59,933 p=101158 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:40:00,450 p=101158 u=root |  ok: [localhost]
2017-08-14 05:40:00,489 p=101158 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:40:00,749 p=101158 u=root |  changed: [localhost]
2017-08-14 05:40:00,752 p=101158 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:00,769 p=101158 u=root |  ok: [localhost] => {
    "new_image": "VARIABLE IS NOT DEFINED!"
}
2017-08-14 05:40:00,772 p=101158 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:40:00,891 p=101158 u=root |  changed: [localhost]
2017-08-14 05:40:00,893 p=101158 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:00,910 p=101158 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 05:40:00,914 p=101158 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:40:00,932 p=101158 u=root |  skipping: [localhost]
2017-08-14 05:40:00,936 p=101158 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:40:01,084 p=101158 u=root |  changed: [localhost]
2017-08-14 05:40:01,086 p=101158 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:01,106 p=101158 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:40:01,107 p=101158 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:40:01,107 p=101158 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-14 05:40:30,088 p=101257 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:40:30,089 p=101257 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:40:30,156 p=101257 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:40:30,205 p=101257 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:40:30,717 p=101257 u=root |  ok: [localhost]
2017-08-14 05:40:30,761 p=101257 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:40:31,013 p=101257 u=root |  changed: [localhost]
2017-08-14 05:40:31,017 p=101257 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:40:31,132 p=101257 u=root |  changed: [localhost]
2017-08-14 05:40:31,135 p=101257 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:31,157 p=101257 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls /images | grep \"slmpuppet\"", 
        "delta": "0:00:00.004296", 
        "end": "2017-08-14 05:40:31.118699", 
        "rc": 0, 
        "start": "2017-08-14 05:40:31.114403", 
        "stderr": "", 
        "stdout": "slmpuppet-v2.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v2.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 05:40:31,159 p=101257 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:31,180 p=101257 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 05:40:31,183 p=101257 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:40:31,198 p=101257 u=root |  skipping: [localhost]
2017-08-14 05:40:31,201 p=101257 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:40:31,363 p=101257 u=root |  changed: [localhost]
2017-08-14 05:40:31,365 p=101257 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:40:31,384 p=101257 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:40:31,385 p=101257 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:40:31,385 p=101257 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-14 05:44:17,594 p=101358 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:44:17,596 p=101358 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:44:17,667 p=101358 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:44:17,714 p=101358 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:44:18,214 p=101358 u=root |  ok: [localhost]
2017-08-14 05:44:18,250 p=101358 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:44:18,493 p=101358 u=root |  changed: [localhost]
2017-08-14 05:44:18,497 p=101358 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:44:18,528 p=101358 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.062586", 
        "end": "2017-08-14 05:44:18.480397", 
        "rc": 0, 
        "start": "2017-08-14 05:44:18.417811", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 05:44:18,531 p=101358 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:44:18,639 p=101358 u=root |  changed: [localhost]
2017-08-14 05:44:18,641 p=101358 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:44:18,659 p=101358 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls /images | grep \"slmpuppet\"", 
        "delta": "0:00:00.004237", 
        "end": "2017-08-14 05:44:18.626367", 
        "rc": 0, 
        "start": "2017-08-14 05:44:18.622130", 
        "stderr": "", 
        "stdout": "slmpuppet-v2.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v2.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 05:44:18,661 p=101358 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:44:18,685 p=101358 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v2.0.0.tar.bz2"
}
2017-08-14 05:44:18,689 p=101358 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:44:18,703 p=101358 u=root |  skipping: [localhost]
2017-08-14 05:44:18,707 p=101358 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:44:18,857 p=101358 u=root |  changed: [localhost]
2017-08-14 05:44:18,859 p=101358 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:44:18,877 p=101358 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:44:18,878 p=101358 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:44:18,878 p=101358 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-14 05:53:10,370 p=101460 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 05:53:10,372 p=101460 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 05:53:10,443 p=101460 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 05:53:10,492 p=101460 u=root |  TASK [setup] *******************************************************************
2017-08-14 05:53:10,976 p=101460 u=root |  ok: [localhost]
2017-08-14 05:53:11,014 p=101460 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 05:53:11,260 p=101460 u=root |  changed: [localhost]
2017-08-14 05:53:11,264 p=101460 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:53:11,286 p=101460 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.062742", 
        "end": "2017-08-14 05:53:11.245454", 
        "rc": 0, 
        "start": "2017-08-14 05:53:11.182712", 
        "stderr": "", 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 05:53:11,289 p=101460 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 05:53:11,405 p=101460 u=root |  changed: [localhost]
2017-08-14 05:53:11,407 p=101460 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:53:11,427 p=101460 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls /images | grep \"v1.0.0\"", 
        "delta": "0:00:00.004631", 
        "end": "2017-08-14 05:53:11.391542", 
        "rc": 0, 
        "start": "2017-08-14 05:53:11.386911", 
        "stderr": "", 
        "stdout": "slmzsync-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmzsync-v1.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 05:53:11,429 p=101460 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:53:11,447 p=101460 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmzsync-v1.0.0.tar.bz2"
}
2017-08-14 05:53:11,450 p=101460 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 05:53:11,465 p=101460 u=root |  skipping: [localhost]
2017-08-14 05:53:11,467 p=101460 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 05:53:11,618 p=101460 u=root |  changed: [localhost]
2017-08-14 05:53:11,620 p=101460 u=root |  TASK [debug] *******************************************************************
2017-08-14 05:53:11,638 p=101460 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:v1.0.0"
}
2017-08-14 05:53:11,641 p=101460 u=root |  PLAY RECAP *********************************************************************
2017-08-14 05:53:11,641 p=101460 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-14 07:17:51,206 p=101649 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:17:51,208 p=101649 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:17:51,282 p=101649 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:17:51,331 p=101649 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:17:51,831 p=101649 u=root |  ok: [localhost]
2017-08-14 07:17:51,834 p=101649 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:17:52,086 p=101649 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["docker", "images", "|", "grep", "slmpuppet"], "delta": "0:00:00.035674", "end": "2017-08-14 07:17:52.071413", "failed": true, "rc": 1, "start": "2017-08-14 07:17:52.035739", "stderr": "docker: \"images\" requires a maximum of 1 argument.\nSee '/usr/bin/docker-current images --help'.\n\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\n\nList images", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:17:52,086 p=101649 u=root |  ...ignoring
2017-08-14 07:17:52,088 p=101649 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:17:52,149 p=101649 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": [
            "docker", 
            "images", 
            "|", 
            "grep", 
            "slmpuppet"
        ], 
        "delta": "0:00:00.035674", 
        "end": "2017-08-14 07:17:52.071413", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-14 07:17:52.035739", 
        "stderr": "docker: \"images\" requires a maximum of 1 argument.\nSee '/usr/bin/docker-current images --help'.\n\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\n\nList images", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-14 07:17:52,151 p=101649 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:17:52,151 p=101649 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-14 07:19:18,574 p=101720 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:19:18,576 p=101720 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:19:18,640 p=101720 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:19:18,691 p=101720 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:19:19,192 p=101720 u=root |  ok: [localhost]
2017-08-14 07:19:19,195 p=101720 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:19:19,450 p=101720 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["docker", "images", "|", "grep", "slmpuppet"], "delta": "0:00:00.035316", "end": "2017-08-14 07:19:19.432705", "failed": true, "rc": 1, "start": "2017-08-14 07:19:19.397389", "stderr": "docker: \"images\" requires a maximum of 1 argument.\nSee '/usr/bin/docker-current images --help'.\n\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\n\nList images", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:19:19,450 p=101720 u=root |  ...ignoring
2017-08-14 07:19:19,452 p=101720 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:19:19,512 p=101720 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": [
            "docker", 
            "images", 
            "|", 
            "grep", 
            "slmpuppet"
        ], 
        "delta": "0:00:00.035316", 
        "end": "2017-08-14 07:19:19.432705", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-14 07:19:19.397389", 
        "stderr": "docker: \"images\" requires a maximum of 1 argument.\nSee '/usr/bin/docker-current images --help'.\n\nUsage:\tdocker images [OPTIONS] [REPOSITORY[:TAG]]\n\nList images", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-14 07:19:19,513 p=101720 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:19:19,514 p=101720 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-14 07:19:31,921 p=101791 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:19:31,922 p=101791 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:19:31,992 p=101791 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:19:32,041 p=101791 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:19:32,537 p=101791 u=root |  ok: [localhost]
2017-08-14 07:19:32,540 p=101791 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:19:32,822 p=101791 u=root |  changed: [localhost]
2017-08-14 07:19:32,825 p=101791 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:19:32,879 p=101791 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\"", 
        "delta": "0:00:00.067217", 
        "end": "2017-08-14 07:19:32.804895", 
        "rc": 0, 
        "start": "2017-08-14 07:19:32.737678", 
        "stderr": "", 
        "stdout": "slmpuppet                      v1.0.0              758ae0f7da43        31 hours ago        231.6 MB", 
        "stdout_lines": [
            "slmpuppet                      v1.0.0              758ae0f7da43        31 hours ago        231.6 MB"
        ], 
        "warnings": []
    }
}
2017-08-14 07:19:32,881 p=101791 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:19:32,881 p=101791 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:21:06,264 p=101866 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:21:06,266 p=101866 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:21:06,334 p=101866 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:21:06,383 p=101866 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:21:06,886 p=101866 u=root |  ok: [localhost]
2017-08-14 07:21:06,889 p=101866 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:21:07,173 p=101866 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker images | grep \"slmpuppet\" | awk \"'{print $2;}'-'{print $3}'\"", "delta": "0:00:00.066105", "end": "2017-08-14 07:21:07.158404", "failed": true, "rc": 1, "start": "2017-08-14 07:21:07.092299", "stderr": "awk: cmd. line:1: '{print ;}'-'{print }'\nawk: cmd. line:1: ^ invalid char ''' in expression\ngrep: write error: Broken pipe", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:21:07,173 p=101866 u=root |  ...ignoring
2017-08-14 07:21:07,175 p=101866 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:21:07,228 p=101866 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk \"'{print $2;}'-'{print $3}'\"", 
        "delta": "0:00:00.066105", 
        "end": "2017-08-14 07:21:07.158404", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-14 07:21:07.092299", 
        "stderr": "awk: cmd. line:1: '{print ;}'-'{print }'\nawk: cmd. line:1: ^ invalid char ''' in expression\ngrep: write error: Broken pipe", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-14 07:21:07,230 p=101866 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:21:07,230 p=101866 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-14 07:21:34,207 p=101940 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:21:34,208 p=101940 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:21:34,278 p=101940 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:21:34,325 p=101940 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:21:34,866 p=101940 u=root |  ok: [localhost]
2017-08-14 07:21:34,869 p=101940 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:21:35,143 p=101940 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker images | grep \"slmpuppet\" | awk '{print $2;}'-'{print $3}'", "delta": "0:00:00.062667", "end": "2017-08-14 07:21:35.130190", "failed": true, "rc": 1, "start": "2017-08-14 07:21:35.067523", "stderr": "awk: cmd. line:1: {print $2;}-{print $3}\nawk: cmd. line:1:             ^ syntax error\ngrep: write error: Broken pipe", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:21:35,144 p=101940 u=root |  ...ignoring
2017-08-14 07:21:35,146 p=101940 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:21:35,204 p=101940 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print $2;}'-'{print $3}'", 
        "delta": "0:00:00.062667", 
        "end": "2017-08-14 07:21:35.130190", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-14 07:21:35.067523", 
        "stderr": "awk: cmd. line:1: {print $2;}-{print $3}\nawk: cmd. line:1:             ^ syntax error\ngrep: write error: Broken pipe", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-14 07:21:35,205 p=101940 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:21:35,205 p=101940 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-14 07:21:59,339 p=102014 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:21:59,341 p=102014 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:21:59,404 p=102014 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:21:59,460 p=102014 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:21:59,963 p=102014 u=root |  ok: [localhost]
2017-08-14 07:21:59,966 p=102014 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:22:00,240 p=102014 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker images | grep \"slmpuppet\" | awk '{print $2;}-{print $3}'", "delta": "0:00:00.061247", "end": "2017-08-14 07:22:00.225457", "failed": true, "rc": 1, "start": "2017-08-14 07:22:00.164210", "stderr": "awk: cmd. line:1: {print $2;}-{print $3}\nawk: cmd. line:1:             ^ syntax error\ngrep: write error: Broken pipe", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:22:00,240 p=102014 u=root |  ...ignoring
2017-08-14 07:22:00,242 p=102014 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:22:00,300 p=102014 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print $2;}-{print $3}'", 
        "delta": "0:00:00.061247", 
        "end": "2017-08-14 07:22:00.225457", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-14 07:22:00.164210", 
        "stderr": "awk: cmd. line:1: {print $2;}-{print $3}\nawk: cmd. line:1:             ^ syntax error\ngrep: write error: Broken pipe", 
        "stdout": "", 
        "stdout_lines": [], 
        "warnings": []
    }
}
2017-08-14 07:22:00,302 p=102014 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:22:00,302 p=102014 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-14 07:23:04,884 p=102088 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:23:04,886 p=102088 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:23:04,949 p=102088 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:23:05,000 p=102088 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:23:05,510 p=102088 u=root |  ok: [localhost]
2017-08-14 07:23:05,512 p=102088 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:23:05,790 p=102088 u=root |  changed: [localhost]
2017-08-14 07:23:05,792 p=102088 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:23:05,852 p=102088 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print \"$2\" \"-\" \"$3\"}'", 
        "delta": "0:00:00.063963", 
        "end": "2017-08-14 07:23:05.776173", 
        "rc": 0, 
        "start": "2017-08-14 07:23:05.712210", 
        "stderr": "", 
        "stdout": "$2-$3", 
        "stdout_lines": [
            "$2-$3"
        ], 
        "warnings": []
    }
}
2017-08-14 07:23:05,854 p=102088 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:23:05,854 p=102088 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:26:49,107 p=102163 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:26:49,109 p=102163 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:26:49,187 p=102163 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:26:49,247 p=102163 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:26:49,859 p=102163 u=root |  ok: [localhost]
2017-08-14 07:26:49,862 p=102163 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:26:50,197 p=102163 u=root |  changed: [localhost]
2017-08-14 07:26:50,199 p=102163 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:26:50,264 p=102163 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print \"$2-$3\"}'", 
        "delta": "0:00:00.070935", 
        "end": "2017-08-14 07:26:50.180142", 
        "rc": 0, 
        "start": "2017-08-14 07:26:50.109207", 
        "stderr": "", 
        "stdout": "$2-$3", 
        "stdout_lines": [
            "$2-$3"
        ], 
        "warnings": []
    }
}
2017-08-14 07:26:50,266 p=102163 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:26:50,266 p=102163 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:27:15,514 p=102237 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:27:15,515 p=102237 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:27:15,588 p=102237 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:27:15,639 p=102237 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:27:16,214 p=102237 u=root |  ok: [localhost]
2017-08-14 07:27:16,220 p=102237 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:27:16,520 p=102237 u=root |  changed: [localhost]
2017-08-14 07:27:16,523 p=102237 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:27:16,583 p=102237 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\"", 
        "delta": "0:00:00.063545", 
        "end": "2017-08-14 07:27:16.503746", 
        "rc": 0, 
        "start": "2017-08-14 07:27:16.440201", 
        "stderr": "", 
        "stdout": "slmpuppet                      v1.0.0              758ae0f7da43        31 hours ago        231.6 MB", 
        "stdout_lines": [
            "slmpuppet                      v1.0.0              758ae0f7da43        31 hours ago        231.6 MB"
        ], 
        "warnings": []
    }
}
2017-08-14 07:27:16,584 p=102237 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:27:16,584 p=102237 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:27:45,601 p=102310 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:27:45,602 p=102310 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:27:45,681 p=102310 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:27:45,735 p=102310 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:27:46,289 p=102310 u=root |  ok: [localhost]
2017-08-14 07:27:46,293 p=102310 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:27:46,612 p=102310 u=root |  changed: [localhost]
2017-08-14 07:27:46,614 p=102310 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:27:46,674 p=102310 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print \"$1\"}'", 
        "delta": "0:00:00.072619", 
        "end": "2017-08-14 07:27:46.598348", 
        "rc": 0, 
        "start": "2017-08-14 07:27:46.525729", 
        "stderr": "", 
        "stdout": "$1", 
        "stdout_lines": [
            "$1"
        ], 
        "warnings": []
    }
}
2017-08-14 07:27:46,676 p=102310 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:27:46,676 p=102310 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:28:09,371 p=102384 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:28:09,372 p=102384 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:28:09,440 p=102384 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:28:09,491 p=102384 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:28:10,050 p=102384 u=root |  ok: [localhost]
2017-08-14 07:28:10,054 p=102384 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:28:10,372 p=102384 u=root |  changed: [localhost]
2017-08-14 07:28:10,375 p=102384 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:28:10,437 p=102384 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print $1}'", 
        "delta": "0:00:00.073467", 
        "end": "2017-08-14 07:28:10.356011", 
        "rc": 0, 
        "start": "2017-08-14 07:28:10.282544", 
        "stderr": "", 
        "stdout": "slmpuppet", 
        "stdout_lines": [
            "slmpuppet"
        ], 
        "warnings": []
    }
}
2017-08-14 07:28:10,439 p=102384 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:28:10,439 p=102384 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:28:31,858 p=102458 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:28:31,861 p=102458 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:28:31,945 p=102458 u=root |  PLAY [Wait] ********************************************************************
2017-08-14 07:28:32,013 p=102458 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:28:32,616 p=102458 u=root |  ok: [localhost]
2017-08-14 07:28:32,626 p=102458 u=root |  TASK [Check for image] *********************************************************
2017-08-14 07:28:32,972 p=102458 u=root |  changed: [localhost]
2017-08-14 07:28:32,974 p=102458 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:28:33,034 p=102458 u=root |  ok: [localhost] => {
    "image": {
        "changed": true, 
        "cmd": "docker images | grep \"slmpuppet\" | awk '{print $1 \"-\" $2}'", 
        "delta": "0:00:00.099039", 
        "end": "2017-08-14 07:28:32.956443", 
        "rc": 0, 
        "start": "2017-08-14 07:28:32.857404", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 07:28:33,035 p=102458 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:28:33,035 p=102458 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-14 07:31:04,428 p=102538 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:31:04,429 p=102538 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:31:04,514 p=102538 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 07:31:04,567 p=102538 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:31:05,143 p=102538 u=root |  ok: [localhost]
2017-08-14 07:31:05,188 p=102538 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 07:31:05,469 p=102538 u=root |  changed: [localhost]
2017-08-14 07:31:05,472 p=102538 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:31:05,494 p=102538 u=root |  ok: [localhost] => {
    "image_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.073064", 
        "end": "2017-08-14 07:31:05.454913", 
        "rc": 0, 
        "start": "2017-08-14 07:31:05.381849", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 07:31:05,497 p=102538 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 07:31:05,626 p=102538 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls /images | grep \"slmpuppet-v1.0.0\"", "delta": "0:00:00.004542", "end": "2017-08-14 07:31:05.608556", "failed": true, "rc": 1, "start": "2017-08-14 07:31:05.604014", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:31:05,627 p=102538 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 07:31:05,627 p=102538 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:31:05,627 p=102538 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-14 07:36:49,743 p=102622 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:36:49,744 p=102622 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:36:49,780 p=102622 u=root |  ERROR! 'regiaster' is not a valid attribute for a Task

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 23, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: Get image tag for {{ image }}
      ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-14 07:37:24,459 p=102631 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:37:24,460 p=102631 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:37:24,541 p=102631 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 07:37:24,597 p=102631 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:37:25,117 p=102631 u=root |  ok: [localhost]
2017-08-14 07:37:25,156 p=102631 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 07:37:25,407 p=102631 u=root |  changed: [localhost]
2017-08-14 07:37:25,410 p=102631 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:37:25,430 p=102631 u=root |  ok: [localhost] => {
    "current_tar": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.065842", 
        "end": "2017-08-14 07:37:25.393017", 
        "rc": 0, 
        "start": "2017-08-14 07:37:25.327175", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 07:37:25,433 p=102631 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 07:37:25,445 p=102631 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 40, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Check for new {{ image }} tar bzip file\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 07:37:25,446 p=102631 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 07:37:25,447 p=102631 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:37:25,447 p=102631 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-14 07:38:28,873 p=102707 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 07:38:28,875 p=102707 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 07:38:28,952 p=102707 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 07:38:29,001 p=102707 u=root |  TASK [setup] *******************************************************************
2017-08-14 07:38:29,520 p=102707 u=root |  ok: [localhost]
2017-08-14 07:38:29,561 p=102707 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 07:38:29,814 p=102707 u=root |  changed: [localhost]
2017-08-14 07:38:29,817 p=102707 u=root |  TASK [debug] *******************************************************************
2017-08-14 07:38:29,836 p=102707 u=root |  ok: [localhost] => {
    "current_tar": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.062514", 
        "end": "2017-08-14 07:38:29.801306", 
        "rc": 0, 
        "start": "2017-08-14 07:38:29.738792", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 07:38:29,842 p=102707 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 07:38:29,964 p=102707 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls /images | grep \"slmpuppet-v1.0.0\"", "delta": "0:00:00.004298", "end": "2017-08-14 07:38:29.949272", "failed": true, "rc": 1, "start": "2017-08-14 07:38:29.944974", "stderr": "", "stdout": "", "stdout_lines": [], "warnings": []}
2017-08-14 07:38:29,965 p=102707 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 07:38:29,965 p=102707 u=root |  PLAY RECAP *********************************************************************
2017-08-14 07:38:29,965 p=102707 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-14 18:37:49,050 p=121476 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:37:49,054 p=121476 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:37:49,236 p=121476 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:37:49,378 p=121476 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:37:50,117 p=121476 u=root |  ok: [localhost]
2017-08-14 18:37:50,181 p=121476 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:37:50,471 p=121476 u=root |  changed: [localhost]
2017-08-14 18:37:50,474 p=121476 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:37:50,494 p=121476 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.112992", 
        "end": "2017-08-14 18:37:50.456561", 
        "rc": 0, 
        "start": "2017-08-14 18:37:50.343569", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:37:50,499 p=121476 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 18:37:50,513 p=121476 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tar' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 32, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Check for new {{ image }} tar bzip file\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:37:50,514 p=121476 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:37:50,514 p=121476 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:37:50,514 p=121476 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-14 18:40:02,652 p=121553 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:40:02,654 p=121553 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:40:02,723 p=121553 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:40:02,782 p=121553 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:40:03,285 p=121553 u=root |  ok: [localhost]
2017-08-14 18:40:03,330 p=121553 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:40:03,580 p=121553 u=root |  changed: [localhost]
2017-08-14 18:40:03,583 p=121553 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:40:03,602 p=121553 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.069174", 
        "end": "2017-08-14 18:40:03.567060", 
        "rc": 0, 
        "start": "2017-08-14 18:40:03.497886", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:40:03,605 p=121553 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 18:40:03,719 p=121553 u=root |  changed: [localhost]
2017-08-14 18:40:03,721 p=121553 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:40:03,744 p=121553 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls //images | grep \"slmpuppet-v1.0.0\"", 
        "delta": "0:00:00.005400", 
        "end": "2017-08-14 18:40:03.704945", 
        "rc": 0, 
        "start": "2017-08-14 18:40:03.699545", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 18:40:03,745 p=121553 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:40:03,764 p=121553 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v1.0.0.tar.bz2"
}
2017-08-14 18:40:03,768 p=121553 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:40:03,780 p=121553 u=root |  skipping: [localhost]
2017-08-14 18:40:03,785 p=121553 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 18:40:03,797 p=121553 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:40:03,799 p=121553 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:40:03,799 p=121553 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:40:03,799 p=121553 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-14 18:41:55,884 p=121644 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:41:55,886 p=121644 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:41:55,958 p=121644 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:41:56,014 p=121644 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:41:56,508 p=121644 u=root |  ok: [localhost]
2017-08-14 18:41:56,550 p=121644 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:41:56,792 p=121644 u=root |  changed: [localhost]
2017-08-14 18:41:56,795 p=121644 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:41:56,816 p=121644 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.071204", 
        "end": "2017-08-14 18:41:56.778908", 
        "rc": 0, 
        "start": "2017-08-14 18:41:56.707704", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:41:56,818 p=121644 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 18:41:56,927 p=121644 u=root |  changed: [localhost]
2017-08-14 18:41:56,929 p=121644 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:41:56,948 p=121644 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls //images | grep \"slmpuppet-v1.0.0\"", 
        "delta": "0:00:00.004644", 
        "end": "2017-08-14 18:41:56.912980", 
        "rc": 0, 
        "start": "2017-08-14 18:41:56.908336", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 18:41:56,950 p=121644 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:41:56,969 p=121644 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v1.0.0.tar.bz2"
}
2017-08-14 18:41:56,973 p=121644 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:41:56,985 p=121644 u=root |  skipping: [localhost]
2017-08-14 18:41:56,988 p=121644 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 18:41:57,004 p=121644 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 48, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:41:57,005 p=121644 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:41:57,005 p=121644 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:41:57,005 p=121644 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-14 18:43:00,257 p=121735 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:43:00,259 p=121735 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:43:00,326 p=121735 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:43:00,391 p=121735 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:43:00,877 p=121735 u=root |  ok: [localhost]
2017-08-14 18:43:00,913 p=121735 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:43:01,174 p=121735 u=root |  changed: [localhost]
2017-08-14 18:43:01,177 p=121735 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:43:01,197 p=121735 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.068069", 
        "end": "2017-08-14 18:43:01.160978", 
        "rc": 0, 
        "start": "2017-08-14 18:43:01.092909", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:43:01,200 p=121735 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 18:43:01,308 p=121735 u=root |  changed: [localhost]
2017-08-14 18:43:01,310 p=121735 u=root |  TASK [Show the new image tag] **************************************************
2017-08-14 18:43:01,328 p=121735 u=root |  ok: [localhost] => {
    "new_image": {
        "changed": true, 
        "cmd": "ls //images | grep \"slmpuppet-v1.0.0\"", 
        "delta": "0:00:00.004324", 
        "end": "2017-08-14 18:43:01.296213", 
        "rc": 0, 
        "start": "2017-08-14 18:43:01.291889", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ], 
        "warnings": []
    }
}
2017-08-14 18:43:01,330 p=121735 u=root |  TASK [debug] *******************************************************************
2017-08-14 18:43:01,352 p=121735 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v1.0.0.tar.bz2"
}
2017-08-14 18:43:01,355 p=121735 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:43:01,369 p=121735 u=root |  skipping: [localhost]
2017-08-14 18:43:01,371 p=121735 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 18:43:01,384 p=121735 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 50, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:43:01,386 p=121735 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:43:01,386 p=121735 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:43:01,386 p=121735 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-14 18:43:42,749 p=121826 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:43:42,751 p=121826 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:43:42,812 p=121826 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:43:42,859 p=121826 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:43:43,367 p=121826 u=root |  ok: [localhost]
2017-08-14 18:43:43,405 p=121826 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:43:43,654 p=121826 u=root |  changed: [localhost]
2017-08-14 18:43:43,657 p=121826 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:43:43,678 p=121826 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.068446", 
        "end": "2017-08-14 18:43:43.641283", 
        "rc": 0, 
        "start": "2017-08-14 18:43:43.572837", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:43:43,681 p=121826 u=root |  TASK [Check for new slmpuppet tar bzip file] ***********************************
2017-08-14 18:43:43,796 p=121826 u=root |  changed: [localhost]
2017-08-14 18:43:43,799 p=121826 u=root |  TASK [Show the new image tag] **************************************************
2017-08-14 18:43:43,817 p=121826 u=root |  ok: [localhost] => {
    "new_image.stdout": "slmpuppet-v1.0.0.tar.bz2"
}
2017-08-14 18:43:43,823 p=121826 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:43:43,837 p=121826 u=root |  skipping: [localhost]
2017-08-14 18:43:43,840 p=121826 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 18:43:43,854 p=121826 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 47, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:43:43,855 p=121826 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:43:43,855 p=121826 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:43:43,855 p=121826 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:50:52,121 p=121920 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:50:52,122 p=121920 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:50:52,194 p=121920 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:50:52,244 p=121920 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:50:52,725 p=121920 u=root |  ok: [localhost]
2017-08-14 18:50:52,761 p=121920 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:50:53,014 p=121920 u=root |  changed: [localhost]
2017-08-14 18:50:53,017 p=121920 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:50:53,035 p=121920 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.069762", 
        "end": "2017-08-14 18:50:53.000603", 
        "rc": 0, 
        "start": "2017-08-14 18:50:52.930841", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:50:53,038 p=121920 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:50:53,153 p=121920 u=root |  changed: [localhost]
2017-08-14 18:50:53,158 p=121920 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:50:53,177 p=121920 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "v1.0.0\nv2.0.0"
}
2017-08-14 18:50:53,181 p=121920 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:50:53,194 p=121920 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:50:53,196 p=121920 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:50:53,197 p=121920 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:50:53,197 p=121920 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:51:48,758 p=122008 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:51:48,759 p=122008 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:51:48,835 p=122008 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:51:48,881 p=122008 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:51:49,389 p=122008 u=root |  ok: [localhost]
2017-08-14 18:51:49,434 p=122008 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:51:49,675 p=122008 u=root |  changed: [localhost]
2017-08-14 18:51:49,678 p=122008 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:51:49,696 p=122008 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.066058", 
        "end": "2017-08-14 18:51:49.661994", 
        "rc": 0, 
        "start": "2017-08-14 18:51:49.595936", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:51:49,699 p=122008 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:51:49,812 p=122008 u=root |  changed: [localhost]
2017-08-14 18:51:49,815 p=122008 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:51:49,835 p=122008 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0\nslmpuppet-v2.0.0"
}
2017-08-14 18:51:49,839 p=122008 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:51:49,858 p=122008 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:51:49,859 p=122008 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:51:49,860 p=122008 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:51:49,860 p=122008 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:53:08,227 p=122096 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:53:08,228 p=122096 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:53:08,305 p=122096 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:53:08,364 p=122096 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:53:08,846 p=122096 u=root |  ok: [localhost]
2017-08-14 18:53:08,883 p=122096 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:53:09,127 p=122096 u=root |  changed: [localhost]
2017-08-14 18:53:09,130 p=122096 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:53:09,150 p=122096 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.063199", 
        "end": "2017-08-14 18:53:09.110092", 
        "rc": 0, 
        "start": "2017-08-14 18:53:09.046893", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:53:09,153 p=122096 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:53:09,266 p=122096 u=root |  changed: [localhost]
2017-08-14 18:53:09,269 p=122096 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:53:09,287 p=122096 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 18:53:09,292 p=122096 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:53:09,304 p=122096 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:53:09,306 p=122096 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:53:09,306 p=122096 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:53:09,307 p=122096 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:53:34,314 p=122184 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:53:34,316 p=122184 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:53:34,377 p=122184 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:53:34,426 p=122184 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:53:34,920 p=122184 u=root |  ok: [localhost]
2017-08-14 18:53:34,958 p=122184 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:53:35,218 p=122184 u=root |  changed: [localhost]
2017-08-14 18:53:35,221 p=122184 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:53:35,240 p=122184 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.068857", 
        "end": "2017-08-14 18:53:35.204457", 
        "rc": 0, 
        "start": "2017-08-14 18:53:35.135600", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:53:35,244 p=122184 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:53:35,353 p=122184 u=root |  An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ValueError: No closing quotation
2017-08-14 18:53:35,353 p=122184 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "module_stderr": "Traceback (most recent call last):\n  File \"/tmp/ansible_18qXos/ansible_module_command.py\", line 212, in <module>\n    main()\n  File \"/tmp/ansible_18qXos/ansible_module_command.py\", line 189, in main\n    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)\n  File \"/tmp/ansible_18qXos/ansible_modlib.zip/ansible/module_utils/basic.py\", line 2166, in run_command\n  File \"/usr/lib64/python2.7/shlex.py\", line 279, in split\n    return list(lex)\n  File \"/usr/lib64/python2.7/shlex.py\", line 269, in next\n    token = self.get_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 96, in get_token\n    raw = self.read_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 172, in read_token\n    raise ValueError, \"No closing quotation\"\nValueError: No closing quotation\n", "module_stdout": "", "msg": "MODULE FAILURE"}
2017-08-14 18:53:35,355 p=122184 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:53:35,355 p=122184 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:53:35,355 p=122184 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-14 18:53:56,861 p=122263 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:53:56,862 p=122263 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:53:56,933 p=122263 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:53:56,980 p=122263 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:53:57,486 p=122263 u=root |  ok: [localhost]
2017-08-14 18:53:57,522 p=122263 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:53:57,796 p=122263 u=root |  changed: [localhost]
2017-08-14 18:53:57,799 p=122263 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:53:57,819 p=122263 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.095577", 
        "end": "2017-08-14 18:53:57.783863", 
        "rc": 0, 
        "start": "2017-08-14 18:53:57.688286", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:53:57,821 p=122263 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:53:57,937 p=122263 u=root |  changed: [localhost]
2017-08-14 18:53:57,941 p=122263 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:53:57,959 p=122263 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 18:53:57,963 p=122263 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:53:57,979 p=122263 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:53:57,981 p=122263 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:53:57,981 p=122263 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:53:57,981 p=122263 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:54:24,501 p=122351 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:54:24,504 p=122351 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:54:24,583 p=122351 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:54:24,631 p=122351 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:54:25,121 p=122351 u=root |  ok: [localhost]
2017-08-14 18:54:25,167 p=122351 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:54:25,418 p=122351 u=root |  changed: [localhost]
2017-08-14 18:54:25,421 p=122351 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:54:25,441 p=122351 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.070006", 
        "end": "2017-08-14 18:54:25.402924", 
        "rc": 0, 
        "start": "2017-08-14 18:54:25.332918", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:54:25,444 p=122351 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:54:25,564 p=122351 u=root |  changed: [localhost]
2017-08-14 18:54:25,568 p=122351 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:54:25,586 p=122351 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 18:54:25,590 p=122351 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:54:25,606 p=122351 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:54:25,607 p=122351 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:54:25,608 p=122351 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:54:25,608 p=122351 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:56:44,316 p=122441 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:56:44,317 p=122441 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:56:44,389 p=122441 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:56:44,439 p=122441 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:56:44,958 p=122441 u=root |  ok: [localhost]
2017-08-14 18:56:44,996 p=122441 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:56:45,237 p=122441 u=root |  changed: [localhost]
2017-08-14 18:56:45,240 p=122441 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:56:45,261 p=122441 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.060064", 
        "end": "2017-08-14 18:56:45.223457", 
        "rc": 0, 
        "start": "2017-08-14 18:56:45.163393", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:56:45,265 p=122441 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:56:45,375 p=122441 u=root |  changed: [localhost]
2017-08-14 18:56:45,378 p=122441 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:56:45,396 p=122441 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 18:56:45,402 p=122441 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:56:45,421 p=122441 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:56:45,422 p=122441 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:56:45,423 p=122441 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:56:45,423 p=122441 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 18:57:06,413 p=122529 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 18:57:06,414 p=122529 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 18:57:06,487 p=122529 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 18:57:06,536 p=122529 u=root |  TASK [setup] *******************************************************************
2017-08-14 18:57:07,050 p=122529 u=root |  ok: [localhost]
2017-08-14 18:57:07,087 p=122529 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 18:57:07,339 p=122529 u=root |  changed: [localhost]
2017-08-14 18:57:07,342 p=122529 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 18:57:07,360 p=122529 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.067793", 
        "end": "2017-08-14 18:57:07.323642", 
        "rc": 0, 
        "start": "2017-08-14 18:57:07.255849", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 18:57:07,364 p=122529 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 18:57:07,476 p=122529 u=root |  changed: [localhost]
2017-08-14 18:57:07,479 p=122529 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 18:57:07,498 p=122529 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-14 18:57:07,505 p=122529 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 18:57:07,519 p=122529 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'new_image.changed == false' failed. The error was: error while evaluating conditional (new_image.changed == false): 'new_image' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 45, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 18:57:07,521 p=122529 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 18:57:07,521 p=122529 u=root |  PLAY RECAP *********************************************************************
2017-08-14 18:57:07,521 p=122529 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 19:00:43,917 p=122618 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:00:43,918 p=122618 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:00:43,984 p=122618 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:00:44,032 p=122618 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:00:44,518 p=122618 u=root |  ok: [localhost]
2017-08-14 19:00:44,560 p=122618 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:00:44,800 p=122618 u=root |  changed: [localhost]
2017-08-14 19:00:44,802 p=122618 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:00:44,823 p=122618 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.068969", 
        "end": "2017-08-14 19:00:44.787272", 
        "rc": 0, 
        "start": "2017-08-14 19:00:44.718303", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 19:00:44,826 p=122618 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:00:44,938 p=122618 u=root |  changed: [localhost]
2017-08-14 19:00:44,941 p=122618 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:00:44,967 p=122618 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-14 19:00:44,973 p=122618 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:00:46,233 p=122618 u=root |  changed: [localhost]
2017-08-14 19:00:46,236 p=122618 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 19:00:46,252 p=122618 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 19:00:46,253 p=122618 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:00:46,253 p=122618 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:00:46,253 p=122618 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=1   
2017-08-14 19:01:14,010 p=122748 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:01:14,011 p=122748 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:01:14,100 p=122748 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:01:14,166 p=122748 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:01:14,735 p=122748 u=root |  ok: [localhost]
2017-08-14 19:01:14,774 p=122748 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:01:15,038 p=122748 u=root |  changed: [localhost]
2017-08-14 19:01:15,041 p=122748 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:01:15,062 p=122748 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.064769", 
        "end": "2017-08-14 19:01:15.021695", 
        "rc": 0, 
        "start": "2017-08-14 19:01:14.956926", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 19:01:15,064 p=122748 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:01:15,189 p=122748 u=root |  changed: [localhost]
2017-08-14 19:01:15,192 p=122748 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:01:15,211 p=122748 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 19:01:15,215 p=122748 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:01:15,239 p=122748 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//images/.tar.bz2' in expected paths."}
2017-08-14 19:01:15,240 p=122748 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:01:15,240 p=122748 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:01:15,240 p=122748 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 19:05:14,974 p=122845 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:05:14,977 p=122845 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:05:15,075 p=122845 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:05:15,161 p=122845 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:05:15,913 p=122845 u=root |  ok: [localhost]
2017-08-14 19:05:15,950 p=122845 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:05:16,208 p=122845 u=root |  changed: [localhost]
2017-08-14 19:05:16,211 p=122845 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:05:16,231 p=122845 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.069855", 
        "end": "2017-08-14 19:05:16.193462", 
        "rc": 0, 
        "start": "2017-08-14 19:05:16.123607", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 19:05:16,234 p=122845 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:05:16,349 p=122845 u=root |  changed: [localhost]
2017-08-14 19:05:16,353 p=122845 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:05:16,372 p=122845 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 19:05:16,375 p=122845 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:05:16,401 p=122845 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//images/.tar.bz2' in expected paths."}
2017-08-14 19:05:16,403 p=122845 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:05:16,403 p=122845 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:05:16,403 p=122845 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 19:05:33,458 p=122933 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:05:33,460 p=122933 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:05:33,536 p=122933 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:05:33,582 p=122933 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:05:34,091 p=122933 u=root |  ok: [localhost]
2017-08-14 19:05:34,129 p=122933 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:05:34,396 p=122933 u=root |  changed: [localhost]
2017-08-14 19:05:34,399 p=122933 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:05:34,420 p=122933 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \"-\" $2;}'", 
        "delta": "0:00:00.064539", 
        "end": "2017-08-14 19:05:34.379857", 
        "rc": 0, 
        "start": "2017-08-14 19:05:34.315318", 
        "stderr": "", 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ], 
        "warnings": []
    }
}
2017-08-14 19:05:34,423 p=122933 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:05:34,542 p=122933 u=root |  changed: [localhost]
2017-08-14 19:05:34,545 p=122933 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:05:34,568 p=122933 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 19:05:34,572 p=122933 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:05:34,594 p=122933 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/.tar.bz2' in expected paths."}
2017-08-14 19:05:34,597 p=122933 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:05:34,597 p=122933 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:05:34,597 p=122933 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 19:12:50,538 p=123025 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:12:50,540 p=123025 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:12:50,615 p=123025 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:12:50,667 p=123025 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:12:51,212 p=123025 u=root |  ok: [localhost]
2017-08-14 19:12:51,249 p=123025 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:12:51,505 p=123025 u=root |  changed: [localhost]
2017-08-14 19:12:51,508 p=123025 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:12:51,534 p=123025 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-14 19:12:51,538 p=123025 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:12:51,651 p=123025 u=root |  changed: [localhost]
2017-08-14 19:12:51,654 p=123025 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:12:51,674 p=123025 u=root |  ok: [localhost] => {
    "tar_tag.stdout": ""
}
2017-08-14 19:12:51,681 p=123025 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:12:51,703 p=123025 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/.tar.bz2' in expected paths."}
2017-08-14 19:12:51,704 p=123025 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:12:51,704 p=123025 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:12:51,704 p=123025 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-14 19:13:33,992 p=123113 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-14 19:13:33,994 p=123113 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-14 19:13:34,068 p=123113 u=root |  PLAY [Upgrade CAM host Docker Containers] **************************************
2017-08-14 19:13:34,119 p=123113 u=root |  TASK [setup] *******************************************************************
2017-08-14 19:13:34,628 p=123113 u=root |  ok: [localhost]
2017-08-14 19:13:34,670 p=123113 u=root |  TASK [Get image tag for slmpuppet] *********************************************
2017-08-14 19:13:34,918 p=123113 u=root |  changed: [localhost]
2017-08-14 19:13:34,921 p=123113 u=root |  TASK [Show the current image tag] **********************************************
2017-08-14 19:13:34,942 p=123113 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-14 19:13:34,945 p=123113 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] ***************************
2017-08-14 19:13:35,072 p=123113 u=root |  changed: [localhost]
2017-08-14 19:13:35,077 p=123113 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] *******************************
2017-08-14 19:13:35,098 p=123113 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-14 19:13:35,103 p=123113 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ****************************
2017-08-14 19:13:37,468 p=123113 u=root |  changed: [localhost]
2017-08-14 19:13:37,472 p=123113 u=root |  TASK [Stop the slmpuppet container] ********************************************
2017-08-14 19:13:37,489 p=123113 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-14 19:13:37,491 p=123113 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-14 19:13:37,491 p=123113 u=root |  PLAY RECAP *********************************************************************
2017-08-14 19:13:37,491 p=123113 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=1   
2017-08-15 18:17:11,883 p=124206 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 18:17:11,884 p=124206 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 18:17:12,034 p=124206 u=root |  PLAY [Upgrade CAM host Docker Containers] ********************************************************************************************************************************************************
2017-08-15 18:17:12,095 p=124206 u=root |  TASK [Gathering Facts] ***************************************************************************************************************************************************************************
2017-08-15 18:17:12,655 p=124206 u=root |  ok: [localhost]
2017-08-15 18:17:12,660 p=124206 u=root |  TASK [Set vars for tasks file] *******************************************************************************************************************************************************************
2017-08-15 18:17:12,677 p=124206 u=root |  ok: [localhost]
2017-08-15 18:17:12,687 p=124206 u=root |  TASK [Ensure docker-slmpuppet git deployment key is in place] ************************************************************************************************************************************
2017-08-15 18:17:13,076 p=124206 u=root |  ok: [localhost]
2017-08-15 18:17:13,081 p=124206 u=root |  TASK [Ensure docker-slmpuppet project is checked out] ********************************************************************************************************************************************
2017-08-15 18:17:14,687 p=124206 u=root |  changed: [localhost]
2017-08-15 18:17:14,692 p=124206 u=root |  TASK [Checkout the latest tagged version of docker-slmpuppet] ************************************************************************************************************************************
2017-08-15 18:17:14,890 p=124206 u=root |  changed: [localhost]
2017-08-15 18:17:14,894 p=124206 u=root |  TASK [Git the tagged version of "docker-slmpuppet"] **********************************************************************************************************************************************
2017-08-15 18:17:15,011 p=124206 u=root |  changed: [localhost]
2017-08-15 18:17:15,016 p=124206 u=root |  TASK [Show tagged version of "docker-slmpuppet"] *************************************************************************************************************************************************
2017-08-15 18:17:15,041 p=124206 u=root |  ok: [localhost] => {
    "git_tags": {
        "changed": true, 
        "cmd": "git describe --tags", 
        "delta": "0:00:00.003544", 
        "end": "2017-08-15 18:17:14.997437", 
        "rc": 0, 
        "start": "2017-08-15 18:17:14.993893", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ]
    }
}
2017-08-15 18:17:15,049 p=124206 u=root |  TASK [Get list of docker image tags present] *****************************************************************************************************************************************************
2017-08-15 18:17:15,240 p=124206 u=root |  changed: [localhost]
2017-08-15 18:17:15,244 p=124206 u=root |  TASK [Show the current image tags] ***************************************************************************************************************************************************************
2017-08-15 18:17:15,264 p=124206 u=root |  ok: [localhost] => {
    "current_tags": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
        "delta": "0:00:00.077047", 
        "end": "2017-08-15 18:17:15.224317", 
        "rc": 0, 
        "start": "2017-08-15 18:17:15.147270", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ]
    }
}
2017-08-15 18:17:15,268 p=124206 u=root |  TASK [Remove existing image (force rebuild)] *****************************************************************************************************************************************************
2017-08-15 18:17:15,667 p=124206 u=root |  changed: [localhost]
2017-08-15 18:17:15,671 p=124206 u=root |  TASK [Ensure "slmpuppet" image is built] *********************************************************************************************************************************************************
2017-08-15 18:21:22,522 p=124206 u=root |  changed: [localhost]
2017-08-15 18:21:22,527 p=124206 u=root |  TASK [Show new image] ****************************************************************************************************************************************************************************
2017-08-15 18:21:22,552 p=124206 u=root |  ok: [localhost] => {
    "new_image": {
        "actions": [
            "Built image slmpuppet:v1.0.0 from /opt/csc/src/docker-slmpuppet"
        ], 
        "attempts": 1, 
        "changed": true, 
        "image": {
            "Architecture": "amd64", 
            "Author": "Aaron Dean \"adean20@csc.com\"", 
            "Comment": "", 
            "Config": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "sudo puppet master --no-daemonize --verbose"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:adbe58cde0e79c0d471eff1fdd762c4ca9971c8a3912846e185bbfc17556d0de", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Container": "e49993940caad645c0d82acdcbe3064943a11edb0e1a9e1e48d8f3a20aaa8519", 
            "ContainerConfig": {
                "ArgsEscaped": true, 
                "AttachStderr": false, 
                "AttachStdin": false, 
                "AttachStdout": false, 
                "Cmd": [
                    "/bin/sh", 
                    "-c", 
                    "#(nop) CMD [\"/bin/sh\" \"-c\" \"sudo puppet master --no-daemonize --verbose\"]"
                ], 
                "Domainname": "", 
                "Entrypoint": null, 
                "Env": [
                    "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                    "UBUNTU_CODENAME=trusty"
                ], 
                "ExposedPorts": {
                    "8140/tcp": {}
                }, 
                "Hostname": "a9678380ab81", 
                "Image": "sha256:adbe58cde0e79c0d471eff1fdd762c4ca9971c8a3912846e185bbfc17556d0de", 
                "Labels": {}, 
                "OnBuild": [], 
                "OpenStdin": false, 
                "StdinOnce": false, 
                "Tty": false, 
                "User": "puppet", 
                "Volumes": {
                    "/etc/puppet": {}, 
                    "/var/lib/puppet": {}, 
                    "/var/log/puppet": {}
                }, 
                "WorkingDir": "/usr/bin"
            }, 
            "Created": "2017-08-15T22:21:20.072123446Z", 
            "DockerVersion": "1.10.3", 
            "GraphDriver": {
                "Data": {
                    "DeviceId": "608", 
                    "DeviceName": "docker-253:0-260130-9740c7da7ad0d0e4256393291e83ce3853a98926f2a9b16af3b37762bb02bba1", 
                    "DeviceSize": "107374182400"
                }, 
                "Name": "devicemapper"
            }, 
            "Id": "sha256:2a395f549ed5b2400912b322ddcb5f790f6bd004518fa83848d8c07f15208e37", 
            "Os": "linux", 
            "Parent": "sha256:adbe58cde0e79c0d471eff1fdd762c4ca9971c8a3912846e185bbfc17556d0de", 
            "RepoDigests": [], 
            "RepoTags": [
                "slmpuppet:v1.0.0"
            ], 
            "Size": 231599944, 
            "VirtualSize": 231599944
        }
    }
}
2017-08-15 18:21:22,556 p=124206 u=root |  TASK [Set the tar bzip file name] ****************************************************************************************************************************************************************
2017-08-15 18:21:22,577 p=124206 u=root |  ok: [localhost]
2017-08-15 18:21:22,582 p=124206 u=root |  TASK [Find previously built slmpuppet tar bzip files] ********************************************************************************************************************************************
2017-08-15 18:21:22,876 p=124206 u=root |  ok: [localhost]
2017-08-15 18:21:22,882 p=124206 u=root |  TASK [Show old slmpuppet tar bzip files] *********************************************************************************************************************************************************
2017-08-15 18:21:22,903 p=124206 u=root |  ok: [localhost] => {
    "old_tar_bz2": {
        "changed": false, 
        "examined": 1, 
        "files": [], 
        "matched": 0, 
        "msg": ""
    }
}
2017-08-15 18:21:22,907 p=124206 u=root |  TASK [Remove old slmpuppet tar bzip files] *******************************************************************************************************************************************************
2017-08-15 18:21:22,927 p=124206 u=root |  TASK [Export new slmpuppet to a tar bzip file] ***************************************************************************************************************************************************
2017-08-15 18:21:23,080 p=124206 u=root |  changed: [localhost]
2017-08-15 18:21:23,085 p=124206 u=root |  TASK [Ensure correct mode on /images/slmpuppet-v1.0.0.tar.bz2] ***********************************************************************************************************************************
2017-08-15 18:21:23,206 p=124206 u=root |  ok: [localhost]
2017-08-15 18:21:23,212 p=124206 u=root |  TASK [Fetch /images/slmpuppet-v1.0.0.tar.bz2 to Jenkins Server] **********************************************************************************************************************************
2017-08-15 18:21:23,230 p=124206 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'xfer_docker_images' failed. The error was: error while evaluating conditional (xfer_docker_images): 'xfer_docker_images' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/tasks.yml': line 105, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Fetch {{ tar_bzip }} to Jenkins Server\n  ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-15 18:21:23,231 p=124206 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/tryme.retry

2017-08-15 18:21:23,231 p=124206 u=root |  PLAY RECAP ***************************************************************************************************************************************************************************************
2017-08-15 18:21:23,231 p=124206 u=root |  localhost                  : ok=17   changed=7    unreachable=0    failed=1   
2017-08-15 18:45:57,103 p=129999 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 18:45:57,105 p=129999 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 18:45:57,264 p=129999 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 18:45:57,335 p=129999 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 18:45:57,925 p=129999 u=root |  ok: [localhost]
2017-08-15 18:45:57,930 p=129999 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 18:45:58,194 p=129999 u=root |  changed: [localhost]
2017-08-15 18:45:58,199 p=129999 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 18:45:58,218 p=129999 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 18:45:58,226 p=129999 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 18:45:58,350 p=129999 u=root |  changed: [localhost]
2017-08-15 18:45:58,355 p=129999 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 18:45:58,377 p=129999 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 18:45:58,381 p=129999 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 18:45:59,781 p=129999 u=root |  ok: [localhost]
2017-08-15 18:45:59,787 p=129999 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-15 18:45:59,805 p=129999 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-15 18:45:59,806 p=129999 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 18:45:59,806 p=129999 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 18:45:59,806 p=129999 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-15 19:16:14,592 p=130264 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:16:14,594 p=130264 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:16:14,722 p=130264 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:16:14,786 p=130264 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:16:15,376 p=130264 u=root |  ok: [localhost]
2017-08-15 19:16:15,383 p=130264 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:16:15,650 p=130264 u=root |  changed: [localhost]
2017-08-15 19:16:15,654 p=130264 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:16:15,683 p=130264 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:16:15,688 p=130264 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:16:15,812 p=130264 u=root |  changed: [localhost]
2017-08-15 19:16:15,819 p=130264 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:16:15,839 p=130264 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:16:15,847 p=130264 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:16:16,849 p=130264 u=root |  ok: [localhost]
2017-08-15 19:16:16,854 p=130264 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-15 19:16:16,873 p=130264 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 47, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Stop the {{ image }} container\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-15 19:16:16,874 p=130264 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:16:16,875 p=130264 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:16:16,875 p=130264 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-15 19:16:43,990 p=130365 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:16:43,992 p=130365 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:16:44,103 p=130365 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:16:44,155 p=130365 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:16:44,690 p=130365 u=root |  ok: [localhost]
2017-08-15 19:16:44,695 p=130365 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:16:44,969 p=130365 u=root |  changed: [localhost]
2017-08-15 19:16:44,974 p=130365 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:16:44,994 p=130365 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:16:44,999 p=130365 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:16:45,118 p=130365 u=root |  changed: [localhost]
2017-08-15 19:16:45,123 p=130365 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:16:45,143 p=130365 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:16:45,151 p=130365 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:16:45,969 p=130365 u=root |  ok: [localhost]
2017-08-15 19:16:45,974 p=130365 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-15 19:16:46,132 p=130365 u=root |  changed: [localhost]
2017-08-15 19:16:46,136 p=130365 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-15 19:16:46,150 p=130365 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'image_tags' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 52, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - debug:\n      ^ here\n"}
2017-08-15 19:16:46,151 p=130365 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:16:46,151 p=130365 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:16:46,151 p=130365 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=1   
2017-08-15 19:17:09,660 p=130475 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:17:09,661 p=130475 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:17:09,766 p=130475 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:17:09,820 p=130475 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:17:10,349 p=130475 u=root |  ok: [localhost]
2017-08-15 19:17:10,355 p=130475 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:17:10,606 p=130475 u=root |  changed: [localhost]
2017-08-15 19:17:10,610 p=130475 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:17:10,640 p=130475 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:17:10,645 p=130475 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:17:10,769 p=130475 u=root |  changed: [localhost]
2017-08-15 19:17:10,774 p=130475 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:17:10,798 p=130475 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:17:10,803 p=130475 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:17:11,613 p=130475 u=root |  ok: [localhost]
2017-08-15 19:17:11,618 p=130475 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-15 19:17:11,777 p=130475 u=root |  changed: [localhost]
2017-08-15 19:17:11,781 p=130475 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-15 19:17:11,801 p=130475 u=root |  ok: [localhost] => {
    "msg": "slmpuppet:slmpuppet-v1.0.0"
}
2017-08-15 19:17:11,803 p=130475 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:17:11,803 p=130475 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-15 19:17:53,726 p=130585 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:17:53,727 p=130585 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:17:53,835 p=130585 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:17:53,888 p=130585 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:17:54,421 p=130585 u=root |  ok: [localhost]
2017-08-15 19:17:54,427 p=130585 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:17:54,685 p=130585 u=root |  changed: [localhost]
2017-08-15 19:17:54,690 p=130585 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:17:54,714 p=130585 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:17:54,719 p=130585 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:17:54,838 p=130585 u=root |  changed: [localhost]
2017-08-15 19:17:54,844 p=130585 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:17:54,863 p=130585 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-15 19:17:54,869 p=130585 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:17:55,670 p=130585 u=root |  ok: [localhost]
2017-08-15 19:17:55,676 p=130585 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-15 19:17:55,829 p=130585 u=root |  changed: [localhost]
2017-08-15 19:17:55,833 p=130585 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-15 19:17:55,853 p=130585 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"slmpuppet-v1.0.0\"", 
        "delta": "0:00:00.042314", 
        "end": "2017-08-15 19:17:55.814026", 
        "rc": 0, 
        "start": "2017-08-15 19:17:55.771712", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES"
        ]
    }
}
2017-08-15 19:17:55,854 p=130585 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:17:55,854 p=130585 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-15 19:38:20,805 p=130733 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:38:20,807 p=130733 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:38:20,923 p=130733 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:38:20,979 p=130733 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:38:21,545 p=130733 u=root |  ok: [localhost]
2017-08-15 19:38:21,550 p=130733 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:38:21,809 p=130733 u=root |  changed: [localhost]
2017-08-15 19:38:21,814 p=130733 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:38:21,836 p=130733 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:38:21,841 p=130733 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:38:21,956 p=130733 u=root |  changed: [localhost]
2017-08-15 19:38:21,961 p=130733 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:38:21,982 p=130733 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0\nslmzsync-v1.0.0"
}
2017-08-15 19:38:21,988 p=130733 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:38:22,011 p=130733 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0\nslmzsync-v1.0.0.tar.bz2' in expected paths."}
2017-08-15 19:38:22,013 p=130733 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:38:22,013 p=130733 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:38:22,014 p=130733 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:41:31,246 p=130822 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:41:31,248 p=130822 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:41:31,358 p=130822 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:41:31,410 p=130822 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:41:31,936 p=130822 u=root |  ok: [localhost]
2017-08-15 19:41:31,943 p=130822 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:41:32,201 p=130822 u=root |  changed: [localhost]
2017-08-15 19:41:32,205 p=130822 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:41:32,225 p=130822 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:41:32,231 p=130822 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:41:32,345 p=130822 u=root |  changed: [localhost]
2017-08-15 19:41:32,351 p=130822 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:41:32,374 p=130822 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "docker-slmpuppet..\nslmpuppet-v1.0.0"
}
2017-08-15 19:41:32,381 p=130822 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:41:32,405 p=130822 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/docker-slmpuppet..\nslmpuppet-v1.0.0.tar.bz2' in expected paths."}
2017-08-15 19:41:32,406 p=130822 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:41:32,407 p=130822 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:41:32,407 p=130822 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:43:54,792 p=130911 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:43:54,794 p=130911 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:43:54,901 p=130911 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:43:54,955 p=130911 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:43:55,474 p=130911 u=root |  ok: [localhost]
2017-08-15 19:43:55,480 p=130911 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:43:55,734 p=130911 u=root |  changed: [localhost]
2017-08-15 19:43:55,738 p=130911 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:43:55,757 p=130911 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:43:55,762 p=130911 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:43:55,883 p=130911 u=root |  changed: [localhost]
2017-08-15 19:43:55,888 p=130911 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:43:55,910 p=130911 u=root |  ok: [localhost] => {
    "tar_tag.stdout": "slmpuppet-v1.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2"
}
2017-08-15 19:43:55,916 p=130911 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:43:55,944 p=130911 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2.tar.bz2' in expected paths."}
2017-08-15 19:43:55,946 p=130911 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:43:55,946 p=130911 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:43:55,946 p=130911 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:44:39,583 p=130998 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:44:39,584 p=130998 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:44:39,700 p=130998 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:44:39,752 p=130998 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:44:40,278 p=130998 u=root |  ok: [localhost]
2017-08-15 19:44:40,283 p=130998 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:44:40,550 p=130998 u=root |  changed: [localhost]
2017-08-15 19:44:40,555 p=130998 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:44:40,576 p=130998 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:44:40,582 p=130998 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:44:40,710 p=130998 u=root |  changed: [localhost]
2017-08-15 19:44:40,716 p=130998 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:44:40,742 p=130998 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep v1.0.0", 
        "delta": "0:00:00.006014", 
        "end": "2017-08-15 19:44:40.693595", 
        "rc": 0, 
        "start": "2017-08-15 19:44:40.687581", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2", 
            "slmzsync-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-15 19:44:40,747 p=130998 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:44:40,781 p=130998 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0.tar.bz2\nslmzsync-v1.0.0.tar.bz2.tar.bz2' in expected paths."}
2017-08-15 19:44:40,783 p=130998 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:44:40,783 p=130998 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:44:40,783 p=130998 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:45:26,207 p=313 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:45:26,208 p=313 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:45:26,318 p=313 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:45:26,369 p=313 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:45:26,886 p=313 u=root |  ok: [localhost]
2017-08-15 19:45:26,891 p=313 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:45:27,148 p=313 u=root |  changed: [localhost]
2017-08-15 19:45:27,153 p=313 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:45:27,173 p=313 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:45:27,179 p=313 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:45:27,286 p=313 u=root |  An exception occurred during task execution. To see the full traceback, use -vvv. The error was: ValueError: No closing quotation
2017-08-15 19:45:27,287 p=313 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "module_stderr": "Traceback (most recent call last):\n  File \"/tmp/ansible_TmY8Z0/ansible_module_command.py\", line 220, in <module>\n    main()\n  File \"/tmp/ansible_TmY8Z0/ansible_module_command.py\", line 197, in main\n    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)\n  File \"/tmp/ansible_TmY8Z0/ansible_modlib.zip/ansible/module_utils/basic.py\", line 2363, in run_command\n  File \"/usr/lib64/python2.7/shlex.py\", line 279, in split\n    return list(lex)\n  File \"/usr/lib64/python2.7/shlex.py\", line 269, in next\n    token = self.get_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 96, in get_token\n    raw = self.read_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 172, in read_token\n    raise ValueError, \"No closing quotation\"\nValueError: No closing quotation\n", "module_stdout": "", "msg": "MODULE FAILURE", "rc": 1}
2017-08-15 19:45:27,288 p=313 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:45:27,288 p=313 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:45:27,288 p=313 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:46:43,106 p=395 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-15 19:46:43,108 p=395 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:46:43,110 p=395 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:46:43,155 p=395 u=root |  Loading callback plugin default of type stdout, v2.0 from /usr/lib/python2.7/site-packages/ansible/plugins/callback/__init__.pyc
2017-08-15 19:46:43,188 p=395 u=root |  PLAYBOOK: site.yml ********************************************************************************************************************************************************************
2017-08-15 19:46:43,189 p=395 u=root |  1 plays in site.yml
2017-08-15 19:46:43,233 p=395 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:46:43,294 p=395 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:46:43,492 p=395 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/system/setup.py
2017-08-15 19:46:43,806 p=395 u=root |  ok: [localhost]
2017-08-15 19:46:43,806 p=395 u=root |  META: ran handlers
2017-08-15 19:46:43,811 p=395 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:46:43,811 p=395 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:24
2017-08-15 19:46:43,908 p=395 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-15 19:46:44,091 p=395 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
    "delta": "0:00:00.071190", 
    "end": "2017-08-15 19:46:44.073484", 
    "invocation": {
        "module_args": {
            "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-15 19:46:44.002294", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "v1.0.0", 
    "stdout_lines": [
        "v1.0.0"
    ]
}
2017-08-15 19:46:44,096 p=395 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:46:44,096 p=395 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:30
2017-08-15 19:46:44,115 p=395 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:46:44,120 p=395 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:46:44,120 p=395 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:34
2017-08-15 19:46:44,138 p=395 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-15 19:46:44,233 p=395 u=root |  The full traceback is:
Traceback (most recent call last):
  File "/tmp/ansible_pq498L/ansible_module_command.py", line 220, in <module>
    main()
  File "/tmp/ansible_pq498L/ansible_module_command.py", line 197, in main
    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)
  File "/tmp/ansible_pq498L/ansible_modlib.zip/ansible/module_utils/basic.py", line 2363, in run_command
  File "/usr/lib64/python2.7/shlex.py", line 279, in split
    return list(lex)
  File "/usr/lib64/python2.7/shlex.py", line 269, in next
    token = self.get_token()
  File "/usr/lib64/python2.7/shlex.py", line 96, in get_token
    raw = self.read_token()
  File "/usr/lib64/python2.7/shlex.py", line 172, in read_token
    raise ValueError, "No closing quotation"
ValueError: No closing quotation

2017-08-15 19:46:44,234 p=395 u=root |  fatal: [localhost]: FAILED! => {
    "changed": false, 
    "failed": true, 
    "module_stderr": "Traceback (most recent call last):\n  File \"/tmp/ansible_pq498L/ansible_module_command.py\", line 220, in <module>\n    main()\n  File \"/tmp/ansible_pq498L/ansible_module_command.py\", line 197, in main\n    rc, out, err = module.run_command(args, executable=executable, use_unsafe_shell=shell, encoding=None)\n  File \"/tmp/ansible_pq498L/ansible_modlib.zip/ansible/module_utils/basic.py\", line 2363, in run_command\n  File \"/usr/lib64/python2.7/shlex.py\", line 279, in split\n    return list(lex)\n  File \"/usr/lib64/python2.7/shlex.py\", line 269, in next\n    token = self.get_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 96, in get_token\n    raw = self.read_token()\n  File \"/usr/lib64/python2.7/shlex.py\", line 172, in read_token\n    raise ValueError, \"No closing quotation\"\nValueError: No closing quotation\n", 
    "module_stdout": "", 
    "msg": "MODULE FAILURE", 
    "rc": 1
}
2017-08-15 19:46:44,236 p=395 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:46:44,236 p=395 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:46:44,236 p=395 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:47:26,026 p=474 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-15 19:47:26,029 p=474 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:47:26,030 p=474 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:47:26,073 p=474 u=root |  Loading callback plugin default of type stdout, v2.0 from /usr/lib/python2.7/site-packages/ansible/plugins/callback/__init__.pyc
2017-08-15 19:47:26,101 p=474 u=root |  PLAYBOOK: site.yml ********************************************************************************************************************************************************************
2017-08-15 19:47:26,101 p=474 u=root |  1 plays in site.yml
2017-08-15 19:47:26,150 p=474 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:47:26,201 p=474 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:47:26,405 p=474 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/system/setup.py
2017-08-15 19:47:26,732 p=474 u=root |  ok: [localhost]
2017-08-15 19:47:26,732 p=474 u=root |  META: ran handlers
2017-08-15 19:47:26,737 p=474 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:47:26,737 p=474 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:24
2017-08-15 19:47:26,844 p=474 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-15 19:47:27,012 p=474 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
    "delta": "0:00:00.071267", 
    "end": "2017-08-15 19:47:26.998173", 
    "invocation": {
        "module_args": {
            "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $2;}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-15 19:47:26.926906", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "v1.0.0", 
    "stdout_lines": [
        "v1.0.0"
    ]
}
2017-08-15 19:47:27,016 p=474 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:47:27,016 p=474 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:30
2017-08-15 19:47:27,035 p=474 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:47:27,040 p=474 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:47:27,040 p=474 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:34
2017-08-15 19:47:27,058 p=474 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-15 19:47:27,157 p=474 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "ls //depot | grep slmpuppet", 
    "delta": "0:00:00.004948", 
    "end": "2017-08-15 19:47:27.143876", 
    "invocation": {
        "module_args": {
            "_raw_params": "ls //depot | grep slmpuppet", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-15 19:47:27.138928", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2", 
    "stdout_lines": [
        "docker-slmpuppet", 
        "slmpuppet-v1.0.0.tar.bz2"
    ]
}
2017-08-15 19:47:27,162 p=474 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:47:27,162 p=474 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:39
2017-08-15 19:47:27,185 p=474 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep slmpuppet", 
        "delta": "0:00:00.004948", 
        "end": "2017-08-15 19:47:27.143876", 
        "rc": 0, 
        "start": "2017-08-15 19:47:27.138928", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "docker-slmpuppet", 
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-15 19:47:27,190 p=474 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:47:27,190 p=474 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:43
2017-08-15 19:47:27,213 p=474 u=root |  fatal: [localhost]: FAILED! => {
    "changed": false, 
    "failed": true, 
    "msg": "Unable to find '//depot/docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2.tar.bz2' in expected paths."
}
2017-08-15 19:47:27,215 p=474 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:47:27,215 p=474 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:47:27,215 p=474 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:48:19,358 p=634 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:48:19,360 p=634 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:48:19,479 p=634 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:48:19,532 p=634 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:48:20,062 p=634 u=root |  ok: [localhost]
2017-08-15 19:48:20,067 p=634 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:48:20,318 p=634 u=root |  changed: [localhost]
2017-08-15 19:48:20,322 p=634 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:48:20,343 p=634 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:48:20,349 p=634 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:48:20,457 p=634 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep slmpuppet*.tar.bz2", "delta": "0:00:00.005002", "end": "2017-08-15 19:48:20.443660", "failed": true, "rc": 1, "start": "2017-08-15 19:48:20.438658", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-15 19:48:20,459 p=634 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:48:20,459 p=634 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:48:20,459 p=634 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:49:23,360 p=721 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:49:23,362 p=721 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:49:23,478 p=721 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:49:23,548 p=721 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:49:24,138 p=721 u=root |  ok: [localhost]
2017-08-15 19:49:24,143 p=721 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:49:24,406 p=721 u=root |  changed: [localhost]
2017-08-15 19:49:24,411 p=721 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:49:24,432 p=721 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:49:24,439 p=721 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:49:24,555 p=721 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep \"slmpuppet*.tar.bz2\"", "delta": "0:00:00.006015", "end": "2017-08-15 19:49:24.539606", "failed": true, "rc": 1, "start": "2017-08-15 19:49:24.533591", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-15 19:49:24,556 p=721 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:49:24,556 p=721 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:49:24,556 p=721 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:49:56,983 p=812 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:49:56,985 p=812 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:49:57,101 p=812 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:49:57,152 p=812 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:49:57,691 p=812 u=root |  ok: [localhost]
2017-08-15 19:49:57,697 p=812 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:49:57,944 p=812 u=root |  changed: [localhost]
2017-08-15 19:49:57,950 p=812 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:49:57,971 p=812 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:49:57,976 p=812 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:49:58,099 p=812 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep \"slmpuppet\"*.tar.bz2", "delta": "0:00:00.004931", "end": "2017-08-15 19:49:58.083999", "failed": true, "rc": 1, "start": "2017-08-15 19:49:58.079068", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-15 19:49:58,102 p=812 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:49:58,102 p=812 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:49:58,102 p=812 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:50:28,777 p=906 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:50:28,778 p=906 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:50:28,890 p=906 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:50:28,941 p=906 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:50:29,463 p=906 u=root |  ok: [localhost]
2017-08-15 19:50:29,469 p=906 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:50:29,725 p=906 u=root |  changed: [localhost]
2017-08-15 19:50:29,729 p=906 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:50:29,748 p=906 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:50:29,753 p=906 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:50:29,870 p=906 u=root |  changed: [localhost]
2017-08-15 19:50:29,875 p=906 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:50:29,896 p=906 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep \"slmpuppet\"*", 
        "delta": "0:00:00.005152", 
        "end": "2017-08-15 19:50:29.855334", 
        "rc": 0, 
        "start": "2017-08-15 19:50:29.850182", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "docker-slmpuppet", 
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-15 19:50:29,902 p=906 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:50:29,927 p=906 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2.tar.bz2' in expected paths."}
2017-08-15 19:50:29,929 p=906 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:50:29,929 p=906 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:50:29,929 p=906 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-15 19:51:13,300 p=1004 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:51:13,301 p=1004 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:51:13,414 p=1004 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:51:13,472 p=1004 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:51:13,978 p=1004 u=root |  ok: [localhost]
2017-08-15 19:51:13,983 p=1004 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:51:14,250 p=1004 u=root |  changed: [localhost]
2017-08-15 19:51:14,254 p=1004 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:51:14,279 p=1004 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:51:14,285 p=1004 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:51:14,408 p=1004 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep \"slmpuppet\"*\".tar.bz2\"", "delta": "0:00:00.005567", "end": "2017-08-15 19:51:14.395341", "failed": true, "rc": 1, "start": "2017-08-15 19:51:14.389774", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-15 19:51:14,410 p=1004 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:51:14,410 p=1004 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:51:14,410 p=1004 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:53:18,559 p=1099 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:53:18,560 p=1099 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:53:18,678 p=1099 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:53:18,731 p=1099 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:53:19,242 p=1099 u=root |  ok: [localhost]
2017-08-15 19:53:19,247 p=1099 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:53:19,501 p=1099 u=root |  changed: [localhost]
2017-08-15 19:53:19,506 p=1099 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:53:19,525 p=1099 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:53:19,532 p=1099 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:53:19,642 p=1099 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep $(slmpuppet*.tar.bz2)", "delta": "0:00:00.005509", "end": "2017-08-15 19:53:19.628591", "failed": true, "rc": 2, "start": "2017-08-15 19:53:19.623082", "stderr": "/bin/sh: slmpuppet*.tar.bz2: command not found\nUsage: grep [OPTION]... PATTERN [FILE]...\nTry 'grep --help' for more information.", "stderr_lines": ["/bin/sh: slmpuppet*.tar.bz2: command not found", "Usage: grep [OPTION]... PATTERN [FILE]...", "Try 'grep --help' for more information."], "stdout": "", "stdout_lines": []}
2017-08-15 19:53:19,644 p=1099 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:53:19,644 p=1099 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:53:19,644 p=1099 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:55:34,378 p=1184 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:55:34,380 p=1184 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:55:34,497 p=1184 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:55:34,555 p=1184 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:55:35,141 p=1184 u=root |  ok: [localhost]
2017-08-15 19:55:35,147 p=1184 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:55:35,423 p=1184 u=root |  changed: [localhost]
2017-08-15 19:55:35,429 p=1184 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:55:35,449 p=1184 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:55:35,455 p=1184 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:55:35,579 p=1184 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ls //depot | grep $slmpuppet*.tar.bz2", "delta": "0:00:00.005067", "end": "2017-08-15 19:55:35.565140", "failed": true, "rc": 1, "start": "2017-08-15 19:55:35.560073", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-15 19:55:35,581 p=1184 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:55:35,581 p=1184 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:55:35,581 p=1184 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-15 19:59:47,598 p=1275 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-15 19:59:47,600 p=1275 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-15 19:59:47,725 p=1275 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-15 19:59:47,779 p=1275 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-15 19:59:48,342 p=1275 u=root |  ok: [localhost]
2017-08-15 19:59:48,349 p=1275 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-15 19:59:48,632 p=1275 u=root |  changed: [localhost]
2017-08-15 19:59:48,637 p=1275 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-15 19:59:48,660 p=1275 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-15 19:59:48,666 p=1275 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-15 19:59:48,798 p=1275 u=root |  changed: [localhost]
2017-08-15 19:59:48,803 p=1275 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-15 19:59:48,830 p=1275 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.007671", 
        "end": "2017-08-15 19:59:48.782582", 
        "rc": 0, 
        "start": "2017-08-15 19:59:48.774911", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-15 19:59:48,835 p=1275 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-15 19:59:48,859 p=1275 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0.tar.bz2.tar.bz2' in expected paths."}
2017-08-15 19:59:48,863 p=1275 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-15 19:59:48,863 p=1275 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-15 19:59:48,863 p=1275 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:24:03,168 p=1641 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:24:03,170 p=1641 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:24:03,303 p=1641 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:24:03,371 p=1641 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:24:04,000 p=1641 u=root |  ok: [localhost]
2017-08-16 02:24:04,006 p=1641 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:24:04,302 p=1641 u=root |  changed: [localhost]
2017-08-16 02:24:04,307 p=1641 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:24:04,334 p=1641 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:24:04,339 p=1641 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:24:04,462 p=1641 u=root |  changed: [localhost]
2017-08-16 02:24:04,470 p=1641 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:24:04,493 p=1641 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005300", 
        "end": "2017-08-16 02:24:04.448896", 
        "rc": 0, 
        "start": "2017-08-16 02:24:04.443596", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:24:04,500 p=1641 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:24:04,529 p=1641 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0.tar.bz2.tar.bz2' in expected paths."}
2017-08-16 02:24:04,531 p=1641 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:24:04,531 p=1641 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:24:04,531 p=1641 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:24:37,726 p=1727 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:24:37,728 p=1727 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:24:37,863 p=1727 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:24:37,921 p=1727 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:24:38,457 p=1727 u=root |  ok: [localhost]
2017-08-16 02:24:38,463 p=1727 u=root |  TASK [Set vars for tasks file] ********************************************************************************************************************************************************
2017-08-16 02:24:38,476 p=1727 u=root |   [ERROR]: User interrupted execution

2017-08-16 02:26:09,619 p=1787 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:26:09,620 p=1787 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:26:09,748 p=1787 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:26:09,806 p=1787 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:26:10,381 p=1787 u=root |  ok: [localhost]
2017-08-16 02:26:10,387 p=1787 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:26:10,641 p=1787 u=root |  changed: [localhost]
2017-08-16 02:26:10,645 p=1787 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:26:10,669 p=1787 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:26:10,674 p=1787 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:26:10,802 p=1787 u=root |  changed: [localhost]
2017-08-16 02:26:10,809 p=1787 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:26:10,832 p=1787 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.007138", 
        "end": "2017-08-16 02:26:10.784706", 
        "rc": 0, 
        "start": "2017-08-16 02:26:10.777568", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:26:10,841 p=1787 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:26:10,859 p=1787 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'image_tag not in tar_tag' failed. The error was: Unexpected templating type error occurred on ({% if image_tag not in tar_tag %} True {% else %} False {% endif %}): unhashable type: 'dict'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:26:10,860 p=1787 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:26:10,860 p=1787 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:26:10,861 p=1787 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:27:18,055 p=1874 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:27:18,056 p=1874 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:27:18,191 p=1874 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:27:18,250 p=1874 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:27:18,799 p=1874 u=root |  ok: [localhost]
2017-08-16 02:27:18,803 p=1874 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:27:19,080 p=1874 u=root |  changed: [localhost]
2017-08-16 02:27:19,085 p=1874 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:27:19,107 p=1874 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:27:19,112 p=1874 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:27:19,226 p=1874 u=root |  changed: [localhost]
2017-08-16 02:27:19,232 p=1874 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:27:19,256 p=1874 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005057", 
        "end": "2017-08-16 02:27:19.212682", 
        "rc": 0, 
        "start": "2017-08-16 02:27:19.207625", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:27:19,262 p=1874 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:27:19,281 p=1874 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'image_tag not in tar_tag' failed. The error was: Unexpected templating type error occurred on ({% if image_tag not in tar_tag %} True {% else %} False {% endif %}): unhashable type: 'dict'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:27:19,282 p=1874 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:27:19,283 p=1874 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:27:19,283 p=1874 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:27:50,174 p=1961 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:27:50,177 p=1961 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:27:50,297 p=1961 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:27:50,360 p=1961 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:27:50,906 p=1961 u=root |  ok: [localhost]
2017-08-16 02:27:50,911 p=1961 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:27:51,193 p=1961 u=root |  changed: [localhost]
2017-08-16 02:27:51,199 p=1961 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:27:51,221 p=1961 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:27:51,226 p=1961 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:27:51,351 p=1961 u=root |  changed: [localhost]
2017-08-16 02:27:51,358 p=1961 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:27:51,388 p=1961 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005914", 
        "end": "2017-08-16 02:27:51.336766", 
        "rc": 0, 
        "start": "2017-08-16 02:27:51.330852", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:27:51,393 p=1961 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:27:51,407 p=1961 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ image_tag }} not in {{ tar_tag }}

2017-08-16 02:27:51,419 p=1961 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ image_tag }} not in {{ tar_tag }}' failed. The error was: template error while templating string: expected token ':', got 'string'. String: {% if {'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:27:51.174612', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-16 02:27:51.099184', u'stderr': u'', u'delta': u'0:00:00.075428', 'stdout_lines': [u'v1.0.0']} not in {'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:27:51.336766', u'stdout': u'slmpuppet-v1.0.0.tar.bz2', u'cmd': u\"ls //depot | grep 'slmpuppet.*.tar.bz2'\", u'rc': 0, u'start': u'2017-08-16 02:27:51.330852', u'stderr': u'', u'delta': u'0:00:00.005914', 'stdout_lines': [u'slmpuppet-v1.0.0.tar.bz2']} %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:27:51,420 p=1961 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:27:51,420 p=1961 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:27:51,420 p=1961 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:28:46,063 p=2048 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:28:46,064 p=2048 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:28:46,186 p=2048 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:28:46,246 p=2048 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:28:46,787 p=2048 u=root |  ok: [localhost]
2017-08-16 02:28:46,792 p=2048 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:28:47,068 p=2048 u=root |  changed: [localhost]
2017-08-16 02:28:47,073 p=2048 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:28:47,095 p=2048 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:28:47,103 p=2048 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:28:47,216 p=2048 u=root |  changed: [localhost]
2017-08-16 02:28:47,221 p=2048 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:28:47,252 p=2048 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005170", 
        "end": "2017-08-16 02:28:47.201917", 
        "rc": 0, 
        "start": "2017-08-16 02:28:47.196747", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:28:47,261 p=2048 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:28:47,274 p=2048 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: "{{image_tag }} not in {{ tar_tag }}"

2017-08-16 02:28:47,280 p=2048 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '\"{{image_tag }} not in {{ tar_tag }}\"' failed. The error was: Invalid conditional detected: invalid syntax (<unknown>, line 1)\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:28:47,281 p=2048 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:28:47,281 p=2048 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:28:47,281 p=2048 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:29:07,221 p=2135 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:29:07,222 p=2135 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:29:07,232 p=2135 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 47, column 30, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        dest: /tmp/
      when: "{{image_tag }}" not in "{{ tar_tag }}"
                             ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 02:29:44,859 p=2145 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:29:44,860 p=2145 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:29:44,987 p=2145 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:29:45,047 p=2145 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:29:45,601 p=2145 u=root |  ok: [localhost]
2017-08-16 02:29:45,606 p=2145 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:29:45,879 p=2145 u=root |  changed: [localhost]
2017-08-16 02:29:45,883 p=2145 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:29:45,904 p=2145 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:29:45,910 p=2145 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:29:46,036 p=2145 u=root |  changed: [localhost]
2017-08-16 02:29:46,041 p=2145 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:29:46,066 p=2145 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.006563", 
        "end": "2017-08-16 02:29:46.021900", 
        "rc": 0, 
        "start": "2017-08-16 02:29:46.015337", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:29:46,074 p=2145 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:29:46,088 p=2145 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: "{{image_tag }}" not in "{{ tar_tag }}"

2017-08-16 02:29:46,094 p=2145 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '\"{{image_tag }}\" not in \"{{ tar_tag }}\"' failed. The error was: Invalid conditional detected: invalid syntax (<unknown>, line 1)\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:29:46,096 p=2145 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:29:46,096 p=2145 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:29:46,096 p=2145 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:30:17,127 p=2232 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:30:17,129 p=2232 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:30:17,242 p=2232 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:30:17,294 p=2232 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:30:17,819 p=2232 u=root |  ok: [localhost]
2017-08-16 02:30:17,824 p=2232 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:30:18,098 p=2232 u=root |  changed: [localhost]
2017-08-16 02:30:18,103 p=2232 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:30:18,129 p=2232 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:30:18,134 p=2232 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:30:18,267 p=2232 u=root |  changed: [localhost]
2017-08-16 02:30:18,275 p=2232 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:30:18,304 p=2232 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005228", 
        "end": "2017-08-16 02:30:18.248130", 
        "rc": 0, 
        "start": "2017-08-16 02:30:18.242902", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:30:18,311 p=2232 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:30:18,327 p=2232 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ image_tag }} not in {{ tar_tag }}

2017-08-16 02:30:18,336 p=2232 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ image_tag }} not in {{ tar_tag }}' failed. The error was: template error while templating string: expected token ':', got 'string'. String: {% if {'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:30:18.082924', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-16 02:30:18.006639', u'stderr': u'', u'delta': u'0:00:00.076285', 'stdout_lines': [u'v1.0.0']} not in {'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:30:18.248130', u'stdout': u'slmpuppet-v1.0.0.tar.bz2', u'cmd': u\"ls //depot | grep 'slmpuppet.*.tar.bz2'\", u'rc': 0, u'start': u'2017-08-16 02:30:18.242902', u'stderr': u'', u'delta': u'0:00:00.005228', 'stdout_lines': [u'slmpuppet-v1.0.0.tar.bz2']} %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:30:18,337 p=2232 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:30:18,337 p=2232 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:30:18,338 p=2232 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:30:50,447 p=2319 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:30:50,448 p=2319 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:30:50,561 p=2319 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:30:50,622 p=2319 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:30:51,167 p=2319 u=root |  ok: [localhost]
2017-08-16 02:30:51,173 p=2319 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:30:51,452 p=2319 u=root |  changed: [localhost]
2017-08-16 02:30:51,459 p=2319 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:30:51,480 p=2319 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:30:51,488 p=2319 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:30:51,614 p=2319 u=root |  changed: [localhost]
2017-08-16 02:30:51,619 p=2319 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:30:51,646 p=2319 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.006031", 
        "end": "2017-08-16 02:30:51.597350", 
        "rc": 0, 
        "start": "2017-08-16 02:30:51.591319", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:30:51,657 p=2319 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:30:51,674 p=2319 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ image_tag }} not in {{ tar_tag.stdout }}

2017-08-16 02:30:51,681 p=2319 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ image_tag }} not in {{ tar_tag.stdout }}' failed. The error was: Invalid conditional detected: invalid syntax (<unknown>, line 1)\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:30:51,683 p=2319 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:30:51,683 p=2319 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:30:51,683 p=2319 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:31:24,188 p=2406 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:31:24,189 p=2406 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:31:24,314 p=2406 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:31:24,370 p=2406 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:31:24,899 p=2406 u=root |  ok: [localhost]
2017-08-16 02:31:24,904 p=2406 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:31:25,177 p=2406 u=root |  changed: [localhost]
2017-08-16 02:31:25,182 p=2406 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:31:25,206 p=2406 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:31:25,211 p=2406 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:31:25,331 p=2406 u=root |  changed: [localhost]
2017-08-16 02:31:25,336 p=2406 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:31:25,357 p=2406 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.006261", 
        "end": "2017-08-16 02:31:25.314545", 
        "rc": 0, 
        "start": "2017-08-16 02:31:25.308284", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:31:25,367 p=2406 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:31:25,384 p=2406 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ image_tag }} not in "{{ tar_tag.stdout }}"

2017-08-16 02:31:25,392 p=2406 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ image_tag }} not in \"{{ tar_tag.stdout }}\"' failed. The error was: template error while templating string: expected token ':', got 'string'. String: {% if {'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:31:25.160004', u'stdout': u'v1.0.0', u'cmd': u'docker images | grep \"^slmpuppet\" | awk \\'{print $2;}\\'', u'rc': 0, u'start': u'2017-08-16 02:31:25.083399', u'stderr': u'', u'delta': u'0:00:00.076605', 'stdout_lines': [u'v1.0.0']} not in \"slmpuppet-v1.0.0.tar.bz2\" %} True {% else %} False {% endif %}\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:31:25,393 p=2406 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:31:25,394 p=2406 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:31:25,394 p=2406 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:35:08,611 p=2494 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:35:08,614 p=2494 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:35:08,737 p=2494 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:35:08,793 p=2494 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:35:09,326 p=2494 u=root |  ok: [localhost]
2017-08-16 02:35:09,331 p=2494 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:35:09,607 p=2494 u=root |  changed: [localhost]
2017-08-16 02:35:09,611 p=2494 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:35:09,631 p=2494 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:35:09,638 p=2494 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:35:09,763 p=2494 u=root |  changed: [localhost]
2017-08-16 02:35:09,769 p=2494 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:35:09,795 p=2494 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.004956", 
        "end": "2017-08-16 02:35:09.747749", 
        "rc": 0, 
        "start": "2017-08-16 02:35:09.742793", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:35:09,803 p=2494 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:35:09,816 p=2494 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: "{{ image_tag }}" not in tar_tag.stdout

2017-08-16 02:35:09,821 p=2494 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '\"{{ image_tag }}\" not in tar_tag.stdout' failed. The error was: Invalid conditional detected: invalid syntax (<unknown>, line 1)\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 43, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Copy the new {{ image }} tar bzip file to /tmp\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 02:35:09,822 p=2494 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:35:09,822 p=2494 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:35:09,822 p=2494 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:35:56,534 p=2581 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:35:56,536 p=2581 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:35:56,655 p=2581 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:35:56,707 p=2581 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:35:57,243 p=2581 u=root |  ok: [localhost]
2017-08-16 02:35:57,248 p=2581 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:35:57,510 p=2581 u=root |  changed: [localhost]
2017-08-16 02:35:57,516 p=2581 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:35:57,545 p=2581 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:35:57,551 p=2581 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:35:57,682 p=2581 u=root |  changed: [localhost]
2017-08-16 02:35:57,687 p=2581 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:35:57,712 p=2581 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.006954", 
        "end": "2017-08-16 02:35:57.668780", 
        "rc": 0, 
        "start": "2017-08-16 02:35:57.661826", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:35:57,721 p=2581 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:35:57,748 p=2581 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/{'stderr_lines': [], u'changed': True, u'end': u'2017-08-16 02:35:57.668780', u'stdout': u'slmpuppet-v1.0.0.tar.bz2', u'cmd': u\"ls //depot | grep 'slmpuppet.*.tar.bz2'\", u'rc': 0, u'start': u'2017-08-16 02:35:57.661826', u'stderr': u'', u'delta': u'0:00:00.006954', 'stdout_lines': [u'slmpuppet-v1.0.0.tar.bz2']}' in expected paths."}
2017-08-16 02:35:57,750 p=2581 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:35:57,750 p=2581 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:35:57,750 p=2581 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 02:37:07,705 p=2669 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:37:07,707 p=2669 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:37:07,819 p=2669 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:37:07,879 p=2669 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:37:08,416 p=2669 u=root |  ok: [localhost]
2017-08-16 02:37:08,422 p=2669 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:37:08,694 p=2669 u=root |  changed: [localhost]
2017-08-16 02:37:08,698 p=2669 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:37:08,717 p=2669 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:37:08,722 p=2669 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:37:08,851 p=2669 u=root |  changed: [localhost]
2017-08-16 02:37:08,856 p=2669 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:37:08,877 p=2669 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005935", 
        "end": "2017-08-16 02:37:08.835561", 
        "rc": 0, 
        "start": "2017-08-16 02:37:08.829626", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:37:08,885 p=2669 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:37:10,158 p=2669 u=root |  ok: [localhost]
2017-08-16 02:37:10,163 p=2669 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 02:37:10,326 p=2669 u=root |  changed: [localhost]
2017-08-16 02:37:10,330 p=2669 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 02:37:10,350 p=2669 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", 
        "delta": "0:00:00.038623", 
        "end": "2017-08-16 02:37:10.312355", 
        "rc": 0, 
        "start": "2017-08-16 02:37:10.273732", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\ne5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES", 
            "e5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser"
        ]
    }
}
2017-08-16 02:37:10,351 p=2669 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:37:10,351 p=2669 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-16 02:37:45,535 p=2781 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:37:45,536 p=2781 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:37:45,653 p=2781 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:37:45,707 p=2781 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:37:46,256 p=2781 u=root |  ok: [localhost]
2017-08-16 02:37:46,261 p=2781 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:37:46,539 p=2781 u=root |  changed: [localhost]
2017-08-16 02:37:46,543 p=2781 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:37:46,569 p=2781 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:37:46,574 p=2781 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:37:46,695 p=2781 u=root |  changed: [localhost]
2017-08-16 02:37:46,700 p=2781 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:37:46,726 p=2781 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005354", 
        "end": "2017-08-16 02:37:46.680446", 
        "rc": 0, 
        "start": "2017-08-16 02:37:46.675092", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:37:46,733 p=2781 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:37:48,062 p=2781 u=root |  changed: [localhost]
2017-08-16 02:37:48,068 p=2781 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 02:37:48,235 p=2781 u=root |  changed: [localhost]
2017-08-16 02:37:48,242 p=2781 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 02:37:48,266 p=2781 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", 
        "delta": "0:00:00.041118", 
        "end": "2017-08-16 02:37:48.220413", 
        "rc": 0, 
        "start": "2017-08-16 02:37:48.179295", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\ne5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES", 
            "e5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser"
        ]
    }
}
2017-08-16 02:37:48,269 p=2781 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:37:48,269 p=2781 u=root |  localhost                  : ok=8    changed=4    unreachable=0    failed=0   
2017-08-16 02:38:58,336 p=2902 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:38:58,337 p=2902 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:38:58,454 p=2902 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:38:58,509 p=2902 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:38:59,103 p=2902 u=root |  ok: [localhost]
2017-08-16 02:38:59,108 p=2902 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:38:59,379 p=2902 u=root |  changed: [localhost]
2017-08-16 02:38:59,385 p=2902 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:38:59,411 p=2902 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:38:59,417 p=2902 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:38:59,537 p=2902 u=root |  changed: [localhost]
2017-08-16 02:38:59,543 p=2902 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:38:59,565 p=2902 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005005", 
        "end": "2017-08-16 02:38:59.524348", 
        "rc": 0, 
        "start": "2017-08-16 02:38:59.519343", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:38:59,573 p=2902 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:39:00,430 p=2902 u=root |  ok: [localhost]
2017-08-16 02:39:00,435 p=2902 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 02:39:00,603 p=2902 u=root |  changed: [localhost]
2017-08-16 02:39:00,608 p=2902 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 02:39:00,633 p=2902 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", 
        "delta": "0:00:00.042656", 
        "end": "2017-08-16 02:39:00.588633", 
        "rc": 0, 
        "start": "2017-08-16 02:39:00.545977", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\ne5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser", 
        "stdout_lines": [
            "CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES", 
            "e5e0cb40fcd8        slmpuppet:v1.0.0    \"/bin/sh -c 'sudo pup\"   7 hours ago         Up 7 hours          8140/tcp            high_goldwasser"
        ]
    }
}
2017-08-16 02:39:00,634 p=2902 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:39:00,634 p=2902 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-16 02:44:15,755 p=3022 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:44:15,757 p=3022 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:44:15,883 p=3022 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:44:15,941 p=3022 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:44:16,540 p=3022 u=root |  ok: [localhost]
2017-08-16 02:44:16,545 p=3022 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:44:16,812 p=3022 u=root |  changed: [localhost]
2017-08-16 02:44:16,816 p=3022 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:44:16,838 p=3022 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:44:16,845 p=3022 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:44:16,971 p=3022 u=root |  changed: [localhost]
2017-08-16 02:44:16,977 p=3022 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:44:17,000 p=3022 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005961", 
        "end": "2017-08-16 02:44:16.955028", 
        "rc": 0, 
        "start": "2017-08-16 02:44:16.949067", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:44:17,008 p=3022 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:44:17,902 p=3022 u=root |  ok: [localhost]
2017-08-16 02:44:17,907 p=3022 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 02:44:18,084 p=3022 u=root |  changed: [localhost]
2017-08-16 02:44:18,090 p=3022 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 02:44:18,116 p=3022 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\" | awk '{ print $1,$2 }'", 
        "delta": "0:00:00.045154", 
        "end": "2017-08-16 02:44:18.063971", 
        "rc": 0, 
        "start": "2017-08-16 02:44:18.018817", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER ID\ne5e0cb40fcd8 slmpuppet:v1.0.0", 
        "stdout_lines": [
            "CONTAINER ID", 
            "e5e0cb40fcd8 slmpuppet:v1.0.0"
        ]
    }
}
2017-08-16 02:44:18,118 p=3022 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:44:18,118 p=3022 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-16 02:46:09,089 p=3137 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 02:46:09,091 p=3137 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 02:46:09,218 p=3137 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 02:46:09,273 p=3137 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 02:46:09,824 p=3137 u=root |  ok: [localhost]
2017-08-16 02:46:09,829 p=3137 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 02:46:10,099 p=3137 u=root |  changed: [localhost]
2017-08-16 02:46:10,104 p=3137 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 02:46:10,127 p=3137 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 02:46:10,133 p=3137 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 02:46:10,253 p=3137 u=root |  changed: [localhost]
2017-08-16 02:46:10,259 p=3137 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 02:46:10,285 p=3137 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005049", 
        "end": "2017-08-16 02:46:10.238685", 
        "rc": 0, 
        "start": "2017-08-16 02:46:10.233636", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 02:46:10,290 p=3137 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 02:46:11,182 p=3137 u=root |  ok: [localhost]
2017-08-16 02:46:11,187 p=3137 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 02:46:11,438 p=3137 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\" | awk '{ print $1 }' | xargs -I {} docker rm {}", "delta": "0:00:00.126204", "end": "2017-08-16 02:46:11.423621", "failed": true, "rc": 123, "start": "2017-08-16 02:46:11.297417", "stderr": "Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER\nFailed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f", "stderr_lines": ["Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER", "Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f"], "stdout": "", "stdout_lines": []}
2017-08-16 02:46:11,440 p=3137 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 02:46:11,440 p=3137 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 02:46:11,441 p=3137 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:34:45,803 p=3321 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:34:45,804 p=3321 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:34:45,936 p=3321 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:34:45,995 p=3321 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:34:46,587 p=3321 u=root |  ok: [localhost]
2017-08-16 03:34:46,593 p=3321 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:34:46,878 p=3321 u=root |  changed: [localhost]
2017-08-16 03:34:46,884 p=3321 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:34:46,917 p=3321 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:34:46,921 p=3321 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:34:47,048 p=3321 u=root |  changed: [localhost]
2017-08-16 03:34:47,054 p=3321 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:34:47,077 p=3321 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005273", 
        "end": "2017-08-16 03:34:47.034521", 
        "rc": 0, 
        "start": "2017-08-16 03:34:47.029248", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:34:47,085 p=3321 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:34:48,027 p=3321 u=root |  ok: [localhost]
2017-08-16 03:34:48,032 p=3321 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:34:48,191 p=3321 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker stop 'docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"'", "delta": "0:00:00.045749", "end": "2017-08-16 03:34:48.177380", "failed": true, "rc": 1, "start": "2017-08-16 03:34:48.131631", "stderr": "Failed to stop container (docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", "stderr_lines": ["Failed to stop container (docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\""], "stdout": "", "stdout_lines": []}
2017-08-16 03:34:48,192 p=3321 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:34:48,192 p=3321 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:34:48,192 p=3321 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:35:28,770 p=3431 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:35:28,772 p=3431 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:35:28,894 p=3431 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:35:28,951 p=3431 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:35:29,541 p=3431 u=root |  ok: [localhost]
2017-08-16 03:35:29,546 p=3431 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:35:29,835 p=3431 u=root |  changed: [localhost]
2017-08-16 03:35:29,841 p=3431 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:35:29,861 p=3431 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:35:29,866 p=3431 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:35:29,982 p=3431 u=root |  changed: [localhost]
2017-08-16 03:35:29,987 p=3431 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:35:30,013 p=3431 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005163", 
        "end": "2017-08-16 03:35:29.967350", 
        "rc": 0, 
        "start": "2017-08-16 03:35:29.962187", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:35:30,019 p=3431 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:35:30,876 p=3431 u=root |  ok: [localhost]
2017-08-16 03:35:30,881 p=3431 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:35:31,044 p=3431 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker stop 'docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"'", "delta": "0:00:00.044005", "end": "2017-08-16 03:35:31.028750", "failed": true, "rc": 1, "start": "2017-08-16 03:35:30.984745", "stderr": "Failed to stop container (docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"", "stderr_lines": ["Failed to stop container (docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet\":\"v1.0.0\""], "stdout": "", "stdout_lines": []}
2017-08-16 03:35:31,045 p=3431 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:35:31,045 p=3431 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:35:31,045 p=3431 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:37:02,319 p=3547 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:37:02,320 p=3547 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:37:02,440 p=3547 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:37:02,500 p=3547 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:37:03,077 p=3547 u=root |  ok: [localhost]
2017-08-16 03:37:03,082 p=3547 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:37:03,350 p=3547 u=root |  changed: [localhost]
2017-08-16 03:37:03,354 p=3547 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:37:03,382 p=3547 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:37:03,387 p=3547 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:37:03,509 p=3547 u=root |  changed: [localhost]
2017-08-16 03:37:03,514 p=3547 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:37:03,537 p=3547 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.004949", 
        "end": "2017-08-16 03:37:03.495932", 
        "rc": 0, 
        "start": "2017-08-16 03:37:03.490983", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:37:03,546 p=3547 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:37:04,405 p=3547 u=root |  ok: [localhost]
2017-08-16 03:37:04,412 p=3547 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:37:04,579 p=3547 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker stop 'docker ps -f ancestor=\"slmpuppet:v1.0.0\"'", "delta": "0:00:00.046985", "end": "2017-08-16 03:37:04.564994", "failed": true, "rc": 1, "start": "2017-08-16 03:37:04.518009", "stderr": "Failed to stop container (docker ps -f ancestor=\"slmpuppet:v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet:v1.0.0\"", "stderr_lines": ["Failed to stop container (docker ps -f ancestor=\"slmpuppet:v1.0.0\"): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet:v1.0.0\""], "stdout": "", "stdout_lines": []}
2017-08-16 03:37:04,581 p=3547 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:37:04,581 p=3547 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:37:04,581 p=3547 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:38:35,486 p=3654 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:38:35,487 p=3654 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:38:35,625 p=3654 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:38:35,680 p=3654 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:38:36,242 p=3654 u=root |  ok: [localhost]
2017-08-16 03:38:36,249 p=3654 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:38:36,531 p=3654 u=root |  changed: [localhost]
2017-08-16 03:38:36,537 p=3654 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:38:36,558 p=3654 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:38:36,564 p=3654 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:38:36,691 p=3654 u=root |  changed: [localhost]
2017-08-16 03:38:36,696 p=3654 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:38:36,722 p=3654 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.004814", 
        "end": "2017-08-16 03:38:36.673879", 
        "rc": 0, 
        "start": "2017-08-16 03:38:36.669065", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:38:36,730 p=3654 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:38:37,596 p=3654 u=root |  ok: [localhost]
2017-08-16 03:38:37,601 p=3654 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:38:37,778 p=3654 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker stop 'docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk '{print $1}''", "delta": "0:00:00.052261", "end": "2017-08-16 03:38:37.762783", "failed": true, "rc": 1, "start": "2017-08-16 03:38:37.710522", "stderr": "Failed to stop container (docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk {print): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk {print\nFailed to stop container (}): Error response from daemon: No such container: }", "stderr_lines": ["Failed to stop container (docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk {print): Error response from daemon: No such container: docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk {print", "Failed to stop container (}): Error response from daemon: No such container: }"], "stdout": "", "stdout_lines": []}
2017-08-16 03:38:37,779 p=3654 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:38:37,779 p=3654 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:38:37,779 p=3654 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:40:11,199 p=3761 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:40:11,201 p=3761 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:40:11,321 p=3761 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:40:11,373 p=3761 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:40:11,917 p=3761 u=root |  ok: [localhost]
2017-08-16 03:40:11,923 p=3761 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:40:12,183 p=3761 u=root |  changed: [localhost]
2017-08-16 03:40:12,187 p=3761 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:40:12,213 p=3761 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:40:12,219 p=3761 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:40:12,349 p=3761 u=root |  changed: [localhost]
2017-08-16 03:40:12,354 p=3761 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:40:12,380 p=3761 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005208", 
        "end": "2017-08-16 03:40:12.331774", 
        "rc": 0, 
        "start": "2017-08-16 03:40:12.326566", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:40:12,388 p=3761 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:40:13,258 p=3761 u=root |  ok: [localhost]
2017-08-16 03:40:13,264 p=3761 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:40:13,428 p=3761 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker stop 'docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{print $1}''", "delta": "0:00:00.040417", "end": "2017-08-16 03:40:13.412590", "failed": true, "rc": 1, "start": "2017-08-16 03:40:13.372173", "stderr": "Failed to stop container (docker ps -f ancestor=slmpuppet:v1.0.0 | awk {print): Error response from daemon: No such container: docker ps -f ancestor=slmpuppet:v1.0.0 | awk {print\nFailed to stop container (}): Error response from daemon: No such container: }", "stderr_lines": ["Failed to stop container (docker ps -f ancestor=slmpuppet:v1.0.0 | awk {print): Error response from daemon: No such container: docker ps -f ancestor=slmpuppet:v1.0.0 | awk {print", "Failed to stop container (}): Error response from daemon: No such container: }"], "stdout": "", "stdout_lines": []}
2017-08-16 03:40:13,430 p=3761 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:40:13,430 p=3761 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:40:13,430 p=3761 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 03:43:45,948 p=3869 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:43:45,951 p=3869 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:43:46,082 p=3869 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:43:46,133 p=3869 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:43:46,695 p=3869 u=root |  ok: [localhost]
2017-08-16 03:43:46,700 p=3869 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:43:46,982 p=3869 u=root |  changed: [localhost]
2017-08-16 03:43:46,986 p=3869 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:43:47,014 p=3869 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:43:47,020 p=3869 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:43:47,136 p=3869 u=root |  changed: [localhost]
2017-08-16 03:43:47,141 p=3869 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:43:47,169 p=3869 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005034", 
        "end": "2017-08-16 03:43:47.122756", 
        "rc": 0, 
        "start": "2017-08-16 03:43:47.117722", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:43:47,174 p=3869 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:43:48,086 p=3869 u=root |  ok: [localhost]
2017-08-16 03:43:48,092 p=3869 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 03:43:48,245 p=3869 u=root |  changed: [localhost]
2017-08-16 03:43:48,249 p=3869 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 03:43:48,273 p=3869 u=root |  ok: [localhost] => {
    "container": {
        "changed": true, 
        "cmd": "docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{print $1}'", 
        "delta": "0:00:00.039549", 
        "end": "2017-08-16 03:43:48.229999", 
        "rc": 0, 
        "start": "2017-08-16 03:43:48.190450", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "CONTAINER\ne5e0cb40fcd8", 
        "stdout_lines": [
            "CONTAINER", 
            "e5e0cb40fcd8"
        ]
    }
}
2017-08-16 03:43:48,274 p=3869 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:43:48,275 p=3869 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-16 03:54:31,977 p=3985 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 03:54:31,979 p=3985 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 03:54:32,105 p=3985 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 03:54:32,171 p=3985 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 03:54:32,999 p=3985 u=root |  ok: [localhost]
2017-08-16 03:54:33,004 p=3985 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 03:54:33,366 p=3985 u=root |  changed: [localhost]
2017-08-16 03:54:33,371 p=3985 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 03:54:33,393 p=3985 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 03:54:33,398 p=3985 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 03:54:33,520 p=3985 u=root |  changed: [localhost]
2017-08-16 03:54:33,525 p=3985 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 03:54:33,549 p=3985 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005210", 
        "end": "2017-08-16 03:54:33.507065", 
        "rc": 0, 
        "start": "2017-08-16 03:54:33.501855", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 03:54:33,557 p=3985 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 03:54:34,459 p=3985 u=root |  ok: [localhost]
2017-08-16 03:54:34,464 p=3985 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-16 03:54:34,677 p=3985 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet | awk '{print $1 }' | xargs -I {} docker rm {}", "delta": "0:00:00.087990", "end": "2017-08-16 03:54:34.662449", "failed": true, "rc": 123, "start": "2017-08-16 03:54:34.574459", "stderr": "Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f", "stderr_lines": ["Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f"], "stdout": "", "stdout_lines": []}
2017-08-16 03:54:34,679 p=3985 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 03:54:34,679 p=3985 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 03:54:34,679 p=3985 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 10:11:51,462 p=4490 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 10:11:51,464 p=4490 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 10:11:51,629 p=4490 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 10:11:51,731 p=4490 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 10:11:54,867 p=4490 u=root |  ok: [localhost]
2017-08-16 10:11:54,873 p=4490 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 10:11:56,391 p=4490 u=root |  changed: [localhost]
2017-08-16 10:11:56,395 p=4490 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 10:11:56,424 p=4490 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 10:11:56,425 p=4490 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 10:11:56,425 p=4490 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-16 10:12:39,031 p=4564 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 10:12:39,032 p=4564 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 10:12:39,157 p=4564 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 10:12:39,217 p=4564 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 10:12:39,803 p=4564 u=root |  ok: [localhost]
2017-08-16 10:12:39,808 p=4564 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 10:12:40,090 p=4564 u=root |  changed: [localhost]
2017-08-16 10:12:40,094 p=4564 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 10:12:40,116 p=4564 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 10:12:40,121 p=4564 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 10:12:40,319 p=4564 u=root |  changed: [localhost]
2017-08-16 10:12:40,324 p=4564 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 10:12:40,347 p=4564 u=root |  ok: [localhost] => {
    "image_tag2.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 10:12:40,348 p=4564 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 10:12:40,349 p=4564 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 10:14:26,830 p=4653 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 10:14:26,831 p=4653 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 10:14:26,844 p=4653 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 26, column 6, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      shell: ls /{{ zip_dir }} | grep '{{ image }}.*.tar.bz2'
     shell: ls /{{ zip_dir }} | grep {{ image_tag.stdout }} | awk -F'[-.]' '{print $1 "-" $2 "." $3 "." $4}'
     ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 10:14:36,290 p=4662 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 10:14:36,292 p=4662 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 10:14:36,411 p=4662 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 10:14:36,470 p=4662 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 10:14:37,059 p=4662 u=root |  ok: [localhost]
2017-08-16 10:14:37,065 p=4662 u=root |  TASK [Get image tag for new slmpuppet tar bzip file] **********************************************************************************************************************************
2017-08-16 10:14:37,268 p=4662 u=root |  changed: [localhost]
2017-08-16 10:14:37,276 p=4662 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 10:14:37,299 p=4662 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.007412", 
        "end": "2017-08-16 10:14:37.252400", 
        "rc": 0, 
        "start": "2017-08-16 10:14:37.244988", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 10:14:37,300 p=4662 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 10:14:37,300 p=4662 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-16 13:27:59,435 p=4833 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:27:59,436 p=4833 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:27:59,575 p=4833 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:27:59,638 p=4833 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:28:00,735 p=4833 u=root |  ok: [localhost]
2017-08-16 13:28:00,741 p=4833 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:28:00,939 p=4833 u=root |  changed: [localhost]
2017-08-16 13:28:00,946 p=4833 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:28:00,971 p=4833 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.004822", 
        "end": "2017-08-16 13:28:00.925466", 
        "rc": 0, 
        "start": "2017-08-16 13:28:00.920644", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:28:00,976 p=4833 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:28:01,176 p=4833 u=root |  changed: [localhost]
2017-08-16 13:28:01,180 p=4833 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:28:01,201 p=4833 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:28:01,203 p=4833 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:28:01,203 p=4833 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 13:35:19,474 p=4920 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:35:19,475 p=4920 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:35:19,600 p=4920 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:35:19,663 p=4920 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:35:20,241 p=4920 u=root |  ok: [localhost]
2017-08-16 13:35:20,248 p=4920 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:35:20,443 p=4920 u=root |  changed: [localhost]
2017-08-16 13:35:20,449 p=4920 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:35:20,474 p=4920 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.006105", 
        "end": "2017-08-16 13:35:20.427926", 
        "rc": 0, 
        "start": "2017-08-16 13:35:20.421821", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:35:20,480 p=4920 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:35:20,690 p=4920 u=root |  changed: [localhost]
2017-08-16 13:35:20,694 p=4920 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:35:20,713 p=4920 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:35:20,721 p=4920 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:35:22,074 p=4920 u=root |  ok: [localhost]
2017-08-16 13:35:22,076 p=4920 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:35:22,077 p=4920 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:35:40,822 p=5018 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:35:40,823 p=5018 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:35:40,944 p=5018 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:35:41,005 p=5018 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:35:41,564 p=5018 u=root |  ok: [localhost]
2017-08-16 13:35:41,569 p=5018 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:35:41,773 p=5018 u=root |  changed: [localhost]
2017-08-16 13:35:41,779 p=5018 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:35:41,806 p=5018 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005076", 
        "end": "2017-08-16 13:35:41.759097", 
        "rc": 0, 
        "start": "2017-08-16 13:35:41.754021", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:35:41,813 p=5018 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:35:42,004 p=5018 u=root |  changed: [localhost]
2017-08-16 13:35:42,008 p=5018 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:35:42,033 p=5018 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:35:42,038 p=5018 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:35:43,286 p=5018 u=root |  changed: [localhost]
2017-08-16 13:35:43,287 p=5018 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:35:43,288 p=5018 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=0   
2017-08-16 13:39:57,900 p=5127 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:39:57,902 p=5127 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:39:57,953 p=5127 u=root |  ERROR! A malformed block was encountered.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 52, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - block:
      ^ here

2017-08-16 13:40:48,737 p=5136 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:40:48,739 p=5136 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:40:48,864 p=5136 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:40:48,923 p=5136 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:40:49,508 p=5136 u=root |  ok: [localhost]
2017-08-16 13:40:49,515 p=5136 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:40:49,730 p=5136 u=root |  changed: [localhost]
2017-08-16 13:40:49,735 p=5136 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:40:49,759 p=5136 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.009065", 
        "end": "2017-08-16 13:40:49.715789", 
        "rc": 0, 
        "start": "2017-08-16 13:40:49.706724", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:40:49,766 p=5136 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:40:49,973 p=5136 u=root |  changed: [localhost]
2017-08-16 13:40:49,980 p=5136 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:40:50,004 p=5136 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:40:50,009 p=5136 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:40:50,870 p=5136 u=root |  ok: [localhost]
2017-08-16 13:40:50,872 p=5136 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:40:50,872 p=5136 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:41:54,446 p=5234 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:41:54,448 p=5234 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:41:54,557 p=5234 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:41:54,614 p=5234 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:41:55,152 p=5234 u=root |  ok: [localhost]
2017-08-16 13:41:55,158 p=5234 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:41:55,362 p=5234 u=root |  changed: [localhost]
2017-08-16 13:41:55,367 p=5234 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:41:55,393 p=5234 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.004892", 
        "end": "2017-08-16 13:41:55.347441", 
        "rc": 0, 
        "start": "2017-08-16 13:41:55.342549", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:41:55,401 p=5234 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:41:55,609 p=5234 u=root |  changed: [localhost]
2017-08-16 13:41:55,614 p=5234 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:41:55,639 p=5234 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:41:55,644 p=5234 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:41:56,505 p=5234 u=root |  ok: [localhost]
2017-08-16 13:41:56,506 p=5234 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:41:56,506 p=5234 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:44:38,036 p=5336 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:44:38,037 p=5336 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:44:38,166 p=5336 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:44:38,224 p=5336 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:44:38,776 p=5336 u=root |  ok: [localhost]
2017-08-16 13:44:38,783 p=5336 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:44:38,992 p=5336 u=root |  changed: [localhost]
2017-08-16 13:44:38,998 p=5336 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:44:39,023 p=5336 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.015349", 
        "end": "2017-08-16 13:44:38.977789", 
        "rc": 0, 
        "start": "2017-08-16 13:44:38.962440", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:44:39,035 p=5336 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:44:39,234 p=5336 u=root |  changed: [localhost]
2017-08-16 13:44:39,239 p=5336 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:44:39,262 p=5336 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:44:39,267 p=5336 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:44:39,279 p=5336 u=root |   [WARNING]: when statements should not include jinja2 templating delimiters such as {{ }} or {% %}. Found: {{ image }} and "image_tag" not in tar_tag.stdout

2017-08-16 13:44:39,291 p=5336 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check '{{ image }} and \"image_tag\" not in tar_tag.stdout' failed. The error was: error while evaluating conditional ({{ image }} and \"image_tag\" not in tar_tag.stdout): 'slmpuppet' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 55, column 11, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n        - name: Copy the new {{ image }} tar bzip file to /tmp\n          ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-16 13:44:39,293 p=5336 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 13:44:39,293 p=5336 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:44:39,293 p=5336 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 13:45:00,160 p=5423 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:45:00,162 p=5423 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:45:00,290 p=5423 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:45:00,348 p=5423 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:45:00,902 p=5423 u=root |  ok: [localhost]
2017-08-16 13:45:00,907 p=5423 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:45:01,113 p=5423 u=root |  changed: [localhost]
2017-08-16 13:45:01,119 p=5423 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:45:01,142 p=5423 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005384", 
        "end": "2017-08-16 13:45:01.098008", 
        "rc": 0, 
        "start": "2017-08-16 13:45:01.092624", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:45:01,147 p=5423 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:45:01,336 p=5423 u=root |  changed: [localhost]
2017-08-16 13:45:01,341 p=5423 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:45:01,369 p=5423 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:45:01,376 p=5423 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:45:02,249 p=5423 u=root |  ok: [localhost]
2017-08-16 13:45:02,251 p=5423 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:45:02,251 p=5423 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:46:20,364 p=5520 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:46:20,367 p=5520 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:46:20,496 p=5520 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:46:20,556 p=5520 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:46:21,113 p=5520 u=root |  ok: [localhost]
2017-08-16 13:46:21,121 p=5520 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:46:21,326 p=5520 u=root |  changed: [localhost]
2017-08-16 13:46:21,332 p=5520 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:46:21,354 p=5520 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2'", 
        "delta": "0:00:00.005126", 
        "end": "2017-08-16 13:46:21.311434", 
        "rc": 0, 
        "start": "2017-08-16 13:46:21.306308", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:46:21,363 p=5520 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:46:21,563 p=5520 u=root |  changed: [localhost]
2017-08-16 13:46:21,567 p=5520 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:46:21,586 p=5520 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:46:21,595 p=5520 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:46:22,449 p=5520 u=root |  ok: [localhost]
2017-08-16 13:46:22,450 p=5520 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:46:22,450 p=5520 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:48:28,876 p=5618 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:48:28,879 p=5618 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:48:29,003 p=5618 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:48:29,063 p=5618 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:48:29,620 p=5618 u=root |  ok: [localhost]
2017-08-16 13:48:29,625 p=5618 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:48:29,841 p=5618 u=root |  changed: [localhost]
2017-08-16 13:48:29,849 p=5618 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:48:29,875 p=5618 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk '{print $1}'", 
        "delta": "0:00:00.008338", 
        "end": "2017-08-16 13:48:29.825324", 
        "rc": 0, 
        "start": "2017-08-16 13:48:29.816986", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:48:29,881 p=5618 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:48:30,085 p=5618 u=root |  changed: [localhost]
2017-08-16 13:48:30,091 p=5618 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:48:30,112 p=5618 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:48:30,117 p=5618 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:48:30,982 p=5618 u=root |  ok: [localhost]
2017-08-16 13:48:30,984 p=5618 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:48:30,984 p=5618 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:49:05,177 p=5716 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:49:05,179 p=5716 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:49:05,206 p=5716 u=root |  ERROR! failed at splitting arguments, either an unbalanced jinja2 block or quotes: ls /{{ zip_dir }} | grep '{{ image }}

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 24, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: Get the image tag for new {{ image }} tar bzip file
      ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 13:49:18,180 p=5725 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:49:18,182 p=5725 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:49:18,300 p=5725 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:49:18,355 p=5725 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:49:18,893 p=5725 u=root |  ok: [localhost]
2017-08-16 13:49:18,901 p=5725 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:49:19,098 p=5725 u=root |  changed: [localhost]
2017-08-16 13:49:19,104 p=5725 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:49:19,130 p=5725 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep slmpuppet", 
        "delta": "0:00:00.006165", 
        "end": "2017-08-16 13:49:19.081372", 
        "rc": 0, 
        "start": "2017-08-16 13:49:19.075207", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2", 
        "stdout_lines": [
            "docker-slmpuppet", 
            "slmpuppet-v1.0.0.tar.bz2"
        ]
    }
}
2017-08-16 13:49:19,135 p=5725 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:49:19,339 p=5725 u=root |  changed: [localhost]
2017-08-16 13:49:19,344 p=5725 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:49:19,369 p=5725 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:49:19,375 p=5725 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:49:19,400 p=5725 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/docker-slmpuppet\nslmpuppet-v1.0.0.tar.bz2' in expected paths."}
2017-08-16 13:49:19,402 p=5725 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 13:49:19,402 p=5725 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:49:19,402 p=5725 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 13:50:44,773 p=5812 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:50:44,774 p=5812 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:50:44,804 p=5812 u=root |  ERROR! failed at splitting arguments, either an unbalanced jinja2 block or quotes: ls /{{ zip_dir }} | grep {{ image }}.*.tar.bz2' | awk -F'[-.]' '{print $1 "-" $2 "." $3 "." $4}'

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 24, column 7, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


    - name: Get the image tag for new {{ image }} tar bzip file
      ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 13:50:58,695 p=5821 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:50:58,696 p=5821 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:50:58,812 p=5821 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:50:58,871 p=5821 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:50:59,419 p=5821 u=root |  ok: [localhost]
2017-08-16 13:50:59,427 p=5821 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:50:59,633 p=5821 u=root |  changed: [localhost]
2017-08-16 13:50:59,638 p=5821 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:50:59,662 p=5821 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006350", 
        "end": "2017-08-16 13:50:59.618817", 
        "rc": 0, 
        "start": "2017-08-16 13:50:59.612467", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 13:50:59,671 p=5821 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:50:59,869 p=5821 u=root |  changed: [localhost]
2017-08-16 13:50:59,874 p=5821 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:50:59,895 p=5821 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:50:59,900 p=5821 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:50:59,928 p=5821 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0' in expected paths."}
2017-08-16 13:50:59,930 p=5821 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 13:50:59,930 p=5821 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:50:59,930 p=5821 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 13:52:45,420 p=5909 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:52:45,422 p=5909 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:52:45,542 p=5909 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:52:45,601 p=5909 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:52:46,146 p=5909 u=root |  ok: [localhost]
2017-08-16 13:52:46,153 p=5909 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:52:46,361 p=5909 u=root |  changed: [localhost]
2017-08-16 13:52:46,367 p=5909 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:52:46,393 p=5909 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005980", 
        "end": "2017-08-16 13:52:46.343743", 
        "rc": 0, 
        "start": "2017-08-16 13:52:46.337763", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 13:52:46,397 p=5909 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:52:46,598 p=5909 u=root |  changed: [localhost]
2017-08-16 13:52:46,602 p=5909 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:52:46,623 p=5909 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:52:46,628 p=5909 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:52:46,657 p=5909 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/slmpuppet-v1.0.0*' in expected paths."}
2017-08-16 13:52:46,659 p=5909 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 13:52:46,659 p=5909 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:52:46,659 p=5909 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 13:53:18,169 p=5997 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:53:18,171 p=5997 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:53:18,293 p=5997 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:53:18,353 p=5997 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:53:18,915 p=5997 u=root |  ok: [localhost]
2017-08-16 13:53:18,920 p=5997 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:53:19,121 p=5997 u=root |  changed: [localhost]
2017-08-16 13:53:19,127 p=5997 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:53:19,151 p=5997 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006553", 
        "end": "2017-08-16 13:53:19.107035", 
        "rc": 0, 
        "start": "2017-08-16 13:53:19.100482", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 13:53:19,159 p=5997 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:53:19,363 p=5997 u=root |  changed: [localhost]
2017-08-16 13:53:19,367 p=5997 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:53:19,389 p=5997 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:53:19,394 p=5997 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:53:20,297 p=5997 u=root |  ok: [localhost]
2017-08-16 13:53:20,299 p=5997 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:53:20,299 p=5997 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 13:57:34,110 p=6099 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:57:34,111 p=6099 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:57:34,241 p=6099 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:57:34,299 p=6099 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:57:34,891 p=6099 u=root |  ok: [localhost]
2017-08-16 13:57:34,899 p=6099 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:57:35,106 p=6099 u=root |  changed: [localhost]
2017-08-16 13:57:35,112 p=6099 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:57:35,139 p=6099 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009122", 
        "end": "2017-08-16 13:57:35.091603", 
        "rc": 0, 
        "start": "2017-08-16 13:57:35.082481", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 13:57:35,144 p=6099 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:57:35,345 p=6099 u=root |  changed: [localhost]
2017-08-16 13:57:35,350 p=6099 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:57:35,377 p=6099 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 13:57:35,382 p=6099 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:57:35,579 p=6099 u=root |  changed: [localhost]
2017-08-16 13:57:35,584 p=6099 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:57:35,614 p=6099 u=root |  ok: [localhost] => {
    "image_tag2.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 13:57:35,620 p=6099 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:57:36,491 p=6099 u=root |  ok: [localhost]
2017-08-16 13:57:36,493 p=6099 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:57:36,493 p=6099 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-16 13:59:05,383 p=6213 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 13:59:05,385 p=6213 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 13:59:05,511 p=6213 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 13:59:05,568 p=6213 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 13:59:06,125 p=6213 u=root |  ok: [localhost]
2017-08-16 13:59:06,130 p=6213 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 13:59:06,333 p=6213 u=root |  changed: [localhost]
2017-08-16 13:59:06,341 p=6213 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 13:59:06,371 p=6213 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006173", 
        "end": "2017-08-16 13:59:06.315165", 
        "rc": 0, 
        "start": "2017-08-16 13:59:06.308992", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 13:59:06,376 p=6213 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 13:59:06,577 p=6213 u=root |  changed: [localhost]
2017-08-16 13:59:06,581 p=6213 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 13:59:06,606 p=6213 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 13:59:06,610 p=6213 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 13:59:07,457 p=6213 u=root |  ok: [localhost]
2017-08-16 13:59:07,459 p=6213 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 13:59:07,459 p=6213 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 14:00:31,676 p=6312 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:00:31,678 p=6312 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:00:31,795 p=6312 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:00:31,848 p=6312 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:00:32,405 p=6312 u=root |  ok: [localhost]
2017-08-16 14:00:32,410 p=6312 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:00:32,623 p=6312 u=root |  changed: [localhost]
2017-08-16 14:00:32,631 p=6312 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:00:32,663 p=6312 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006086", 
        "end": "2017-08-16 14:00:32.607385", 
        "rc": 0, 
        "start": "2017-08-16 14:00:32.601299", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:00:32,668 p=6312 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:00:32,856 p=6312 u=root |  changed: [localhost]
2017-08-16 14:00:32,861 p=6312 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:00:32,882 p=6312 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:00:32,888 p=6312 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:00:33,733 p=6312 u=root |  ok: [localhost]
2017-08-16 14:00:33,735 p=6312 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:00:33,735 p=6312 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 14:01:00,089 p=6410 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:01:00,091 p=6410 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:01:00,208 p=6410 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:01:00,267 p=6410 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:01:01,268 p=6410 u=root |  ok: [localhost]
2017-08-16 14:01:01,273 p=6410 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:01:01,469 p=6410 u=root |  changed: [localhost]
2017-08-16 14:01:01,476 p=6410 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:01:01,506 p=6410 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.008094", 
        "end": "2017-08-16 14:01:01.453921", 
        "rc": 0, 
        "start": "2017-08-16 14:01:01.445827", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:01:01,512 p=6410 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:01:01,699 p=6410 u=root |  changed: [localhost]
2017-08-16 14:01:01,704 p=6410 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:01:01,725 p=6410 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:01:01,732 p=6410 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:01:02,603 p=6410 u=root |  ok: [localhost]
2017-08-16 14:01:02,605 p=6410 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:01:02,605 p=6410 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 14:01:28,340 p=6528 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:01:28,341 p=6528 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:01:28,462 p=6528 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:01:28,521 p=6528 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:01:29,064 p=6528 u=root |  ok: [localhost]
2017-08-16 14:01:29,069 p=6528 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:01:29,275 p=6528 u=root |  changed: [localhost]
2017-08-16 14:01:29,281 p=6528 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:01:29,306 p=6528 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005515", 
        "end": "2017-08-16 14:01:29.261817", 
        "rc": 0, 
        "start": "2017-08-16 14:01:29.256302", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:01:29,311 p=6528 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:01:29,495 p=6528 u=root |  changed: [localhost]
2017-08-16 14:01:29,499 p=6528 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:01:29,521 p=6528 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:01:29,527 p=6528 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:01:29,549 p=6528 u=root |  skipping: [localhost]
2017-08-16 14:01:29,551 p=6528 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:01:29,551 p=6528 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 14:04:39,801 p=6621 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:04:39,803 p=6621 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:04:39,920 p=6621 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:04:39,980 p=6621 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:04:40,544 p=6621 u=root |  ok: [localhost]
2017-08-16 14:04:40,549 p=6621 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:04:40,745 p=6621 u=root |  changed: [localhost]
2017-08-16 14:04:40,750 p=6621 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:04:40,773 p=6621 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006224", 
        "end": "2017-08-16 14:04:40.731670", 
        "rc": 0, 
        "start": "2017-08-16 14:04:40.725446", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:04:40,782 p=6621 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:04:40,969 p=6621 u=root |  changed: [localhost]
2017-08-16 14:04:40,973 p=6621 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:04:41,000 p=6621 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:04:41,013 p=6621 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:04:41,914 p=6621 u=root |  ok: [localhost]
2017-08-16 14:04:41,920 p=6621 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:04:41,937 p=6621 u=root |  skipping: [localhost]
2017-08-16 14:04:41,938 p=6621 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:04:41,939 p=6621 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 14:04:52,593 p=6720 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:04:52,595 p=6720 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:04:52,714 p=6720 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:04:52,769 p=6720 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:04:53,334 p=6720 u=root |  ok: [localhost]
2017-08-16 14:04:53,339 p=6720 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:04:53,557 p=6720 u=root |  changed: [localhost]
2017-08-16 14:04:53,562 p=6720 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:04:53,583 p=6720 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005678", 
        "end": "2017-08-16 14:04:53.542811", 
        "rc": 0, 
        "start": "2017-08-16 14:04:53.537133", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:04:53,588 p=6720 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:04:53,772 p=6720 u=root |  changed: [localhost]
2017-08-16 14:04:53,778 p=6720 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:04:53,799 p=6720 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:04:53,807 p=6720 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:04:54,658 p=6720 u=root |  ok: [localhost]
2017-08-16 14:04:54,663 p=6720 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:04:54,682 p=6720 u=root |  skipping: [localhost]
2017-08-16 14:04:54,686 p=6720 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:04:54,686 p=6720 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=0   
2017-08-16 14:05:24,417 p=6820 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:05:24,419 p=6820 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:05:24,539 p=6820 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:05:24,593 p=6820 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:05:25,156 p=6820 u=root |  ok: [localhost]
2017-08-16 14:05:25,162 p=6820 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:05:25,361 p=6820 u=root |  changed: [localhost]
2017-08-16 14:05:25,369 p=6820 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:05:25,395 p=6820 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005583", 
        "end": "2017-08-16 14:05:25.347394", 
        "rc": 0, 
        "start": "2017-08-16 14:05:25.341811", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:05:25,403 p=6820 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:05:25,610 p=6820 u=root |  changed: [localhost]
2017-08-16 14:05:25,614 p=6820 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:05:25,640 p=6820 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:05:25,645 p=6820 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:05:25,661 p=6820 u=root |  skipping: [localhost]
2017-08-16 14:05:25,666 p=6820 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:05:25,684 p=6820 u=root |  skipping: [localhost]
2017-08-16 14:05:25,686 p=6820 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:05:25,686 p=6820 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 14:06:46,657 p=6910 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:06:46,659 p=6910 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:06:46,778 p=6910 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:06:46,838 p=6910 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:06:47,405 p=6910 u=root |  ok: [localhost]
2017-08-16 14:06:47,412 p=6910 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:06:47,624 p=6910 u=root |  changed: [localhost]
2017-08-16 14:06:47,630 p=6910 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:06:47,653 p=6910 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006848", 
        "end": "2017-08-16 14:06:47.610564", 
        "rc": 0, 
        "start": "2017-08-16 14:06:47.603716", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:06:47,658 p=6910 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:06:47,853 p=6910 u=root |  changed: [localhost]
2017-08-16 14:06:47,857 p=6910 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:06:47,880 p=6910 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:06:47,885 p=6910 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:06:47,901 p=6910 u=root |  skipping: [localhost]
2017-08-16 14:06:47,907 p=6910 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:06:47,925 p=6910 u=root |  skipping: [localhost]
2017-08-16 14:06:47,927 p=6910 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:06:47,927 p=6910 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 14:07:00,390 p=7001 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:07:00,391 p=7001 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:07:00,509 p=7001 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:07:00,568 p=7001 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:07:01,141 p=7001 u=root |  ok: [localhost]
2017-08-16 14:07:01,147 p=7001 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:07:01,359 p=7001 u=root |  changed: [localhost]
2017-08-16 14:07:01,365 p=7001 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:07:01,389 p=7001 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005847", 
        "end": "2017-08-16 14:07:01.344916", 
        "rc": 0, 
        "start": "2017-08-16 14:07:01.339069", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.0.0", 
        "stdout_lines": [
            "slmpuppet-v1.0.0"
        ]
    }
}
2017-08-16 14:07:01,396 p=7001 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:07:01,592 p=7001 u=root |  changed: [localhost]
2017-08-16 14:07:01,596 p=7001 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:07:01,623 p=7001 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:07:01,629 p=7001 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:07:01,645 p=7001 u=root |  skipping: [localhost]
2017-08-16 14:07:01,650 p=7001 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:07:01,668 p=7001 u=root |  skipping: [localhost]
2017-08-16 14:07:01,669 p=7001 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:07:01,669 p=7001 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=0   
2017-08-16 14:07:44,434 p=7093 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:07:44,435 p=7093 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:07:44,555 p=7093 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:07:44,613 p=7093 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:07:45,157 p=7093 u=root |  ok: [localhost]
2017-08-16 14:07:45,163 p=7093 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:07:45,362 p=7093 u=root |  changed: [localhost]
2017-08-16 14:07:45,368 p=7093 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:07:45,392 p=7093 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005706", 
        "end": "2017-08-16 14:07:45.348671", 
        "rc": 0, 
        "start": "2017-08-16 14:07:45.342965", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.1.0", 
        "stdout_lines": [
            "slmpuppet-v1.1.0"
        ]
    }
}
2017-08-16 14:07:45,397 p=7093 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:07:45,592 p=7093 u=root |  changed: [localhost]
2017-08-16 14:07:45,596 p=7093 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:07:45,619 p=7093 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:07:45,624 p=7093 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:07:46,888 p=7093 u=root |  changed: [localhost]
2017-08-16 14:07:46,893 p=7093 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:07:47,097 p=7093 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:00.095500", "end": "2017-08-16 14:07:47.083190", "failed": true, "rc": 123, "start": "2017-08-16 14:07:46.987690", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "", "stdout_lines": []}
2017-08-16 14:07:47,099 p=7093 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:07:47,099 p=7093 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:07:47,099 p=7093 u=root |  localhost                  : ok=6    changed=3    unreachable=0    failed=1   
2017-08-16 14:09:22,435 p=7218 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:09:22,437 p=7218 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:09:22,561 p=7218 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:09:22,619 p=7218 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:09:23,161 p=7218 u=root |  ok: [localhost]
2017-08-16 14:09:23,166 p=7218 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:09:23,375 p=7218 u=root |  changed: [localhost]
2017-08-16 14:09:23,380 p=7218 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:09:23,409 p=7218 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $1 \"-\" $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.008013", 
        "end": "2017-08-16 14:09:23.359292", 
        "rc": 0, 
        "start": "2017-08-16 14:09:23.351279", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "slmpuppet-v1.1.0", 
        "stdout_lines": [
            "slmpuppet-v1.1.0"
        ]
    }
}
2017-08-16 14:09:23,415 p=7218 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:09:23,605 p=7218 u=root |  changed: [localhost]
2017-08-16 14:09:23,609 p=7218 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:09:23,635 p=7218 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:09:23,642 p=7218 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:09:24,498 p=7218 u=root |  ok: [localhost]
2017-08-16 14:09:24,503 p=7218 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:09:24,671 p=7218 u=root |  changed: [localhost]
2017-08-16 14:09:24,675 p=7218 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:09:24,675 p=7218 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 14:34:01,849 p=7353 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:34:01,851 p=7353 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:34:01,980 p=7353 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:34:02,040 p=7353 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:34:02,638 p=7353 u=root |  ok: [localhost]
2017-08-16 14:34:02,643 p=7353 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:34:02,848 p=7353 u=root |  changed: [localhost]
2017-08-16 14:34:02,853 p=7353 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:34:02,876 p=7353 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006175", 
        "end": "2017-08-16 14:34:02.830329", 
        "rc": 0, 
        "start": "2017-08-16 14:34:02.824154", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:34:02,890 p=7353 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:34:03,094 p=7353 u=root |  changed: [localhost]
2017-08-16 14:34:03,099 p=7353 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:34:03,122 p=7353 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet-v1.0.0"
}
2017-08-16 14:34:03,128 p=7353 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:34:03,155 p=7353 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/v1.1.0.tar.bz2' in expected paths."}
2017-08-16 14:34:03,156 p=7353 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:34:03,156 p=7353 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:34:03,157 p=7353 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 14:36:22,283 p=7441 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:36:22,284 p=7441 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:36:22,417 p=7441 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:36:22,475 p=7441 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:36:23,044 p=7441 u=root |  ok: [localhost]
2017-08-16 14:36:23,050 p=7441 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:36:23,244 p=7441 u=root |  changed: [localhost]
2017-08-16 14:36:23,251 p=7441 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:36:23,277 p=7441 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005719", 
        "end": "2017-08-16 14:36:23.228386", 
        "rc": 0, 
        "start": "2017-08-16 14:36:23.222667", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:36:23,285 p=7441 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:36:23,482 p=7441 u=root |  changed: [localhost]
2017-08-16 14:36:23,487 p=7441 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:36:23,509 p=7441 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:36:23,516 p=7441 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:36:23,546 p=7441 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unable to find '//depot/v1.1.0.tar.bz2' in expected paths."}
2017-08-16 14:36:23,548 p=7441 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:36:23,548 p=7441 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:36:23,549 p=7441 u=root |  localhost                  : ok=5    changed=2    unreachable=0    failed=1   
2017-08-16 14:38:09,757 p=7529 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:38:09,759 p=7529 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:38:09,881 p=7529 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:38:09,938 p=7529 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:38:10,487 p=7529 u=root |  ok: [localhost]
2017-08-16 14:38:10,493 p=7529 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:38:10,715 p=7529 u=root |  changed: [localhost]
2017-08-16 14:38:10,723 p=7529 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:38:10,750 p=7529 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007519", 
        "end": "2017-08-16 14:38:10.698581", 
        "rc": 0, 
        "start": "2017-08-16 14:38:10.691062", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:38:10,758 p=7529 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:38:10,960 p=7529 u=root |  changed: [localhost]
2017-08-16 14:38:10,964 p=7529 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:38:10,988 p=7529 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:38:10,994 p=7529 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:38:11,922 p=7529 u=root |  ok: [localhost]
2017-08-16 14:38:11,927 p=7529 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:38:12,082 p=7529 u=root |  changed: [localhost]
2017-08-16 14:38:12,083 p=7529 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:38:12,084 p=7529 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 14:49:30,287 p=7750 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:49:30,289 p=7750 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:49:30,418 p=7750 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:49:30,481 p=7750 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:49:31,413 p=7750 u=root |  ok: [localhost]
2017-08-16 14:49:31,420 p=7750 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:49:31,633 p=7750 u=root |  changed: [localhost]
2017-08-16 14:49:31,638 p=7750 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:49:31,662 p=7750 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006282", 
        "end": "2017-08-16 14:49:31.617166", 
        "rc": 0, 
        "start": "2017-08-16 14:49:31.610884", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:49:31,669 p=7750 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:49:31,872 p=7750 u=root |  changed: [localhost]
2017-08-16 14:49:31,877 p=7750 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:49:31,900 p=7750 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:49:31,908 p=7750 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:49:32,872 p=7750 u=root |  ok: [localhost]
2017-08-16 14:49:32,879 p=7750 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:49:33,099 p=7750 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet:image_tag.stdout | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:00.089936", "end": "2017-08-16 14:49:33.081491", "failed": true, "rc": 123, "start": "2017-08-16 14:49:32.991555", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "", "stdout_lines": []}
2017-08-16 14:49:33,100 p=7750 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:49:33,100 p=7750 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:49:33,100 p=7750 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:50:23,953 p=7865 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:50:23,954 p=7865 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:50:24,073 p=7865 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:50:24,137 p=7865 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:50:24,685 p=7865 u=root |  ok: [localhost]
2017-08-16 14:50:24,690 p=7865 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:50:24,894 p=7865 u=root |  changed: [localhost]
2017-08-16 14:50:24,901 p=7865 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:50:24,926 p=7865 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006227", 
        "end": "2017-08-16 14:50:24.879611", 
        "rc": 0, 
        "start": "2017-08-16 14:50:24.873384", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:50:24,931 p=7865 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:50:25,125 p=7865 u=root |  changed: [localhost]
2017-08-16 14:50:25,129 p=7865 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:50:25,150 p=7865 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:50:25,156 p=7865 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:50:26,012 p=7865 u=root |  ok: [localhost]
2017-08-16 14:50:26,017 p=7865 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:50:26,227 p=7865 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=\"slmpuppet:image_tag.stdout\" | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:00.085126", "end": "2017-08-16 14:50:26.208292", "failed": true, "rc": 123, "start": "2017-08-16 14:50:26.123166", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "", "stdout_lines": []}
2017-08-16 14:50:26,228 p=7865 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:50:26,228 p=7865 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:50:26,228 p=7865 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:50:50,175 p=7980 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:50:50,177 p=7980 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:50:50,295 p=7980 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:50:50,354 p=7980 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:50:50,900 p=7980 u=root |  ok: [localhost]
2017-08-16 14:50:50,907 p=7980 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:50:51,119 p=7980 u=root |  changed: [localhost]
2017-08-16 14:50:51,125 p=7980 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:50:51,149 p=7980 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.012237", 
        "end": "2017-08-16 14:50:51.101449", 
        "rc": 0, 
        "start": "2017-08-16 14:50:51.089212", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:50:51,156 p=7980 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:50:51,360 p=7980 u=root |  changed: [localhost]
2017-08-16 14:50:51,364 p=7980 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:50:51,388 p=7980 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:50:51,395 p=7980 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:50:52,246 p=7980 u=root |  ok: [localhost]
2017-08-16 14:50:52,252 p=7980 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:51:02,810 p=7980 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=\"slmpuppet:v1.0.0\" | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:10.395272", "end": "2017-08-16 14:51:02.753786", "failed": true, "rc": 123, "start": "2017-08-16 14:50:52.358514", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "e5e0cb40fcd8", "stdout_lines": ["e5e0cb40fcd8"]}
2017-08-16 14:51:02,812 p=7980 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:51:02,812 p=7980 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:51:02,813 p=7980 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:51:34,546 p=8115 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:51:34,547 p=8115 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:51:34,674 p=8115 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:51:34,733 p=8115 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:51:35,529 p=8115 u=root |  ok: [localhost]
2017-08-16 14:51:35,535 p=8115 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:51:35,751 p=8115 u=root |  changed: [localhost]
2017-08-16 14:51:35,760 p=8115 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:51:35,783 p=8115 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007704", 
        "end": "2017-08-16 14:51:35.735993", 
        "rc": 0, 
        "start": "2017-08-16 14:51:35.728289", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:51:35,788 p=8115 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:51:36,007 p=8115 u=root |  changed: [localhost]
2017-08-16 14:51:36,012 p=8115 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:51:36,040 p=8115 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:51:36,046 p=8115 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:51:36,934 p=8115 u=root |  ok: [localhost]
2017-08-16 14:51:36,939 p=8115 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 14:51:37,160 p=8115 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=\"slmpuppet:[u'v1.0.0']\" | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:00.087452", "end": "2017-08-16 14:51:37.145753", "failed": true, "rc": 123, "start": "2017-08-16 14:51:37.058301", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "", "stdout_lines": []}
2017-08-16 14:51:37,162 p=8115 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:51:37,162 p=8115 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:51:37,163 p=8115 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:52:16,380 p=8227 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:52:16,382 p=8227 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:52:16,500 p=8227 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:52:16,559 p=8227 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:52:17,115 p=8227 u=root |  ok: [localhost]
2017-08-16 14:52:17,121 p=8227 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:52:17,334 p=8227 u=root |  changed: [localhost]
2017-08-16 14:52:17,340 p=8227 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:52:17,366 p=8227 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006091", 
        "end": "2017-08-16 14:52:17.318946", 
        "rc": 0, 
        "start": "2017-08-16 14:52:17.312855", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:52:17,371 p=8227 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:52:17,571 p=8227 u=root |  changed: [localhost]
2017-08-16 14:52:17,575 p=8227 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:52:17,601 p=8227 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:52:17,607 p=8227 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:52:18,457 p=8227 u=root |  ok: [localhost]
2017-08-16 14:52:18,461 p=8227 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 14:52:18,489 p=8227 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{slmpuppet:[u'v1.0.0']}}"}
2017-08-16 14:52:18,491 p=8227 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:52:18,491 p=8227 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:52:18,491 p=8227 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:52:51,505 p=8324 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:52:51,507 p=8324 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:52:51,626 p=8324 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:52:51,694 p=8324 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:52:52,221 p=8324 u=root |  ok: [localhost]
2017-08-16 14:52:52,226 p=8324 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:52:52,441 p=8324 u=root |  changed: [localhost]
2017-08-16 14:52:52,447 p=8324 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:52:52,470 p=8324 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005884", 
        "end": "2017-08-16 14:52:52.423241", 
        "rc": 0, 
        "start": "2017-08-16 14:52:52.417357", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:52:52,477 p=8324 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:52:52,669 p=8324 u=root |  changed: [localhost]
2017-08-16 14:52:52,673 p=8324 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:52:52,700 p=8324 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:52:52,706 p=8324 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:52:53,618 p=8324 u=root |  ok: [localhost]
2017-08-16 14:52:53,623 p=8324 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 14:52:53,653 p=8324 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{slmpuppet:[u'v1.0.0']}}"}
2017-08-16 14:52:53,655 p=8324 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:52:53,655 p=8324 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:52:53,655 p=8324 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:53:14,035 p=8421 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:53:14,036 p=8421 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:53:14,048 p=8421 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 53, column 29, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        - debug:
            var: {{ image }}:{{ image_tag.stdout_lines }}
                            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 14:53:35,185 p=8430 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:53:35,187 p=8430 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:53:35,196 p=8430 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 53, column 29, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        - debug:
            var: {{ image }}:image_tag.stdout_lines
                            ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 14:53:52,876 p=8439 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:53:52,878 p=8439 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:53:52,889 p=8439 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 53, column 31, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        - debug:
            var: "{{ image }}":image_tag.stdout_lines
                              ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-16 14:54:11,981 p=8448 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:54:11,983 p=8448 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:54:12,105 p=8448 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:54:12,165 p=8448 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:54:12,720 p=8448 u=root |  ok: [localhost]
2017-08-16 14:54:12,725 p=8448 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:54:12,949 p=8448 u=root |  changed: [localhost]
2017-08-16 14:54:12,954 p=8448 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:54:12,976 p=8448 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006383", 
        "end": "2017-08-16 14:54:12.934731", 
        "rc": 0, 
        "start": "2017-08-16 14:54:12.928348", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:54:12,981 p=8448 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:54:13,185 p=8448 u=root |  changed: [localhost]
2017-08-16 14:54:13,189 p=8448 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:54:13,213 p=8448 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:54:13,218 p=8448 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:54:14,081 p=8448 u=root |  ok: [localhost]
2017-08-16 14:54:14,085 p=8448 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 14:54:14,111 p=8448 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{\"slmpuppet\":image_tag.stdout_lines}}"}
2017-08-16 14:54:14,112 p=8448 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:54:14,113 p=8448 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:54:14,113 p=8448 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:55:00,602 p=8545 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:55:00,604 p=8545 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:55:00,717 p=8545 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:55:00,776 p=8545 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:55:01,320 p=8545 u=root |  ok: [localhost]
2017-08-16 14:55:01,325 p=8545 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:55:01,547 p=8545 u=root |  changed: [localhost]
2017-08-16 14:55:01,553 p=8545 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:55:01,576 p=8545 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007860", 
        "end": "2017-08-16 14:55:01.530620", 
        "rc": 0, 
        "start": "2017-08-16 14:55:01.522760", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:55:01,584 p=8545 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:55:01,777 p=8545 u=root |  changed: [localhost]
2017-08-16 14:55:01,784 p=8545 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:55:01,812 p=8545 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:55:01,817 p=8545 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:55:02,681 p=8545 u=root |  ok: [localhost]
2017-08-16 14:55:02,685 p=8545 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 14:55:02,713 p=8545 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{slmpuppet:image_tag.stdout_lines}}"}
2017-08-16 14:55:02,715 p=8545 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:55:02,715 p=8545 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:55:02,715 p=8545 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 14:55:29,523 p=8642 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 14:55:29,525 p=8642 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 14:55:29,642 p=8642 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 14:55:29,700 p=8642 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 14:55:30,241 p=8642 u=root |  ok: [localhost]
2017-08-16 14:55:30,247 p=8642 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 14:55:30,454 p=8642 u=root |  changed: [localhost]
2017-08-16 14:55:30,459 p=8642 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 14:55:30,482 p=8642 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007423", 
        "end": "2017-08-16 14:55:30.436725", 
        "rc": 0, 
        "start": "2017-08-16 14:55:30.429302", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 14:55:30,489 p=8642 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 14:55:30,697 p=8642 u=root |  changed: [localhost]
2017-08-16 14:55:30,704 p=8642 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 14:55:30,729 p=8642 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 14:55:30,735 p=8642 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 14:55:31,609 p=8642 u=root |  ok: [localhost]
2017-08-16 14:55:31,613 p=8642 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 14:55:31,644 p=8642 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{slmpuppet:image_tag.stdout_lines}}"}
2017-08-16 14:55:31,645 p=8642 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 14:55:31,645 p=8642 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 14:55:31,645 p=8642 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 15:08:20,273 p=8854 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 15:08:20,274 p=8854 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 15:08:20,400 p=8854 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 15:08:20,458 p=8854 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 15:08:21,283 p=8854 u=root |  ok: [localhost]
2017-08-16 15:08:21,288 p=8854 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 15:08:21,490 p=8854 u=root |  changed: [localhost]
2017-08-16 15:08:21,496 p=8854 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 15:08:21,527 p=8854 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006434", 
        "end": "2017-08-16 15:08:21.476413", 
        "rc": 0, 
        "start": "2017-08-16 15:08:21.469979", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 15:08:21,532 p=8854 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 15:08:21,715 p=8854 u=root |  changed: [localhost]
2017-08-16 15:08:21,719 p=8854 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 15:08:21,738 p=8854 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 15:08:21,747 p=8854 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 15:08:22,699 p=8854 u=root |  ok: [localhost]
2017-08-16 15:08:22,705 p=8854 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-16 15:08:22,730 p=8854 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: expected token 'end of print statement', got ':'. String: {{slmpuppet:image_tag.stdout_lines}}"}
2017-08-16 15:08:22,732 p=8854 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-16 15:08:22,732 p=8854 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 15:08:22,732 p=8854 u=root |  localhost                  : ok=6    changed=2    unreachable=0    failed=1   
2017-08-16 15:08:55,054 p=8954 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 15:08:55,057 p=8954 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 15:08:55,171 p=8954 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 15:08:55,228 p=8954 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 15:08:55,796 p=8954 u=root |  ok: [localhost]
2017-08-16 15:08:55,802 p=8954 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 15:08:56,015 p=8954 u=root |  changed: [localhost]
2017-08-16 15:08:56,021 p=8954 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 15:08:56,046 p=8954 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006570", 
        "end": "2017-08-16 15:08:55.997594", 
        "rc": 0, 
        "start": "2017-08-16 15:08:55.991024", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 15:08:56,053 p=8954 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 15:08:56,249 p=8954 u=root |  changed: [localhost]
2017-08-16 15:08:56,253 p=8954 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 15:08:56,275 p=8954 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 15:08:56,280 p=8954 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 15:08:57,130 p=8954 u=root |  ok: [localhost]
2017-08-16 15:08:57,135 p=8954 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 15:08:57,302 p=8954 u=root |  changed: [localhost]
2017-08-16 15:08:57,304 p=8954 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 15:08:57,304 p=8954 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:28:31,398 p=9123 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:28:31,400 p=9123 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:28:31,539 p=9123 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:28:31,601 p=9123 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:28:32,205 p=9123 u=root |  ok: [localhost]
2017-08-16 16:28:32,212 p=9123 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:28:32,420 p=9123 u=root |  changed: [localhost]
2017-08-16 16:28:32,426 p=9123 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:28:32,450 p=9123 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006291", 
        "end": "2017-08-16 16:28:32.406149", 
        "rc": 0, 
        "start": "2017-08-16 16:28:32.399858", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:28:32,458 p=9123 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 16:28:32,664 p=9123 u=root |  changed: [localhost]
2017-08-16 16:28:32,670 p=9123 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:28:32,690 p=9123 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 16:28:32,696 p=9123 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:28:33,709 p=9123 u=root |  ok: [localhost]
2017-08-16 16:28:33,714 p=9123 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:28:33,886 p=9123 u=root |  changed: [localhost]
2017-08-16 16:28:33,887 p=9123 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:28:33,887 p=9123 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:32:10,853 p=9254 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:32:10,854 p=9254 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:32:10,970 p=9254 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:32:11,031 p=9254 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:32:11,599 p=9254 u=root |  ok: [localhost]
2017-08-16 16:32:11,604 p=9254 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:32:11,809 p=9254 u=root |  changed: [localhost]
2017-08-16 16:32:11,814 p=9254 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:32:11,842 p=9254 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009665", 
        "end": "2017-08-16 16:32:11.794417", 
        "rc": 0, 
        "start": "2017-08-16 16:32:11.784752", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:32:11,850 p=9254 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 16:32:12,051 p=9254 u=root |  changed: [localhost]
2017-08-16 16:32:12,057 p=9254 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:32:12,080 p=9254 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0 2a395f549ed5"
}
2017-08-16 16:32:12,088 p=9254 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:32:12,997 p=9254 u=root |  ok: [localhost]
2017-08-16 16:32:13,002 p=9254 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:32:13,186 p=9254 u=root |  changed: [localhost]
2017-08-16 16:32:13,188 p=9254 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:32:13,188 p=9254 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:32:36,926 p=9365 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:32:36,927 p=9365 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:32:37,052 p=9365 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:32:37,108 p=9365 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:32:37,670 p=9365 u=root |  ok: [localhost]
2017-08-16 16:32:37,675 p=9365 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:32:37,883 p=9365 u=root |  changed: [localhost]
2017-08-16 16:32:37,889 p=9365 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:32:37,911 p=9365 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006209", 
        "end": "2017-08-16 16:32:37.868185", 
        "rc": 0, 
        "start": "2017-08-16 16:32:37.861976", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:32:37,920 p=9365 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 16:32:38,120 p=9365 u=root |  changed: [localhost]
2017-08-16 16:32:38,126 p=9365 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:32:38,147 p=9365 u=root |  ok: [localhost] => {
    "image_tag": {
        "changed": true, 
        "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $2, $3;}'", 
        "delta": "0:00:00.074550", 
        "end": "2017-08-16 16:32:38.102513", 
        "rc": 0, 
        "start": "2017-08-16 16:32:38.027963", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.0.0 2a395f549ed5", 
        "stdout_lines": [
            "v1.0.0 2a395f549ed5"
        ]
    }
}
2017-08-16 16:32:38,152 p=9365 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:32:38,997 p=9365 u=root |  ok: [localhost]
2017-08-16 16:32:39,002 p=9365 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:32:39,171 p=9365 u=root |  changed: [localhost]
2017-08-16 16:32:39,173 p=9365 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:32:39,173 p=9365 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:34:12,088 p=9476 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:34:12,091 p=9476 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:34:12,207 p=9476 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:34:12,261 p=9476 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:34:12,817 p=9476 u=root |  ok: [localhost]
2017-08-16 16:34:12,824 p=9476 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:34:13,030 p=9476 u=root |  changed: [localhost]
2017-08-16 16:34:13,038 p=9476 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:34:13,063 p=9476 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006367", 
        "end": "2017-08-16 16:34:13.012983", 
        "rc": 0, 
        "start": "2017-08-16 16:34:13.006616", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:34:13,068 p=9476 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 16:34:13,278 p=9476 u=root |  changed: [localhost]
2017-08-16 16:34:13,282 p=9476 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:34:13,303 p=9476 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-16 16:34:13,309 p=9476 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:34:14,158 p=9476 u=root |  ok: [localhost]
2017-08-16 16:34:14,163 p=9476 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:34:14,330 p=9476 u=root |  changed: [localhost]
2017-08-16 16:34:14,332 p=9476 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:34:14,332 p=9476 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:34:38,873 p=9588 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:34:38,874 p=9588 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:34:38,985 p=9588 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:34:39,040 p=9588 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:34:39,596 p=9588 u=root |  ok: [localhost]
2017-08-16 16:34:39,601 p=9588 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:34:39,804 p=9588 u=root |  changed: [localhost]
2017-08-16 16:34:39,812 p=9588 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:34:39,839 p=9588 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005849", 
        "end": "2017-08-16 16:34:39.786306", 
        "rc": 0, 
        "start": "2017-08-16 16:34:39.780457", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:34:39,844 p=9588 u=root |  TASK [Get image tag for slmpuppet] ****************************************************************************************************************************************************
2017-08-16 16:34:40,039 p=9588 u=root |  changed: [localhost]
2017-08-16 16:34:40,043 p=9588 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:34:40,065 p=9588 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 16:34:40,071 p=9588 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:34:40,936 p=9588 u=root |  ok: [localhost]
2017-08-16 16:34:40,943 p=9588 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:34:41,105 p=9588 u=root |  changed: [localhost]
2017-08-16 16:34:41,107 p=9588 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:34:41,108 p=9588 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-16 16:36:48,749 p=9764 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-16 16:36:48,752 p=9764 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-16 16:36:48,882 p=9764 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-16 16:36:48,944 p=9764 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-16 16:36:49,495 p=9764 u=root |  ok: [localhost]
2017-08-16 16:36:49,501 p=9764 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-16 16:36:49,717 p=9764 u=root |  changed: [localhost]
2017-08-16 16:36:49,723 p=9764 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-16 16:36:49,747 p=9764 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006104", 
        "end": "2017-08-16 16:36:49.700177", 
        "rc": 0, 
        "start": "2017-08-16 16:36:49.694073", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-16 16:36:49,752 p=9764 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-16 16:36:49,951 p=9764 u=root |  changed: [localhost]
2017-08-16 16:36:49,955 p=9764 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-16 16:36:49,976 p=9764 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-16 16:36:49,982 p=9764 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-16 16:36:50,170 p=9764 u=root |  changed: [localhost]
2017-08-16 16:36:50,175 p=9764 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-16 16:36:50,201 p=9764 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-16 16:36:50,208 p=9764 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-16 16:36:51,079 p=9764 u=root |  ok: [localhost]
2017-08-16 16:36:51,085 p=9764 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-16 16:36:51,253 p=9764 u=root |  changed: [localhost]
2017-08-16 16:36:51,256 p=9764 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-16 16:36:51,256 p=9764 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-17 00:36:39,506 p=10138 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:36:39,507 p=10138 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:36:39,523 p=10138 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 82, column 4, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


   - debug:
   ^ here

2017-08-17 00:38:07,522 p=10147 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:38:07,523 p=10147 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:38:07,533 p=10147 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 82, column 8, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


       - debug:
       ^ here

2017-08-17 00:39:05,899 p=10156 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:39:05,900 p=10156 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:39:06,040 p=10156 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 00:39:06,102 p=10156 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 00:39:06,718 p=10156 u=root |  ok: [localhost]
2017-08-17 00:39:06,724 p=10156 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 00:39:06,940 p=10156 u=root |  changed: [localhost]
2017-08-17 00:39:06,946 p=10156 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 00:39:06,972 p=10156 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.008899", 
        "end": "2017-08-17 00:39:06.926343", 
        "rc": 0, 
        "start": "2017-08-17 00:39:06.917444", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 00:39:06,978 p=10156 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 00:39:07,189 p=10156 u=root |  changed: [localhost]
2017-08-17 00:39:07,193 p=10156 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 00:39:07,218 p=10156 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-17 00:39:07,225 p=10156 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 00:39:07,419 p=10156 u=root |  changed: [localhost]
2017-08-17 00:39:07,425 p=10156 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 00:39:07,449 p=10156 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 00:39:07,455 p=10156 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 00:39:08,503 p=10156 u=root |  ok: [localhost]
2017-08-17 00:39:08,508 p=10156 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-17 00:39:08,671 p=10156 u=root |  changed: [localhost]
2017-08-17 00:39:08,677 p=10156 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 00:39:08,855 p=10156 u=root |  changed: [localhost]
2017-08-17 00:39:08,860 p=10156 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 00:39:08,886 p=10156 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.052511", 
        "end": "2017-08-17 00:39:08.837262", 
        "rc": 0, 
        "start": "2017-08-17 00:39:08.784751", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 00:39:08,890 p=10156 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 00:39:08,890 p=10156 u=root |  localhost                  : ok=11   changed=5    unreachable=0    failed=0   
2017-08-17 00:44:37,131 p=10304 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:44:37,133 p=10304 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:44:37,253 p=10304 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 00:44:37,325 p=10304 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 00:44:37,862 p=10304 u=root |  ok: [localhost]
2017-08-17 00:44:37,867 p=10304 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 00:44:38,089 p=10304 u=root |  changed: [localhost]
2017-08-17 00:44:38,095 p=10304 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 00:44:38,116 p=10304 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.008589", 
        "end": "2017-08-17 00:44:38.069739", 
        "rc": 0, 
        "start": "2017-08-17 00:44:38.061150", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 00:44:38,121 p=10304 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 00:44:38,317 p=10304 u=root |  changed: [localhost]
2017-08-17 00:44:38,321 p=10304 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 00:44:38,343 p=10304 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-17 00:44:38,348 p=10304 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 00:44:38,528 p=10304 u=root |  changed: [localhost]
2017-08-17 00:44:38,533 p=10304 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 00:44:38,555 p=10304 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 00:44:38,560 p=10304 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 00:44:39,397 p=10304 u=root |  ok: [localhost]
2017-08-17 00:44:39,403 p=10304 u=root |  TASK [Stop the slmpuppet container] ***************************************************************************************************************************************************
2017-08-17 00:44:39,550 p=10304 u=root |  changed: [localhost]
2017-08-17 00:44:39,554 p=10304 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 00:44:39,578 p=10304 u=root |  ok: [localhost] => {
    "container_id": {
        "changed": true, 
        "cmd": "docker ps -f slmpuppet | awk '{ print $1 }' | xargs -I {} docker stop {}", 
        "delta": "0:00:00.037471", 
        "end": "2017-08-17 00:44:39.536775", 
        "rc": 0, 
        "start": "2017-08-17 00:44:39.499304", 
        "stderr": "bad format of filter (expected name=value)", 
        "stderr_lines": [
            "bad format of filter (expected name=value)"
        ], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 00:44:39,583 p=10304 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 00:44:39,735 p=10304 u=root |  changed: [localhost]
2017-08-17 00:44:39,739 p=10304 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 00:44:39,762 p=10304 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.043541", 
        "end": "2017-08-17 00:44:39.720396", 
        "rc": 0, 
        "start": "2017-08-17 00:44:39.676855", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 00:44:39,763 p=10304 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 00:44:39,764 p=10304 u=root |  localhost                  : ok=12   changed=5    unreachable=0    failed=0   
2017-08-17 00:54:35,358 p=10456 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:54:35,360 p=10456 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:54:35,370 p=10456 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 64, column 31, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          docker_container:
            image: {{ image }}:image_tag.stdout
                              ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-17 00:55:01,124 p=10465 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:55:01,126 p=10465 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:55:01,135 p=10465 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 64, column 33, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

          docker_container:
            image: "{{ image }}":image_tag.stdout
                                ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-17 00:55:18,727 p=10474 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 00:55:18,729 p=10474 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 00:55:18,851 p=10474 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 00:55:18,907 p=10474 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 00:55:19,452 p=10474 u=root |  ok: [localhost]
2017-08-17 00:55:19,457 p=10474 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 00:55:19,650 p=10474 u=root |  changed: [localhost]
2017-08-17 00:55:19,656 p=10474 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 00:55:19,676 p=10474 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005951", 
        "end": "2017-08-17 00:55:19.635891", 
        "rc": 0, 
        "start": "2017-08-17 00:55:19.629940", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 00:55:19,681 p=10474 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 00:55:19,868 p=10474 u=root |  changed: [localhost]
2017-08-17 00:55:19,872 p=10474 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 00:55:19,895 p=10474 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-17 00:55:19,900 p=10474 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 00:55:20,077 p=10474 u=root |  changed: [localhost]
2017-08-17 00:55:20,083 p=10474 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 00:55:20,105 p=10474 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 00:55:20,111 p=10474 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 00:55:20,965 p=10474 u=root |  ok: [localhost]
2017-08-17 00:55:20,970 p=10474 u=root |  TASK [Stop the container using slmpuppet] *********************************************************************************************************************************************
2017-08-17 00:55:21,301 p=10474 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "missing required arguments: name"}
2017-08-17 00:55:21,302 p=10474 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 00:55:21,303 p=10474 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 00:55:21,303 p=10474 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:24:36,507 p=10701 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:24:36,508 p=10701 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:24:36,520 p=10701 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 69, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

#        - name: Stop & remove the {{ image }} container
           shell: docker stop
           ^ here

2017-08-17 03:24:47,062 p=10710 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:24:47,064 p=10710 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:24:47,073 p=10710 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 69, column 12, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

#        - name: Stop & remove the {{ image }} container
           shell: docker stop
           ^ here

2017-08-17 03:25:09,838 p=10719 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:25:09,840 p=10719 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:25:09,962 p=10719 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:25:10,018 p=10719 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:25:10,550 p=10719 u=root |  ok: [localhost]
2017-08-17 03:25:10,556 p=10719 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:25:10,748 p=10719 u=root |  changed: [localhost]
2017-08-17 03:25:10,754 p=10719 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:25:10,777 p=10719 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005976", 
        "end": "2017-08-17 03:25:10.735086", 
        "rc": 0, 
        "start": "2017-08-17 03:25:10.729110", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:25:10,782 p=10719 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:25:10,964 p=10719 u=root |  changed: [localhost]
2017-08-17 03:25:10,968 p=10719 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:25:10,987 p=10719 u=root |  ok: [localhost] => {
    "image_tag.stdout": "v1.0.0"
}
2017-08-17 03:25:10,992 p=10719 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:25:11,164 p=10719 u=root |  changed: [localhost]
2017-08-17 03:25:11,169 p=10719 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:25:11,187 p=10719 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:25:11,192 p=10719 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:25:12,072 p=10719 u=root |  ok: [localhost]
2017-08-17 03:25:12,076 p=10719 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:25:12,101 p=10719 u=root |  ok: [localhost] => {
    "container_state": "VARIABLE IS NOT DEFINED!"
}
2017-08-17 03:25:12,107 p=10719 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:25:12,268 p=10719 u=root |  changed: [localhost]
2017-08-17 03:25:12,274 p=10719 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:25:12,298 p=10719 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.047417", 
        "end": "2017-08-17 03:25:12.253180", 
        "rc": 0, 
        "start": "2017-08-17 03:25:12.205763", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:25:12,300 p=10719 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:25:12,300 p=10719 u=root |  localhost                  : ok=11   changed=4    unreachable=0    failed=0   
2017-08-17 03:28:23,208 p=10853 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:28:23,209 p=10853 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:28:23,321 p=10853 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:28:23,377 p=10853 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:28:23,890 p=10853 u=root |  ok: [localhost]
2017-08-17 03:28:23,895 p=10853 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:28:24,093 p=10853 u=root |  changed: [localhost]
2017-08-17 03:28:24,099 p=10853 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:28:24,119 p=10853 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005928", 
        "end": "2017-08-17 03:28:24.078443", 
        "rc": 0, 
        "start": "2017-08-17 03:28:24.072515", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:28:24,124 p=10853 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:28:24,313 p=10853 u=root |  changed: [localhost]
2017-08-17 03:28:24,318 p=10853 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:28:24,338 p=10853 u=root |  ok: [localhost] => {
    "image_tag.stdout": "2a395f549ed5"
}
2017-08-17 03:28:24,343 p=10853 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:28:24,523 p=10853 u=root |  changed: [localhost]
2017-08-17 03:28:24,528 p=10853 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:28:24,546 p=10853 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:28:24,551 p=10853 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:28:25,368 p=10853 u=root |  ok: [localhost]
2017-08-17 03:28:25,372 p=10853 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:28:25,400 p=10853 u=root |  ok: [localhost] => {
    "container_state": "VARIABLE IS NOT DEFINED!"
}
2017-08-17 03:28:25,406 p=10853 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:28:25,560 p=10853 u=root |  changed: [localhost]
2017-08-17 03:28:25,564 p=10853 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:28:25,589 p=10853 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.042824", 
        "end": "2017-08-17 03:28:25.546480", 
        "rc": 0, 
        "start": "2017-08-17 03:28:25.503656", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:28:25,590 p=10853 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:28:25,590 p=10853 u=root |  localhost                  : ok=11   changed=4    unreachable=0    failed=0   
2017-08-17 03:28:57,831 p=10985 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:28:57,832 p=10985 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:28:57,937 p=10985 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:28:57,988 p=10985 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:28:58,491 p=10985 u=root |  ok: [localhost]
2017-08-17 03:28:58,495 p=10985 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:28:58,696 p=10985 u=root |  changed: [localhost]
2017-08-17 03:28:58,701 p=10985 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:28:58,721 p=10985 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006204", 
        "end": "2017-08-17 03:28:58.680084", 
        "rc": 0, 
        "start": "2017-08-17 03:28:58.673880", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:28:58,727 p=10985 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:28:58,907 p=10985 u=root |  changed: [localhost]
2017-08-17 03:28:58,912 p=10985 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:28:58,934 p=10985 u=root |  ok: [localhost] => {
    "image_tag.stdout": "2a395f549ed5"
}
2017-08-17 03:28:58,939 p=10985 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:28:59,136 p=10985 u=root |  changed: [localhost]
2017-08-17 03:28:59,141 p=10985 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:28:59,161 p=10985 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:28:59,166 p=10985 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:28:59,977 p=10985 u=root |  ok: [localhost]
2017-08-17 03:28:59,983 p=10985 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:29:00,143 p=10985 u=root |  changed: [localhost]
2017-08-17 03:29:00,148 p=10985 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:29:00,172 p=10985 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.044621", 
        "end": "2017-08-17 03:29:00.128531", 
        "rc": 0, 
        "start": "2017-08-17 03:29:00.083910", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:29:00,174 p=10985 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:29:00,174 p=10985 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-17 03:33:25,881 p=11139 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:33:25,882 p=11139 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:33:26,002 p=11139 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:33:26,060 p=11139 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:33:26,562 p=11139 u=root |  ok: [localhost]
2017-08-17 03:33:26,567 p=11139 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:33:26,757 p=11139 u=root |  changed: [localhost]
2017-08-17 03:33:26,763 p=11139 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:33:26,783 p=11139 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007889", 
        "end": "2017-08-17 03:33:26.742240", 
        "rc": 0, 
        "start": "2017-08-17 03:33:26.734351", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:33:26,789 p=11139 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:33:26,969 p=11139 u=root |  changed: [localhost]
2017-08-17 03:33:26,973 p=11139 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:33:26,993 p=11139 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:33:26,998 p=11139 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:33:27,179 p=11139 u=root |  changed: [localhost]
2017-08-17 03:33:27,186 p=11139 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:33:27,208 p=11139 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:33:27,215 p=11139 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:33:28,041 p=11139 u=root |  ok: [localhost]
2017-08-17 03:33:28,046 p=11139 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:33:28,210 p=11139 u=root |  changed: [localhost]
2017-08-17 03:33:28,214 p=11139 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:33:28,237 p=11139 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.046411", 
        "end": "2017-08-17 03:33:28.196215", 
        "rc": 0, 
        "start": "2017-08-17 03:33:28.149804", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:33:28,238 p=11139 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:33:28,238 p=11139 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-17 03:34:32,729 p=11269 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:34:32,731 p=11269 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:34:32,837 p=11269 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:34:32,889 p=11269 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:34:33,389 p=11269 u=root |  ok: [localhost]
2017-08-17 03:34:33,394 p=11269 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:34:33,602 p=11269 u=root |  changed: [localhost]
2017-08-17 03:34:33,607 p=11269 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:34:33,630 p=11269 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005972", 
        "end": "2017-08-17 03:34:33.588023", 
        "rc": 0, 
        "start": "2017-08-17 03:34:33.582051", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:34:33,636 p=11269 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:34:33,809 p=11269 u=root |  changed: [localhost]
2017-08-17 03:34:33,814 p=11269 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:34:33,835 p=11269 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:34:33,840 p=11269 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:34:34,032 p=11269 u=root |  changed: [localhost]
2017-08-17 03:34:34,036 p=11269 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:34:34,054 p=11269 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:34:34,059 p=11269 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:34:34,867 p=11269 u=root |  ok: [localhost]
2017-08-17 03:34:34,872 p=11269 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:34:35,036 p=11269 u=root |  changed: [localhost]
2017-08-17 03:34:35,040 p=11269 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:34:35,070 p=11269 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.049314", 
        "end": "2017-08-17 03:34:35.022816", 
        "rc": 0, 
        "start": "2017-08-17 03:34:34.973502", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:34:35,071 p=11269 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:34:35,071 p=11269 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-17 03:39:46,776 p=11409 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:39:46,777 p=11409 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:39:46,902 p=11409 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:39:46,957 p=11409 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:39:47,487 p=11409 u=root |  ok: [localhost]
2017-08-17 03:39:47,495 p=11409 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:39:47,700 p=11409 u=root |  changed: [localhost]
2017-08-17 03:39:47,706 p=11409 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:39:47,726 p=11409 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.011903", 
        "end": "2017-08-17 03:39:47.683010", 
        "rc": 0, 
        "start": "2017-08-17 03:39:47.671107", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:39:47,731 p=11409 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:39:47,921 p=11409 u=root |  changed: [localhost]
2017-08-17 03:39:47,925 p=11409 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:39:47,945 p=11409 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:39:47,950 p=11409 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:39:48,140 p=11409 u=root |  changed: [localhost]
2017-08-17 03:39:48,145 p=11409 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:39:48,172 p=11409 u=root |  ok: [localhost] => {
    "image_id.stdout": "v1.0.0"
}
2017-08-17 03:39:48,180 p=11409 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:39:49,377 p=11409 u=root |  changed: [localhost]
2017-08-17 03:39:49,383 p=11409 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:39:49,550 p=11409 u=root |  changed: [localhost]
2017-08-17 03:39:49,554 p=11409 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:39:49,585 p=11409 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.052857", 
        "end": "2017-08-17 03:39:49.532173", 
        "rc": 0, 
        "start": "2017-08-17 03:39:49.479316", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:39:49,587 p=11409 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:39:49,587 p=11409 u=root |  localhost                  : ok=10   changed=5    unreachable=0    failed=0   
2017-08-17 03:41:31,225 p=11553 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:41:31,227 p=11553 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:41:31,342 p=11553 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:41:31,398 p=11553 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:41:31,915 p=11553 u=root |  ok: [localhost]
2017-08-17 03:41:31,920 p=11553 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:41:32,120 p=11553 u=root |  changed: [localhost]
2017-08-17 03:41:32,126 p=11553 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:41:32,148 p=11553 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005701", 
        "end": "2017-08-17 03:41:32.105240", 
        "rc": 0, 
        "start": "2017-08-17 03:41:32.099539", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:41:32,154 p=11553 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:41:32,338 p=11553 u=root |  changed: [localhost]
2017-08-17 03:41:32,342 p=11553 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:41:32,370 p=11553 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:41:32,375 p=11553 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:41:32,560 p=11553 u=root |  changed: [localhost]
2017-08-17 03:41:32,564 p=11553 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:41:32,582 p=11553 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:41:32,587 p=11553 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:41:33,381 p=11553 u=root |  ok: [localhost]
2017-08-17 03:41:33,386 p=11553 u=root |  TASK [Remove the slmpuppet Docker Container] ******************************************************************************************************************************************
2017-08-17 03:41:33,543 p=11553 u=root |  changed: [localhost]
2017-08-17 03:41:33,547 p=11553 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-17 03:41:33,571 p=11553 u=root |  ok: [localhost] => {
    "images": {
        "changed": true, 
        "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:image_tag.stdout | awk '{print $1 }' | xargs -I {} docker rm {}", 
        "delta": "0:00:00.045100", 
        "end": "2017-08-17 03:41:33.528261", 
        "rc": 0, 
        "start": "2017-08-17 03:41:33.483161", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-17 03:41:33,572 p=11553 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:41:33,572 p=11553 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-17 03:43:13,229 p=11683 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:43:13,230 p=11683 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:43:13,344 p=11683 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:43:13,399 p=11683 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:43:13,899 p=11683 u=root |  ok: [localhost]
2017-08-17 03:43:13,905 p=11683 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:43:14,111 p=11683 u=root |  changed: [localhost]
2017-08-17 03:43:14,116 p=11683 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:43:14,140 p=11683 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006458", 
        "end": "2017-08-17 03:43:14.096990", 
        "rc": 0, 
        "start": "2017-08-17 03:43:14.090532", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:43:14,147 p=11683 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:43:14,328 p=11683 u=root |  changed: [localhost]
2017-08-17 03:43:14,332 p=11683 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:43:14,350 p=11683 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:43:14,355 p=11683 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:43:14,547 p=11683 u=root |  changed: [localhost]
2017-08-17 03:43:14,553 p=11683 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:43:14,574 p=11683 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:43:14,579 p=11683 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:43:15,375 p=11683 u=root |  ok: [localhost]
2017-08-17 03:43:15,380 p=11683 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:43:25,767 p=11683 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:10.266951", "end": "2017-08-17 03:43:25.753063", "failed": true, "rc": 123, "start": "2017-08-17 03:43:15.486112", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "e5e0cb40fcd8", "stdout_lines": ["e5e0cb40fcd8"]}
2017-08-17 03:43:25,768 p=11683 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 03:43:25,768 p=11683 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:43:25,768 p=11683 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:50:24,578 p=11915 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:50:24,579 p=11915 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:50:24,698 p=11915 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:50:24,748 p=11915 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:50:25,291 p=11915 u=root |  ok: [localhost]
2017-08-17 03:50:25,297 p=11915 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:50:25,488 p=11915 u=root |  changed: [localhost]
2017-08-17 03:50:25,494 p=11915 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:50:25,516 p=11915 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007001", 
        "end": "2017-08-17 03:50:25.474003", 
        "rc": 0, 
        "start": "2017-08-17 03:50:25.467002", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:50:25,523 p=11915 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:50:25,711 p=11915 u=root |  changed: [localhost]
2017-08-17 03:50:25,716 p=11915 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:50:25,737 p=11915 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:50:25,742 p=11915 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:50:25,927 p=11915 u=root |  changed: [localhost]
2017-08-17 03:50:25,932 p=11915 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:50:25,950 p=11915 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:50:25,956 p=11915 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:50:26,790 p=11915 u=root |  ok: [localhost]
2017-08-17 03:50:26,796 p=11915 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:50:37,134 p=11915 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{ print $1 }' | xargs -I {} docker stop {}", "delta": "0:00:10.216326", "end": "2017-08-17 03:50:37.119237", "failed": true, "rc": 123, "start": "2017-08-17 03:50:26.902911", "stderr": "Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to stop container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "e5e0cb40fcd8", "stdout_lines": ["e5e0cb40fcd8"]}
2017-08-17 03:50:37,138 p=11915 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 03:50:37,138 p=11915 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:50:37,138 p=11915 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:51:43,387 p=12078 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:51:43,389 p=12078 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:51:43,508 p=12078 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:51:43,562 p=12078 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:51:44,068 p=12078 u=root |  ok: [localhost]
2017-08-17 03:51:44,073 p=12078 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:51:44,272 p=12078 u=root |  changed: [localhost]
2017-08-17 03:51:44,277 p=12078 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:51:44,301 p=12078 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005862", 
        "end": "2017-08-17 03:51:44.257391", 
        "rc": 0, 
        "start": "2017-08-17 03:51:44.251529", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:51:44,307 p=12078 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:51:44,485 p=12078 u=root |  changed: [localhost]
2017-08-17 03:51:44,489 p=12078 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:51:44,509 p=12078 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:51:44,514 p=12078 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:51:44,699 p=12078 u=root |  changed: [localhost]
2017-08-17 03:51:44,704 p=12078 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:51:44,724 p=12078 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:51:44,730 p=12078 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:51:45,561 p=12078 u=root |  ok: [localhost]
2017-08-17 03:51:45,567 p=12078 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:51:45,766 p=12078 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{ print $1 }' | xargs -I {} docker rm {}", "delta": "0:00:00.082598", "end": "2017-08-17 03:51:45.749528", "failed": true, "rc": 123, "start": "2017-08-17 03:51:45.666930", "stderr": "Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER", "stderr_lines": ["Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER"], "stdout": "", "stdout_lines": []}
2017-08-17 03:51:45,768 p=12078 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 03:51:45,768 p=12078 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:51:45,768 p=12078 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:52:16,134 p=12267 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:52:16,137 p=12267 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:52:16,264 p=12267 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:52:16,318 p=12267 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:52:16,851 p=12267 u=root |  ok: [localhost]
2017-08-17 03:52:16,856 p=12267 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:52:17,051 p=12267 u=root |  changed: [localhost]
2017-08-17 03:52:17,056 p=12267 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:52:17,078 p=12267 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005693", 
        "end": "2017-08-17 03:52:17.037121", 
        "rc": 0, 
        "start": "2017-08-17 03:52:17.031428", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:52:17,083 p=12267 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:52:17,304 p=12267 u=root |  changed: [localhost]
2017-08-17 03:52:17,309 p=12267 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:52:17,328 p=12267 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:52:17,333 p=12267 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:52:17,522 p=12267 u=root |  changed: [localhost]
2017-08-17 03:52:17,527 p=12267 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:52:17,547 p=12267 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:52:17,552 p=12267 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:52:18,358 p=12267 u=root |  ok: [localhost]
2017-08-17 03:52:18,363 p=12267 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:52:18,596 p=12267 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -f ancestor=slmpuppet:v1.0.0 | awk '{ print $1 }' | xargs -I {} docker rm {}", "delta": "0:00:00.119659", "end": "2017-08-17 03:52:18.583123", "failed": true, "rc": 123, "start": "2017-08-17 03:52:18.463464", "stderr": "Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER\nFailed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f", "stderr_lines": ["Failed to remove container (CONTAINER): Error response from daemon: No such container: CONTAINER", "Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f"], "stdout": "", "stdout_lines": []}
2017-08-17 03:52:18,597 p=12267 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 03:52:18,597 p=12267 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:52:18,597 p=12267 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:54:38,947 p=12402 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:54:38,949 p=12402 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:54:39,067 p=12402 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:54:39,118 p=12402 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:54:39,628 p=12402 u=root |  ok: [localhost]
2017-08-17 03:54:39,637 p=12402 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:54:39,838 p=12402 u=root |  changed: [localhost]
2017-08-17 03:54:39,843 p=12402 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:54:39,865 p=12402 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009715", 
        "end": "2017-08-17 03:54:39.821059", 
        "rc": 0, 
        "start": "2017-08-17 03:54:39.811344", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:54:39,870 p=12402 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:54:40,053 p=12402 u=root |  changed: [localhost]
2017-08-17 03:54:40,059 p=12402 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:54:40,080 p=12402 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:54:40,085 p=12402 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:54:40,261 p=12402 u=root |  changed: [localhost]
2017-08-17 03:54:40,265 p=12402 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:54:40,283 p=12402 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:54:40,289 p=12402 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:54:41,110 p=12402 u=root |  ok: [localhost]
2017-08-17 03:54:41,117 p=12402 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:54:41,334 p=12402 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker ps -a | awk '{ print $1,$2 }' | grep slmpuppet:v1.0.0 | awk '{print $1 }' | xargs -I {} docker rm {}", "delta": "0:00:00.086057", "end": "2017-08-17 03:54:41.318822", "failed": true, "rc": 123, "start": "2017-08-17 03:54:41.232765", "stderr": "Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f", "stderr_lines": ["Failed to remove container (e5e0cb40fcd8): Error response from daemon: Conflict, You cannot remove a running container. Stop the container before attempting removal or use -f"], "stdout": "", "stdout_lines": []}
2017-08-17 03:54:41,335 p=12402 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-17 03:54:41,335 p=12402 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:54:41,335 p=12402 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-17 03:56:38,961 p=12538 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 03:56:38,963 p=12538 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 03:56:39,078 p=12538 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 03:56:39,130 p=12538 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 03:56:39,657 p=12538 u=root |  ok: [localhost]
2017-08-17 03:56:39,662 p=12538 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 03:56:39,863 p=12538 u=root |  changed: [localhost]
2017-08-17 03:56:39,868 p=12538 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 03:56:39,893 p=12538 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005782", 
        "end": "2017-08-17 03:56:39.849037", 
        "rc": 0, 
        "start": "2017-08-17 03:56:39.843255", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 03:56:39,899 p=12538 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 03:56:40,086 p=12538 u=root |  changed: [localhost]
2017-08-17 03:56:40,090 p=12538 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 03:56:40,111 p=12538 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 03:56:40,117 p=12538 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 03:56:40,286 p=12538 u=root |  changed: [localhost]
2017-08-17 03:56:40,291 p=12538 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 03:56:40,311 p=12538 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 03:56:40,316 p=12538 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 03:56:41,145 p=12538 u=root |  ok: [localhost]
2017-08-17 03:56:41,151 p=12538 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 03:56:43,283 p=12538 u=root |  changed: [localhost]
2017-08-17 03:56:43,284 p=12538 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 03:56:43,285 p=12538 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-17 04:01:50,039 p=13141 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-17 04:01:50,041 p=13141 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-17 04:01:50,163 p=13141 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-17 04:01:50,218 p=13141 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-17 04:01:50,826 p=13141 u=root |  ok: [localhost]
2017-08-17 04:01:50,831 p=13141 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-17 04:01:51,015 p=13141 u=root |  changed: [localhost]
2017-08-17 04:01:51,020 p=13141 u=root |  TASK [Show the new slmpuppet tar bzip file  tag] **************************************************************************************************************************************
2017-08-17 04:01:51,049 p=13141 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005992", 
        "end": "2017-08-17 04:01:51.001459", 
        "rc": 0, 
        "start": "2017-08-17 04:01:50.995467", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-17 04:01:51,054 p=13141 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-17 04:01:51,234 p=13141 u=root |  changed: [localhost]
2017-08-17 04:01:51,238 p=13141 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-17 04:01:51,255 p=13141 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-17 04:01:51,261 p=13141 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-17 04:01:51,438 p=13141 u=root |  changed: [localhost]
2017-08-17 04:01:51,443 p=13141 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-17 04:01:51,462 p=13141 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-17 04:01:51,468 p=13141 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-17 04:01:52,319 p=13141 u=root |  ok: [localhost]
2017-08-17 04:01:52,324 p=13141 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-17 04:01:54,157 p=13141 u=root |  changed: [localhost]
2017-08-17 04:01:54,159 p=13141 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-17 04:01:54,159 p=13141 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-18 13:39:30,735 p=14544 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 13:39:30,736 p=14544 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 13:39:30,805 p=14544 u=root |  ERROR! no action detected in task. This often indicates a misspelled module name, or incorrect module path.

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 64, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


        - name: Stop & remove the {{ image }} container
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 64, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


        - name: Stop & remove the {{ image }} container
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-18 13:39:49,209 p=14554 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 13:39:49,211 p=14554 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 13:39:49,345 p=14554 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 13:39:49,431 p=14554 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 13:39:50,088 p=14554 u=root |  ok: [localhost]
2017-08-18 13:39:50,093 p=14554 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 13:39:50,296 p=14554 u=root |  changed: [localhost]
2017-08-18 13:39:50,302 p=14554 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 13:39:50,326 p=14554 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006716", 
        "end": "2017-08-18 13:39:50.281350", 
        "rc": 0, 
        "start": "2017-08-18 13:39:50.274634", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.0.0", 
        "stdout_lines": [
            "v1.0.0"
        ]
    }
}
2017-08-18 13:39:50,333 p=14554 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-18 13:39:50,559 p=14554 u=root |  changed: [localhost]
2017-08-18 13:39:50,563 p=14554 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 13:39:50,585 p=14554 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 13:39:50,590 p=14554 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 13:39:50,791 p=14554 u=root |  changed: [localhost]
2017-08-18 13:39:50,795 p=14554 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 13:39:50,816 p=14554 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 13:39:50,822 p=14554 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 13:39:50,839 p=14554 u=root |  skipping: [localhost]
2017-08-18 13:39:50,845 p=14554 u=root |  TASK [Stop the container using slmpuppet] *********************************************************************************************************************************************
2017-08-18 13:39:50,869 p=14554 u=root |  skipping: [localhost]
2017-08-18 13:39:50,872 p=14554 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 13:39:50,873 p=14554 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-18 13:42:01,330 p=14663 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 13:42:01,332 p=14663 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 13:42:01,449 p=14663 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 13:42:01,511 p=14663 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 13:42:02,067 p=14663 u=root |  ok: [localhost]
2017-08-18 13:42:02,073 p=14663 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 13:42:02,273 p=14663 u=root |  changed: [localhost]
2017-08-18 13:42:02,279 p=14663 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 13:42:02,300 p=14663 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006277", 
        "end": "2017-08-18 13:42:02.257866", 
        "rc": 0, 
        "start": "2017-08-18 13:42:02.251589", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 13:42:02,305 p=14663 u=root |  TASK [Get image tag for current slmpuppet image] **************************************************************************************************************************************
2017-08-18 13:42:02,505 p=14663 u=root |  changed: [localhost]
2017-08-18 13:42:02,509 p=14663 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 13:42:02,528 p=14663 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 13:42:02,534 p=14663 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 13:42:02,727 p=14663 u=root |  changed: [localhost]
2017-08-18 13:42:02,733 p=14663 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 13:42:02,754 p=14663 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 13:42:02,762 p=14663 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 13:42:04,682 p=14663 u=root |  changed: [localhost]
2017-08-18 13:42:04,687 p=14663 u=root |  TASK [Stop the container using slmpuppet] *********************************************************************************************************************************************
2017-08-18 13:42:05,018 p=14663 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "Unsupported parameters for (docker_container) module: tag. Supported parameters include: api_version,blkio_weight,cacert_path,capabilities,cert_path,cleanup,command,cpu_period,cpu_quota,cpu_shares,cpuset_cpus,cpuset_mems,debug,detach,devices,dns_opts,dns_search_domains,dns_servers,docker_host,entrypoint,env,env_file,etc_hosts,exposed_ports,filter_logger,force_kill,groups,hostname,ignore_image,image,interactive,ipc_mode,keep_volumes,kernel_memory,key_path,kill_signal,labels,links,log_driver,log_options,mac_address,memory,memory_reservation,memory_swap,memory_swappiness,name,network_mode,networks,oom_killer,oom_score_adj,paused,pid_mode,privileged,published_ports,pull,purge_networks,read_only,recreate,restart,restart_policy,restart_retries,security_opts,shm_size,ssl_version,state,stop_signal,stop_timeout,timeout,tls,tls_hostname,tls_verify,trust_image_content,tty,ulimits,user,uts,volume_driver,volumes,volumes_from"}
2017-08-18 13:42:05,020 p=14663 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 13:42:05,021 p=14663 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 13:42:05,021 p=14663 u=root |  localhost                  : ok=8    changed=4    unreachable=0    failed=1   
2017-08-18 17:44:56,106 p=15081 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 17:44:56,107 p=15081 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 17:44:56,235 p=15081 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 17:44:56,298 p=15081 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 17:44:56,923 p=15081 u=root |  ok: [localhost]
2017-08-18 17:44:56,929 p=15081 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 17:44:57,134 p=15081 u=root |  changed: [localhost]
2017-08-18 17:44:57,139 p=15081 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 17:44:57,160 p=15081 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007701", 
        "end": "2017-08-18 17:44:57.117958", 
        "rc": 0, 
        "start": "2017-08-18 17:44:57.110257", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 17:44:57,166 p=15081 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 17:44:57,368 p=15081 u=root |  changed: [localhost]
2017-08-18 17:44:57,372 p=15081 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 17:44:57,392 p=15081 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 17:44:57,398 p=15081 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 17:44:57,589 p=15081 u=root |  changed: [localhost]
2017-08-18 17:44:57,593 p=15081 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 17:44:57,615 p=15081 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 17:44:57,622 p=15081 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 17:44:58,369 p=15081 u=root |  ok: [localhost]
2017-08-18 17:44:58,374 p=15081 u=root |  TASK [Stop & remove the container using slmpuppet image] ******************************************************************************************************************************
2017-08-18 17:44:58,702 p=15081 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "missing required arguments: name"}
2017-08-18 17:44:58,703 p=15081 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 17:44:58,703 p=15081 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 17:44:58,704 p=15081 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=1   
2017-08-18 18:54:24,555 p=15345 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 18:54:24,556 p=15345 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 18:54:24,668 p=15345 u=root |  PLAY [Wait] ***************************************************************************************************************************************************************************
2017-08-18 18:54:24,728 p=15345 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 18:54:25,296 p=15345 u=root |  ok: [localhost]
2017-08-18 18:54:25,300 p=15345 u=root |  TASK [Check for wait] *****************************************************************************************************************************************************************
2017-08-18 18:54:25,489 p=15345 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.008174", "end": "2017-08-18 18:54:25.474619", "failed": true, "rc": 1, "start": "2017-08-18 18:54:25.466445", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stderr_lines": ["error: garbage option", "", "Usage:", " ps [options]", "", " Try 'ps --help <simple|list|output|threads|misc|all>'", "  or 'ps --help <s|l|o|t|m|a>'", " for additional help text.", "", "For more details see ps(1)."], "stdout": "", "stdout_lines": []}
2017-08-18 18:54:25,490 p=15345 u=root |  ...ignoring
2017-08-18 18:54:25,495 p=15345 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 18:54:25,517 p=15345 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.008174", 
        "end": "2017-08-18 18:54:25.474619", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-18 18:54:25.466445", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stderr_lines": [
            "error: garbage option", 
            "", 
            "Usage:", 
            " ps [options]", 
            "", 
            " Try 'ps --help <simple|list|output|threads|misc|all>'", 
            "  or 'ps --help <s|l|o|t|m|a>'", 
            " for additional help text.", 
            "", 
            "For more details see ps(1)."
        ], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 18:54:25,521 p=15345 u=root |  TASK [Wait] ***************************************************************************************************************************************************************************
2017-08-18 18:59:25,792 p=15345 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-18 18:59:25,793 p=15345 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-18 18:59:25,793 p=15345 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 18:59:25,793 p=15345 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-18 19:15:59,529 p=15457 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:15:59,530 p=15457 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:15:59,642 p=15457 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:15:59,697 p=15457 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:15:59,726 p=15457 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:15:59,732 p=15457 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:15:59,951 p=15457 u=root |  changed: [localhost]
2017-08-18 19:15:59,955 p=15457 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:15:59,982 p=15457 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009188", 
        "end": "2017-08-18 19:15:59.935041", 
        "rc": 0, 
        "start": "2017-08-18 19:15:59.925853", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:15:59,987 p=15457 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:16:00,194 p=15457 u=root |  changed: [localhost]
2017-08-18 19:16:00,196 p=15457 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:16:00,220 p=15457 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:16:00,226 p=15457 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:16:00,431 p=15457 u=root |  changed: [localhost]
2017-08-18 19:16:00,432 p=15457 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:16:00,461 p=15457 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:16:00,465 p=15457 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:16:00,483 p=15457 u=root |  skipping: [localhost]
2017-08-18 19:16:00,484 p=15457 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:16:00,484 p=15457 u=root |  localhost                  : ok=7    changed=3    unreachable=0    failed=0   
2017-08-18 19:19:26,763 p=15535 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:19:26,764 p=15535 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:19:26,879 p=15535 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:19:26,934 p=15535 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:19:26,952 p=15535 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 8, column 11, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- debug:\n    vae: {{ image }}\n          ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-18 19:19:26,953 p=15535 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:19:26,953 p=15535 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:19:26,954 p=15535 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-08-18 19:19:52,219 p=15548 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:19:52,220 p=15548 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:19:52,337 p=15548 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:19:52,393 p=15548 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:19:52,411 p=15548 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 8, column 11, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- debug:\n    var: {{ image }}\n          ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-18 19:19:52,413 p=15548 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:19:52,413 p=15548 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:19:52,413 p=15548 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-08-18 19:20:14,332 p=15561 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:20:14,333 p=15561 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:20:14,449 p=15561 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:20:14,508 p=15561 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:20:14,533 p=15561 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:20:14,538 p=15561 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:20:14,567 p=15561 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:20:14,572 p=15561 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:20:14,786 p=15561 u=root |  changed: [localhost]
2017-08-18 19:20:14,790 p=15561 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:20:14,824 p=15561 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.008151", 
        "end": "2017-08-18 19:20:14.770892", 
        "rc": 0, 
        "start": "2017-08-18 19:20:14.762741", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:20:14,829 p=15561 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:20:15,035 p=15561 u=root |  changed: [localhost]
2017-08-18 19:20:15,037 p=15561 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:20:15,062 p=15561 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:20:15,066 p=15561 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:20:15,262 p=15561 u=root |  changed: [localhost]
2017-08-18 19:20:15,264 p=15561 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:20:15,291 p=15561 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:20:15,295 p=15561 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:20:15,315 p=15561 u=root |  skipping: [localhost]
2017-08-18 19:20:15,317 p=15561 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:20:15,317 p=15561 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-18 19:20:31,385 p=15619 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:20:31,386 p=15619 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:20:31,493 p=15619 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:20:31,546 p=15619 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:20:31,581 p=15619 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:20:31,586 p=15619 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:20:31,608 p=15619 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:20:31,613 p=15619 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:20:31,821 p=15619 u=root |  changed: [localhost]
2017-08-18 19:20:31,825 p=15619 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:20:31,853 p=15619 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009101", 
        "end": "2017-08-18 19:20:31.806450", 
        "rc": 0, 
        "start": "2017-08-18 19:20:31.797349", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:20:31,857 p=15619 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:20:32,048 p=15619 u=root |  changed: [localhost]
2017-08-18 19:20:32,050 p=15619 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:20:32,070 p=15619 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:20:32,073 p=15619 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:20:32,305 p=15619 u=root |  changed: [localhost]
2017-08-18 19:20:32,307 p=15619 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:20:32,335 p=15619 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:20:32,339 p=15619 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:20:32,357 p=15619 u=root |  skipping: [localhost]
2017-08-18 19:20:32,358 p=15619 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:20:32,358 p=15619 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-18 19:21:44,419 p=15678 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:21:44,421 p=15678 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:21:44,536 p=15678 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:21:44,597 p=15678 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:21:44,615 p=15678 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "unexpected parameter type in action: <class 'ansible.parsing.yaml.objects.AnsibleSequence'>\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 7, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Set directory variables\n  ^ here\n\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 7, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: Set directory variables\n  ^ here\n"}
2017-08-18 19:21:44,616 p=15678 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:21:44,616 p=15678 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:21:44,617 p=15678 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-08-18 19:22:35,632 p=15691 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:22:35,633 p=15691 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:22:35,742 p=15691 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:22:35,803 p=15691 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:22:35,828 p=15691 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:22:35,837 p=15691 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:22:35,855 p=15691 u=root |  ok: [localhost]
2017-08-18 19:22:35,860 p=15691 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:22:36,066 p=15691 u=root |  changed: [localhost]
2017-08-18 19:22:36,071 p=15691 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:22:36,096 p=15691 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006903", 
        "end": "2017-08-18 19:22:36.049834", 
        "rc": 0, 
        "start": "2017-08-18 19:22:36.042931", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:22:36,101 p=15691 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:22:36,304 p=15691 u=root |  changed: [localhost]
2017-08-18 19:22:36,306 p=15691 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:22:36,333 p=15691 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:22:36,338 p=15691 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:22:36,523 p=15691 u=root |  changed: [localhost]
2017-08-18 19:22:36,525 p=15691 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:22:36,544 p=15691 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:22:36,547 p=15691 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:22:36,565 p=15691 u=root |  skipping: [localhost]
2017-08-18 19:22:36,567 p=15691 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:22:36,567 p=15691 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-18 19:23:51,262 p=15750 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:23:51,264 p=15750 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:23:51,378 p=15750 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:23:51,436 p=15750 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:23:51,462 p=15750 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:23:51,466 p=15750 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:23:51,490 p=15750 u=root |  ok: [localhost]
2017-08-18 19:23:51,493 p=15750 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:23:51,519 p=15750 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '/'. String: {{/depot}}"}
2017-08-18 19:23:51,522 p=15750 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:23:51,522 p=15750 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:23:51,522 p=15750 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-18 19:24:25,339 p=15767 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:24:25,341 p=15767 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:24:25,453 p=15767 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:24:25,506 p=15767 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:24:25,530 p=15767 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "Syntax Error while loading YAML.\n\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 13, column 11, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n- debug:\n    var: {{ zip_dir }}\n          ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-18 19:24:25,531 p=15767 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:24:25,531 p=15767 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:24:25,531 p=15767 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-08-18 19:24:52,433 p=15780 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:24:52,434 p=15780 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:24:52,541 p=15780 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:24:52,597 p=15780 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:24:52,634 p=15780 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:24:52,638 p=15780 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:24:52,656 p=15780 u=root |  ok: [localhost]
2017-08-18 19:24:52,658 p=15780 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:24:52,689 p=15780 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '/'. String: {{/depot}}"}
2017-08-18 19:24:52,690 p=15780 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:24:52,691 p=15780 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:24:52,691 p=15780 u=root |  localhost                  : ok=2    changed=0    unreachable=0    failed=1   
2017-08-18 19:25:22,196 p=15797 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:25:22,197 p=15797 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:25:22,315 p=15797 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:25:22,371 p=15797 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:25:22,394 p=15797 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:25:22,399 p=15797 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:25:22,420 p=15797 u=root |  ok: [localhost]
2017-08-18 19:25:22,423 p=15797 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:25:22,447 p=15797 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:25:22,449 p=15797 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:25:22,474 p=15797 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:25:22,478 p=15797 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:25:22,682 p=15797 u=root |  changed: [localhost]
2017-08-18 19:25:22,685 p=15797 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:25:22,711 p=15797 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006536", 
        "end": "2017-08-18 19:25:22.665690", 
        "rc": 0, 
        "start": "2017-08-18 19:25:22.659154", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:25:22,715 p=15797 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:25:22,916 p=15797 u=root |  changed: [localhost]
2017-08-18 19:25:22,918 p=15797 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:25:22,936 p=15797 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:25:22,940 p=15797 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:25:23,139 p=15797 u=root |  changed: [localhost]
2017-08-18 19:25:23,141 p=15797 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:25:23,171 p=15797 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:25:23,175 p=15797 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:25:23,195 p=15797 u=root |  skipping: [localhost]
2017-08-18 19:25:23,198 p=15797 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:25:23,198 p=15797 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-18 19:28:57,747 p=15864 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:28:57,748 p=15864 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:28:57,862 p=15864 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:28:57,918 p=15864 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:28:57,944 p=15864 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:28:57,949 p=15864 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:28:57,967 p=15864 u=root |  ok: [localhost]
2017-08-18 19:28:57,969 p=15864 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:28:57,989 p=15864 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:28:57,991 p=15864 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:28:58,021 p=15864 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:28:58,026 p=15864 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:28:58,245 p=15864 u=root |  changed: [localhost]
2017-08-18 19:28:58,249 p=15864 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:28:58,276 p=15864 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005953", 
        "end": "2017-08-18 19:28:58.230085", 
        "rc": 0, 
        "start": "2017-08-18 19:28:58.224132", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:28:58,280 p=15864 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:28:58,474 p=15864 u=root |  changed: [localhost]
2017-08-18 19:28:58,476 p=15864 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:28:58,497 p=15864 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:28:58,502 p=15864 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:28:58,689 p=15864 u=root |  changed: [localhost]
2017-08-18 19:28:58,691 p=15864 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:28:58,710 p=15864 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:28:58,714 p=15864 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:28:58,733 p=15864 u=root |  skipping: [localhost]
2017-08-18 19:28:58,734 p=15864 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:28:58,734 p=15864 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-18 19:29:26,705 p=15928 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:29:26,706 p=15928 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:29:26,818 p=15928 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:29:26,872 p=15928 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:29:26,904 p=15928 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:29:26,911 p=15928 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:29:26,935 p=15928 u=root |  ok: [localhost]
2017-08-18 19:29:26,938 p=15928 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:29:26,961 p=15928 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:29:26,963 p=15928 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:29:26,977 p=15928 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: ansible.vars.unsafe_proxy.AnsibleUnsafeText object has no element ()\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 15, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- debug:\n  ^ here\n"}
2017-08-18 19:29:26,980 p=15928 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:29:26,980 p=15928 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:29:26,980 p=15928 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-18 19:30:47,216 p=15948 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:30:47,218 p=15948 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:30:47,329 p=15948 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:30:47,397 p=15948 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:30:47,430 p=15948 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:30:47,435 p=15948 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:30:47,454 p=15948 u=root |  ok: [localhost]
2017-08-18 19:30:47,457 p=15948 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:30:47,483 p=15948 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:30:47,487 p=15948 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:30:47,506 p=15948 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: ansible.vars.unsafe_proxy.AnsibleUnsafeText object has no element ()\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 15, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- debug:\n  ^ here\n"}
2017-08-18 19:30:47,508 p=15948 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:30:47,508 p=15948 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:30:47,508 p=15948 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=1   
2017-08-18 19:51:17,392 p=15969 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:51:17,394 p=15969 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:51:17,513 p=15969 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:51:17,572 p=15969 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:51:17,596 p=15969 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:51:17,600 p=15969 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:51:17,619 p=15969 u=root |  ok: [localhost]
2017-08-18 19:51:17,622 p=15969 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:51:17,649 p=15969 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:51:17,652 p=15969 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:51:17,681 p=15969 u=root |  ok: [localhost] => {
    "d": "VARIABLE IS NOT DEFINED!"
}
2017-08-18 19:51:17,687 p=15969 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:51:17,900 p=15969 u=root |  changed: [localhost]
2017-08-18 19:51:17,904 p=15969 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:51:17,929 p=15969 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009183", 
        "end": "2017-08-18 19:51:17.885033", 
        "rc": 0, 
        "start": "2017-08-18 19:51:17.875850", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:51:17,933 p=15969 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:51:18,129 p=15969 u=root |  changed: [localhost]
2017-08-18 19:51:18,131 p=15969 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:51:18,155 p=15969 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:51:18,158 p=15969 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:51:18,356 p=15969 u=root |  changed: [localhost]
2017-08-18 19:51:18,358 p=15969 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:51:18,376 p=15969 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:51:18,380 p=15969 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:51:18,395 p=15969 u=root |  skipping: [localhost]
2017-08-18 19:51:18,397 p=15969 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:51:18,397 p=15969 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-18 19:51:55,118 p=16032 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:51:55,120 p=16032 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:51:55,241 p=16032 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:51:55,303 p=16032 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:51:55,332 p=16032 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:51:55,337 p=16032 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:51:55,357 p=16032 u=root |  ok: [localhost]
2017-08-18 19:51:55,359 p=16032 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:51:55,381 p=16032 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:51:55,384 p=16032 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:51:55,407 p=16032 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:51:55,413 p=16032 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:51:55,625 p=16032 u=root |  changed: [localhost]
2017-08-18 19:51:55,629 p=16032 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:51:55,653 p=16032 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'docker_images.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006810", 
        "end": "2017-08-18 19:51:55.608565", 
        "rc": 0, 
        "start": "2017-08-18 19:51:55.601755", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:51:55,657 p=16032 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:51:55,864 p=16032 u=root |  changed: [localhost]
2017-08-18 19:51:55,866 p=16032 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:51:55,884 p=16032 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:51:55,888 p=16032 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:51:56,103 p=16032 u=root |  changed: [localhost]
2017-08-18 19:51:56,105 p=16032 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:51:56,128 p=16032 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:51:56,132 p=16032 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:51:56,149 p=16032 u=root |  skipping: [localhost]
2017-08-18 19:51:56,150 p=16032 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:51:56,151 p=16032 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-18 19:57:31,264 p=16097 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:57:31,265 p=16097 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:57:31,381 p=16097 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:57:31,432 p=16097 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:57:31,458 p=16097 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:57:31,464 p=16097 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:57:31,483 p=16097 u=root |  ok: [localhost]
2017-08-18 19:57:31,485 p=16097 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:57:31,508 p=16097 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:57:31,511 p=16097 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:57:31,549 p=16097 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:57:31,553 p=16097 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:57:31,765 p=16097 u=root |  changed: [localhost]
2017-08-18 19:57:31,768 p=16097 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:57:31,791 p=16097 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005891", 
        "end": "2017-08-18 19:57:31.750394", 
        "rc": 0, 
        "start": "2017-08-18 19:57:31.744503", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:57:31,797 p=16097 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:57:31,992 p=16097 u=root |  changed: [localhost]
2017-08-18 19:57:31,994 p=16097 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:57:32,015 p=16097 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:57:32,018 p=16097 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:57:32,217 p=16097 u=root |  changed: [localhost]
2017-08-18 19:57:32,219 p=16097 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:57:32,241 p=16097 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:57:32,245 p=16097 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:57:32,263 p=16097 u=root |  skipping: [localhost]
2017-08-18 19:57:32,265 p=16097 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:57:32,265 p=16097 u=root |  localhost                  : ok=10   changed=3    unreachable=0    failed=0   
2017-08-18 19:58:15,265 p=16160 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:58:15,267 p=16160 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:58:15,381 p=16160 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:58:15,439 p=16160 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:58:15,459 p=16160 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "reason": "'image' is not a valid attribute for a Task\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/include_upg_image.yml': line 18, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- set_fact:\n  ^ here\n"}
2017-08-18 19:58:15,460 p=16160 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/upg_image.retry

2017-08-18 19:58:15,461 p=16160 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:58:15,461 p=16160 u=root |  localhost                  : ok=0    changed=0    unreachable=0    failed=1   
2017-08-18 19:58:35,246 p=16173 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:58:35,247 p=16173 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:58:35,360 p=16173 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:58:35,414 p=16173 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:58:35,441 p=16173 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:58:35,447 p=16173 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:58:35,469 p=16173 u=root |  ok: [localhost]
2017-08-18 19:58:35,473 p=16173 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:58:35,502 p=16173 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:58:35,505 p=16173 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:58:35,530 p=16173 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:58:35,532 p=16173 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-18 19:58:35,556 p=16173 u=root |  ok: [localhost]
2017-08-18 19:58:35,560 p=16173 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:58:35,774 p=16173 u=root |  changed: [localhost]
2017-08-18 19:58:35,778 p=16173 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:58:35,807 p=16173 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006102", 
        "end": "2017-08-18 19:58:35.760437", 
        "rc": 0, 
        "start": "2017-08-18 19:58:35.754335", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:58:35,813 p=16173 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:58:36,005 p=16173 u=root |  changed: [localhost]
2017-08-18 19:58:36,007 p=16173 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:58:36,028 p=16173 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:58:36,031 p=16173 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:58:36,214 p=16173 u=root |  changed: [localhost]
2017-08-18 19:58:36,217 p=16173 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:58:36,237 p=16173 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:58:36,242 p=16173 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:58:36,262 p=16173 u=root |  skipping: [localhost]
2017-08-18 19:58:36,264 p=16173 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:58:36,264 p=16173 u=root |  localhost                  : ok=11   changed=3    unreachable=0    failed=0   
2017-08-18 19:59:44,946 p=16240 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 19:59:44,947 p=16240 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 19:59:45,067 p=16240 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 19:59:45,125 p=16240 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 19:59:45,157 p=16240 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 19:59:45,164 p=16240 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 19:59:45,190 p=16240 u=root |  ok: [localhost]
2017-08-18 19:59:45,192 p=16240 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:59:45,213 p=16240 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 19:59:45,215 p=16240 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 19:59:45,242 p=16240 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 19:59:45,244 p=16240 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-18 19:59:45,264 p=16240 u=root |  ok: [localhost]
2017-08-18 19:59:45,269 p=16240 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 19:59:45,491 p=16240 u=root |  changed: [localhost]
2017-08-18 19:59:45,494 p=16240 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 19:59:45,518 p=16240 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006201", 
        "end": "2017-08-18 19:59:45.476818", 
        "rc": 0, 
        "start": "2017-08-18 19:59:45.470617", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 19:59:45,525 p=16240 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 19:59:45,710 p=16240 u=root |  changed: [localhost]
2017-08-18 19:59:45,712 p=16240 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 19:59:45,733 p=16240 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 19:59:45,736 p=16240 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 19:59:45,943 p=16240 u=root |  changed: [localhost]
2017-08-18 19:59:45,946 p=16240 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 19:59:45,966 p=16240 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 19:59:45,970 p=16240 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 19:59:45,993 p=16240 u=root |  skipping: [localhost]
2017-08-18 19:59:45,995 p=16240 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 19:59:45,995 p=16240 u=root |  localhost                  : ok=11   changed=3    unreachable=0    failed=0   
2017-08-18 20:00:39,964 p=16305 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:00:39,965 p=16305 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:00:40,072 p=16305 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 20:00:40,126 p=16305 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-18 20:00:40,152 p=16305 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-18 20:00:40,159 p=16305 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-18 20:00:40,177 p=16305 u=root |  ok: [localhost]
2017-08-18 20:00:40,179 p=16305 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 20:00:40,199 p=16305 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-18 20:00:40,202 p=16305 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 20:00:40,234 p=16305 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-18 20:00:40,236 p=16305 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-18 20:00:40,266 p=16305 u=root |  ok: [localhost]
2017-08-18 20:00:40,268 p=16305 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 20:00:40,288 p=16305 u=root |  ok: [localhost] => {
    "dkr_image": "docker_images"
}
2017-08-18 20:00:40,291 p=16305 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-18 20:00:40,498 p=16305 u=root |  changed: [localhost]
2017-08-18 20:00:40,503 p=16305 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-18 20:00:40,528 p=16305 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005636", 
        "end": "2017-08-18 20:00:40.483809", 
        "rc": 0, 
        "start": "2017-08-18 20:00:40.478173", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 20:00:40,533 p=16305 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-18 20:00:40,712 p=16305 u=root |  changed: [localhost]
2017-08-18 20:00:40,714 p=16305 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 20:00:40,736 p=16305 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-18 20:00:40,740 p=16305 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-18 20:00:40,934 p=16305 u=root |  changed: [localhost]
2017-08-18 20:00:40,936 p=16305 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 20:00:40,957 p=16305 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-18 20:00:40,961 p=16305 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-18 20:00:40,981 p=16305 u=root |  skipping: [localhost]
2017-08-18 20:00:40,985 p=16305 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 20:00:40,985 p=16305 u=root |  localhost                  : ok=12   changed=3    unreachable=0    failed=0   
2017-08-18 20:26:27,809 p=16395 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:26:27,810 p=16395 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:26:27,925 p=16395 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 20:26:27,984 p=16395 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 20:26:28,533 p=16395 u=root |  ok: [localhost]
2017-08-18 20:26:28,539 p=16395 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 20:26:28,747 p=16395 u=root |  changed: [localhost]
2017-08-18 20:26:28,753 p=16395 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 20:26:28,777 p=16395 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006763", 
        "end": "2017-08-18 20:26:28.730799", 
        "rc": 0, 
        "start": "2017-08-18 20:26:28.724036", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 20:26:28,782 p=16395 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 20:26:28,980 p=16395 u=root |  changed: [localhost]
2017-08-18 20:26:28,984 p=16395 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 20:26:29,003 p=16395 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 20:26:29,012 p=16395 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 20:26:29,212 p=16395 u=root |  changed: [localhost]
2017-08-18 20:26:29,217 p=16395 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 20:26:29,241 p=16395 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 20:26:29,246 p=16395 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 20:26:29,926 p=16395 u=root |  ok: [localhost]
2017-08-18 20:26:29,928 p=16395 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 20:26:29,928 p=16395 u=root |  localhost                  : ok=8    changed=3    unreachable=0    failed=0   
2017-08-18 20:27:29,279 p=16512 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:27:29,281 p=16512 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:27:29,405 p=16512 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 20:27:29,462 p=16512 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 20:27:29,976 p=16512 u=root |  ok: [localhost]
2017-08-18 20:27:29,981 p=16512 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 20:27:30,185 p=16512 u=root |  changed: [localhost]
2017-08-18 20:27:30,190 p=16512 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 20:27:30,217 p=16512 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006447", 
        "end": "2017-08-18 20:27:30.170366", 
        "rc": 0, 
        "start": "2017-08-18 20:27:30.163919", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 20:27:30,224 p=16512 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 20:27:30,420 p=16512 u=root |  changed: [localhost]
2017-08-18 20:27:30,424 p=16512 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 20:27:30,446 p=16512 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 20:27:30,452 p=16512 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 20:27:30,658 p=16512 u=root |  changed: [localhost]
2017-08-18 20:27:30,662 p=16512 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 20:27:30,683 p=16512 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 20:27:30,689 p=16512 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 20:27:31,530 p=16512 u=root |  changed: [localhost]
2017-08-18 20:27:31,532 p=16512 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 20:27:31,532 p=16512 u=root |  localhost                  : ok=8    changed=4    unreachable=0    failed=0   
2017-08-18 20:30:32,042 p=16641 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:30:32,043 p=16641 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:30:32,093 p=16641 u=root |  ERROR! conflicting action statements: shell, copy

The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


        - name: Copy the new {{ image }} tar bzip file to /tmp
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 51, column 11, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:


        - name: Copy the new {{ image }} tar bzip file to /tmp
          ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-18 20:30:45,435 p=16650 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:30:45,438 p=16650 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:30:45,551 p=16650 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 20:30:45,613 p=16650 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 20:30:46,176 p=16650 u=root |  ok: [localhost]
2017-08-18 20:30:46,182 p=16650 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 20:30:46,395 p=16650 u=root |  changed: [localhost]
2017-08-18 20:30:46,400 p=16650 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 20:30:46,424 p=16650 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007941", 
        "end": "2017-08-18 20:30:46.380418", 
        "rc": 0, 
        "start": "2017-08-18 20:30:46.372477", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 20:30:46,428 p=16650 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 20:30:46,615 p=16650 u=root |  changed: [localhost]
2017-08-18 20:30:46,621 p=16650 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 20:30:46,645 p=16650 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 20:30:46,651 p=16650 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 20:30:46,849 p=16650 u=root |  changed: [localhost]
2017-08-18 20:30:46,855 p=16650 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 20:30:46,878 p=16650 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 20:30:46,884 p=16650 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 20:30:47,499 p=16650 u=root |  ok: [localhost]
2017-08-18 20:30:47,504 p=16650 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-18 20:30:49,820 p=16650 u=root |  changed: [localhost]
2017-08-18 20:30:49,821 p=16650 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 20:30:49,821 p=16650 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=0   
2017-08-18 20:35:14,088 p=16887 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:35:14,090 p=16887 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:35:14,101 p=16887 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 75, column 25, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

        - name: Remove existing image if versions dont match (force rebuild)
            docker_image:
                        ^ here

2017-08-18 20:35:40,945 p=16896 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 20:35:40,947 p=16896 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 20:35:41,064 p=16896 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 20:35:41,128 p=16896 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 20:35:41,672 p=16896 u=root |  ok: [localhost]
2017-08-18 20:35:41,678 p=16896 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 20:35:41,882 p=16896 u=root |  changed: [localhost]
2017-08-18 20:35:41,887 p=16896 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 20:35:41,911 p=16896 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.009373", 
        "end": "2017-08-18 20:35:41.866720", 
        "rc": 0, 
        "start": "2017-08-18 20:35:41.857347", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 20:35:41,916 p=16896 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 20:35:42,096 p=16896 u=root |  changed: [localhost]
2017-08-18 20:35:42,100 p=16896 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 20:35:42,120 p=16896 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 20:35:42,125 p=16896 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 20:35:42,313 p=16896 u=root |  changed: [localhost]
2017-08-18 20:35:42,317 p=16896 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 20:35:42,339 p=16896 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 20:35:42,345 p=16896 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 20:35:42,974 p=16896 u=root |  ok: [localhost]
2017-08-18 20:35:42,979 p=16896 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-18 20:35:43,141 p=16896 u=root |  changed: [localhost]
2017-08-18 20:35:43,145 p=16896 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] *******************************************************************************************************************
2017-08-18 20:35:43,560 p=16896 u=root |  ok: [localhost]
2017-08-18 20:35:43,562 p=16896 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 20:35:43,562 p=16896 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-18 21:27:19,008 p=17069 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:27:19,009 p=17069 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:27:19,142 p=17069 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:27:19,207 p=17069 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:27:19,784 p=17069 u=root |  ok: [localhost]
2017-08-18 21:27:19,790 p=17069 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:27:20,002 p=17069 u=root |  changed: [localhost]
2017-08-18 21:27:20,008 p=17069 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:27:20,032 p=17069 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006583", 
        "end": "2017-08-18 21:27:19.987448", 
        "rc": 0, 
        "start": "2017-08-18 21:27:19.980865", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:27:20,036 p=17069 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:27:20,235 p=17069 u=root |  changed: [localhost]
2017-08-18 21:27:20,240 p=17069 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:27:20,261 p=17069 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:27:20,266 p=17069 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:27:20,455 p=17069 u=root |  changed: [localhost]
2017-08-18 21:27:20,459 p=17069 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:27:20,481 p=17069 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:27:20,488 p=17069 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:27:21,193 p=17069 u=root |  ok: [localhost]
2017-08-18 21:27:21,198 p=17069 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:27:21,381 p=17069 u=root |  changed: [localhost]
2017-08-18 21:27:21,386 p=17069 u=root |  TASK [Stop & remove the container using slmpuppet image] ******************************************************************************************************************************
2017-08-18 21:27:21,697 p=17069 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "missing required arguments: name"}
2017-08-18 21:27:21,698 p=17069 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:27:21,698 p=17069 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:27:21,698 p=17069 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=1   
2017-08-18 21:28:35,002 p=17201 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:28:35,003 p=17201 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:28:35,129 p=17201 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:28:35,186 p=17201 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:28:35,705 p=17201 u=root |  ok: [localhost]
2017-08-18 21:28:35,710 p=17201 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:28:35,915 p=17201 u=root |  changed: [localhost]
2017-08-18 21:28:35,920 p=17201 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:28:35,943 p=17201 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005780", 
        "end": "2017-08-18 21:28:35.900378", 
        "rc": 0, 
        "start": "2017-08-18 21:28:35.894598", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:28:35,952 p=17201 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:28:36,147 p=17201 u=root |  changed: [localhost]
2017-08-18 21:28:36,151 p=17201 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:28:36,170 p=17201 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:28:36,175 p=17201 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:28:36,367 p=17201 u=root |  changed: [localhost]
2017-08-18 21:28:36,371 p=17201 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:28:36,393 p=17201 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:28:36,399 p=17201 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:28:37,021 p=17201 u=root |  ok: [localhost]
2017-08-18 21:28:37,027 p=17201 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:28:37,188 p=17201 u=root |  changed: [localhost]
2017-08-18 21:28:37,192 p=17201 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 21:28:37,221 p=17201 u=root |  ok: [localhost] => {
    "container_id": {
        "changed": true, 
        "cmd": "docker ps -a | grep slmpuppet:v1.0.0 | awk '{print $1}'", 
        "delta": "0:00:00.041910", 
        "end": "2017-08-18 21:28:37.172242", 
        "rc": 0, 
        "start": "2017-08-18 21:28:37.130332", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-18 21:28:37,228 p=17201 u=root |  TASK [Stop & remove the container using slmpuppet image] ******************************************************************************************************************************
2017-08-18 21:28:37,557 p=17201 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "missing required arguments: name"}
2017-08-18 21:28:37,558 p=17201 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:28:37,558 p=17201 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:28:37,558 p=17201 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:29:36,503 p=17441 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:29:36,505 p=17441 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:29:36,635 p=17441 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:29:36,699 p=17441 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:29:37,271 p=17441 u=root |  ok: [localhost]
2017-08-18 21:29:37,277 p=17441 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:29:37,482 p=17441 u=root |  changed: [localhost]
2017-08-18 21:29:37,490 p=17441 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:29:37,519 p=17441 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006548", 
        "end": "2017-08-18 21:29:37.465344", 
        "rc": 0, 
        "start": "2017-08-18 21:29:37.458796", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:29:37,524 p=17441 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:29:37,712 p=17441 u=root |  changed: [localhost]
2017-08-18 21:29:37,716 p=17441 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:29:37,734 p=17441 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:29:37,739 p=17441 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:29:37,932 p=17441 u=root |  changed: [localhost]
2017-08-18 21:29:37,936 p=17441 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:29:37,957 p=17441 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:29:37,963 p=17441 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:29:38,589 p=17441 u=root |  ok: [localhost]
2017-08-18 21:29:38,596 p=17441 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:29:38,766 p=17441 u=root |  changed: [localhost]
2017-08-18 21:29:38,772 p=17441 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-18 21:29:38,799 p=17441 u=root |  ok: [localhost] => {
    "container_id": {
        "changed": true, 
        "cmd": "docker ps -a | grep slmpuppet:v1.0.0 | awk '{print $1}'", 
        "delta": "0:00:00.042342", 
        "end": "2017-08-18 21:29:38.752378", 
        "rc": 0, 
        "start": "2017-08-18 21:29:38.710036", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "5936ae9d363c", 
        "stdout_lines": [
            "5936ae9d363c"
        ]
    }
}
2017-08-18 21:29:38,806 p=17441 u=root |  TASK [Stop & remove the container using slmpuppet image] ******************************************************************************************************************************
2017-08-18 21:29:39,136 p=17441 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "failed": true, "msg": "missing required arguments: name"}
2017-08-18 21:29:39,137 p=17441 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:29:39,137 p=17441 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:29:39,137 p=17441 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:43:38,327 p=17655 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:43:38,329 p=17655 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:43:38,461 p=17655 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:43:38,517 p=17655 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:43:39,094 p=17655 u=root |  ok: [localhost]
2017-08-18 21:43:39,100 p=17655 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:43:39,305 p=17655 u=root |  changed: [localhost]
2017-08-18 21:43:39,310 p=17655 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:43:39,337 p=17655 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006142", 
        "end": "2017-08-18 21:43:39.290060", 
        "rc": 0, 
        "start": "2017-08-18 21:43:39.283918", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:43:39,345 p=17655 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:43:39,536 p=17655 u=root |  changed: [localhost]
2017-08-18 21:43:39,543 p=17655 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:43:39,571 p=17655 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:43:39,581 p=17655 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:43:39,778 p=17655 u=root |  changed: [localhost]
2017-08-18 21:43:39,783 p=17655 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:43:39,807 p=17655 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:43:39,814 p=17655 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:43:40,480 p=17655 u=root |  ok: [localhost]
2017-08-18 21:43:40,485 p=17655 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:43:40,657 p=17655 u=root |  changed: [localhost]
2017-08-18 21:43:40,661 p=17655 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:43:40,687 p=17655 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:43:40,692 p=17655 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:43:40,723 p=17655 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor=\"{{ image_id.stdout }}\" --format '{{.Names}}'"}
2017-08-18 21:43:40,724 p=17655 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:43:40,724 p=17655 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:43:40,724 p=17655 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:44:13,257 p=17785 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:44:13,259 p=17785 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:44:13,378 p=17785 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:44:13,436 p=17785 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:44:13,956 p=17785 u=root |  ok: [localhost]
2017-08-18 21:44:13,962 p=17785 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:44:14,167 p=17785 u=root |  changed: [localhost]
2017-08-18 21:44:14,172 p=17785 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:44:14,199 p=17785 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006474", 
        "end": "2017-08-18 21:44:14.151322", 
        "rc": 0, 
        "start": "2017-08-18 21:44:14.144848", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:44:14,204 p=17785 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:44:14,399 p=17785 u=root |  changed: [localhost]
2017-08-18 21:44:14,406 p=17785 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:44:14,427 p=17785 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:44:14,432 p=17785 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:44:14,635 p=17785 u=root |  changed: [localhost]
2017-08-18 21:44:14,639 p=17785 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:44:14,660 p=17785 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:44:14,665 p=17785 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:44:15,298 p=17785 u=root |  ok: [localhost]
2017-08-18 21:44:15,303 p=17785 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:44:15,474 p=17785 u=root |  changed: [localhost]
2017-08-18 21:44:15,478 p=17785 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:44:15,503 p=17785 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:44:15,510 p=17785 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:44:15,528 p=17785 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor={{ image_id.stdout }} --format '{{.Names}}'"}
2017-08-18 21:44:15,529 p=17785 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:44:15,530 p=17785 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:44:15,530 p=17785 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:45:15,416 p=17915 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:45:15,418 p=17915 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:45:15,535 p=17915 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:45:15,594 p=17915 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:45:16,122 p=17915 u=root |  ok: [localhost]
2017-08-18 21:45:16,129 p=17915 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:45:16,338 p=17915 u=root |  changed: [localhost]
2017-08-18 21:45:16,343 p=17915 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:45:16,366 p=17915 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006209", 
        "end": "2017-08-18 21:45:16.321653", 
        "rc": 0, 
        "start": "2017-08-18 21:45:16.315444", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:45:16,371 p=17915 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:45:16,563 p=17915 u=root |  changed: [localhost]
2017-08-18 21:45:16,567 p=17915 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:45:16,587 p=17915 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:45:16,599 p=17915 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:45:16,798 p=17915 u=root |  changed: [localhost]
2017-08-18 21:45:16,802 p=17915 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:45:16,825 p=17915 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:45:16,832 p=17915 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:45:17,441 p=17915 u=root |  ok: [localhost]
2017-08-18 21:45:17,446 p=17915 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:45:17,616 p=17915 u=root |  changed: [localhost]
2017-08-18 21:45:17,620 p=17915 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:45:17,642 p=17915 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:45:17,647 p=17915 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:45:17,668 p=17915 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor='{{ image_id.stdout }}' --format '{{.Names}}'"}
2017-08-18 21:45:17,669 p=17915 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:45:17,669 p=17915 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:45:17,669 p=17915 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:45:36,644 p=18045 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:45:36,645 p=18045 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:45:36,756 p=18045 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:45:36,814 p=18045 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:45:37,347 p=18045 u=root |  ok: [localhost]
2017-08-18 21:45:37,352 p=18045 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:45:37,551 p=18045 u=root |  changed: [localhost]
2017-08-18 21:45:37,557 p=18045 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:45:37,581 p=18045 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006056", 
        "end": "2017-08-18 21:45:37.536079", 
        "rc": 0, 
        "start": "2017-08-18 21:45:37.530023", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:45:37,587 p=18045 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:45:37,783 p=18045 u=root |  changed: [localhost]
2017-08-18 21:45:37,787 p=18045 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:45:37,810 p=18045 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:45:37,815 p=18045 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:45:37,999 p=18045 u=root |  changed: [localhost]
2017-08-18 21:45:38,003 p=18045 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:45:38,024 p=18045 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:45:38,031 p=18045 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:45:38,650 p=18045 u=root |  ok: [localhost]
2017-08-18 21:45:38,655 p=18045 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:45:38,814 p=18045 u=root |  changed: [localhost]
2017-08-18 21:45:38,818 p=18045 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:45:38,850 p=18045 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:45:38,855 p=18045 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:45:38,874 p=18045 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor={{ image_id.stdout }} --format '{{.Names}}'"}
2017-08-18 21:45:38,875 p=18045 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:45:38,875 p=18045 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:45:38,876 p=18045 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:46:20,236 p=18175 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:46:20,237 p=18175 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:46:20,357 p=18175 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:46:20,416 p=18175 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:46:20,940 p=18175 u=root |  ok: [localhost]
2017-08-18 21:46:20,945 p=18175 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:46:21,154 p=18175 u=root |  changed: [localhost]
2017-08-18 21:46:21,160 p=18175 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:46:21,186 p=18175 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006221", 
        "end": "2017-08-18 21:46:21.139435", 
        "rc": 0, 
        "start": "2017-08-18 21:46:21.133214", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:46:21,191 p=18175 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:21,388 p=18175 u=root |  changed: [localhost]
2017-08-18 21:46:21,392 p=18175 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:46:21,411 p=18175 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:46:21,416 p=18175 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:46:21,607 p=18175 u=root |  changed: [localhost]
2017-08-18 21:46:21,611 p=18175 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:46:21,633 p=18175 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:46:21,639 p=18175 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:46:22,248 p=18175 u=root |  ok: [localhost]
2017-08-18 21:46:22,253 p=18175 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:46:22,421 p=18175 u=root |  changed: [localhost]
2017-08-18 21:46:22,425 p=18175 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:46:22,447 p=18175 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:46:22,452 p=18175 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:22,471 p=18175 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor=image_id.stdout --format '{{.Names}}'"}
2017-08-18 21:46:22,472 p=18175 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:46:22,472 p=18175 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:46:22,472 p=18175 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:46:29,707 p=18304 u=root |  Using /etc/ansible/ansible.cfg as config file
2017-08-18 21:46:29,709 p=18304 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:46:29,711 p=18304 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:46:29,766 p=18304 u=root |  Loading callback plugin default of type stdout, v2.0 from /usr/lib/python2.7/site-packages/ansible/plugins/callback/__init__.pyc
2017-08-18 21:46:29,793 p=18304 u=root |  PLAYBOOK: site.yml ********************************************************************************************************************************************************************
2017-08-18 21:46:29,793 p=18304 u=root |  1 plays in site.yml
2017-08-18 21:46:29,847 p=18304 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:46:29,906 p=18304 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:46:30,118 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/system/setup.py
2017-08-18 21:46:30,442 p=18304 u=root |  ok: [localhost]
2017-08-18 21:46:30,442 p=18304 u=root |  META: ran handlers
2017-08-18 21:46:30,447 p=18304 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:46:30,447 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:18
2017-08-18 21:46:30,547 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-18 21:46:30,651 p=18304 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
    "delta": "0:00:00.007041", 
    "end": "2017-08-18 21:46:30.637028", 
    "invocation": {
        "module_args": {
            "_raw_params": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-18 21:46:30.629987", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "v1.1.0", 
    "stdout_lines": [
        "v1.1.0"
    ]
}
2017-08-18 21:46:30,659 p=18304 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:46:30,659 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:24
2017-08-18 21:46:30,685 p=18304 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007041", 
        "end": "2017-08-18 21:46:30.637028", 
        "rc": 0, 
        "start": "2017-08-18 21:46:30.629987", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:46:30,693 p=18304 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:30,693 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:28
2017-08-18 21:46:30,710 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-18 21:46:30,908 p=18304 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $1 \":\" $2;}'", 
    "delta": "0:00:00.097880", 
    "end": "2017-08-18 21:46:30.892260", 
    "invocation": {
        "module_args": {
            "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $1 \":\" $2;}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-18 21:46:30.794380", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "slmpuppet:v1.0.0", 
    "stdout_lines": [
        "slmpuppet:v1.0.0"
    ]
}
2017-08-18 21:46:30,912 p=18304 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:46:30,912 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:34
2017-08-18 21:46:30,930 p=18304 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:46:30,935 p=18304 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:46:30,935 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:38
2017-08-18 21:46:30,956 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-18 21:46:31,128 p=18304 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "docker images | grep \"^slmpuppet\" | awk '{print $3;}'", 
    "delta": "0:00:00.067174", 
    "end": "2017-08-18 21:46:31.109469", 
    "invocation": {
        "module_args": {
            "_raw_params": "docker images | grep \"^slmpuppet\" | awk '{print $3;}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-18 21:46:31.042295", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "2a395f549ed5", 
    "stdout_lines": [
        "2a395f549ed5"
    ]
}
2017-08-18 21:46:31,132 p=18304 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:46:31,132 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:44
2017-08-18 21:46:31,151 p=18304 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:46:31,156 p=18304 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:46:31,157 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:51
2017-08-18 21:46:31,272 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/files/stat.py
2017-08-18 21:46:31,690 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/files/file.py
2017-08-18 21:46:31,790 p=18304 u=root |  ok: [localhost] => {
    "changed": false, 
    "checksum": "65986c625e4e9adf9fbdd031a99ba3a27c7fc89a", 
    "dest": "/tmp/slmpuppet-v1.1.0.tar.bz2", 
    "diff": {
        "after": {
            "path": "/tmp/slmpuppet-v1.1.0.tar.bz2"
        }, 
        "before": {
            "path": "/tmp/slmpuppet-v1.1.0.tar.bz2"
        }
    }, 
    "gid": 0, 
    "group": "root", 
    "invocation": {
        "module_args": {
            "attributes": null, 
            "backup": null, 
            "content": null, 
            "delimiter": null, 
            "dest": "/tmp/", 
            "diff_peek": null, 
            "directory_mode": null, 
            "follow": false, 
            "force": false, 
            "group": null, 
            "mode": null, 
            "original_basename": "slmpuppet-v1.1.0.tar.bz2", 
            "owner": null, 
            "path": "/tmp/slmpuppet-v1.1.0.tar.bz2", 
            "recurse": false, 
            "regexp": null, 
            "remote_src": null, 
            "selevel": null, 
            "serole": null, 
            "setype": null, 
            "seuser": null, 
            "src": "slmpuppet-v1.1.0.tar.bz2", 
            "state": null, 
            "unsafe_writes": null, 
            "validate": null
        }
    }, 
    "mode": "0644", 
    "owner": "root", 
    "path": "/tmp/slmpuppet-v1.1.0.tar.bz2", 
    "secontext": "unconfined_u:object_r:admin_home_t:s0", 
    "size": 71162287, 
    "state": "file", 
    "uid": 0
}
2017-08-18 21:46:31,796 p=18304 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:46:31,796 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:60
2017-08-18 21:46:31,823 p=18304 u=root |  Using module file /usr/lib/python2.7/site-packages/ansible/modules/commands/command.py
2017-08-18 21:46:31,965 p=18304 u=root |  changed: [localhost] => {
    "changed": true, 
    "cmd": "docker ps -a | grep slmpuppet:v1.0.0 | awk '{print $1}'", 
    "delta": "0:00:00.044190", 
    "end": "2017-08-18 21:46:31.950924", 
    "invocation": {
        "module_args": {
            "_raw_params": "docker ps -a | grep slmpuppet:v1.0.0 | awk '{print $1}'", 
            "_uses_shell": true, 
            "chdir": null, 
            "creates": null, 
            "executable": null, 
            "removes": null, 
            "warn": true
        }
    }, 
    "rc": 0, 
    "start": "2017-08-18 21:46:31.906734", 
    "stderr": "", 
    "stderr_lines": [], 
    "stdout": "5936ae9d363c", 
    "stdout_lines": [
        "5936ae9d363c"
    ]
}
2017-08-18 21:46:31,970 p=18304 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:46:31,970 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:64
2017-08-18 21:46:31,995 p=18304 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:46:32,001 p=18304 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:32,001 p=18304 u=root |  task path: /opt/autodeploy/projects/container_upg/site.yml:68
2017-08-18 21:46:32,022 p=18304 u=root |  fatal: [localhost]: FAILED! => {
    "failed": true, 
    "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor=image_id.stdout --format '{{.Names}}'"
}
2017-08-18 21:46:32,023 p=18304 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:46:32,023 p=18304 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:46:32,023 p=18304 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:46:50,446 p=18433 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:46:50,448 p=18433 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:46:50,565 p=18433 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:46:50,618 p=18433 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:46:51,135 p=18433 u=root |  ok: [localhost]
2017-08-18 21:46:51,145 p=18433 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:46:51,365 p=18433 u=root |  changed: [localhost]
2017-08-18 21:46:51,370 p=18433 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:46:51,394 p=18433 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005970", 
        "end": "2017-08-18 21:46:51.347876", 
        "rc": 0, 
        "start": "2017-08-18 21:46:51.341906", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:46:51,400 p=18433 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:51,587 p=18433 u=root |  changed: [localhost]
2017-08-18 21:46:51,591 p=18433 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:46:51,610 p=18433 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:46:51,619 p=18433 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:46:51,846 p=18433 u=root |  changed: [localhost]
2017-08-18 21:46:51,850 p=18433 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:46:51,871 p=18433 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:46:51,878 p=18433 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:46:52,486 p=18433 u=root |  ok: [localhost]
2017-08-18 21:46:52,491 p=18433 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:46:52,657 p=18433 u=root |  changed: [localhost]
2017-08-18 21:46:52,661 p=18433 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:46:52,683 p=18433 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:46:52,688 p=18433 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:46:52,706 p=18433 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor=image_id.stdout --format '{{.Names}}'"}
2017-08-18 21:46:52,707 p=18433 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:46:52,707 p=18433 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:46:52,708 p=18433 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:47:36,171 p=18567 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:47:36,173 p=18567 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:47:36,298 p=18567 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:47:36,352 p=18567 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:47:36,901 p=18567 u=root |  ok: [localhost]
2017-08-18 21:47:36,906 p=18567 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:47:37,114 p=18567 u=root |  changed: [localhost]
2017-08-18 21:47:37,120 p=18567 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:47:37,144 p=18567 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006149", 
        "end": "2017-08-18 21:47:37.098798", 
        "rc": 0, 
        "start": "2017-08-18 21:47:37.092649", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:47:37,149 p=18567 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:47:37,338 p=18567 u=root |  changed: [localhost]
2017-08-18 21:47:37,343 p=18567 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:47:37,364 p=18567 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:47:37,369 p=18567 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:47:37,568 p=18567 u=root |  changed: [localhost]
2017-08-18 21:47:37,572 p=18567 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:47:37,594 p=18567 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:47:37,600 p=18567 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:47:38,214 p=18567 u=root |  ok: [localhost]
2017-08-18 21:47:38,219 p=18567 u=root |  TASK [Get the container id using the slmpuppet image] *********************************************************************************************************************************
2017-08-18 21:47:38,389 p=18567 u=root |  changed: [localhost]
2017-08-18 21:47:38,393 p=18567 u=root |  TASK [Show the container_id] **********************************************************************************************************************************************************
2017-08-18 21:47:38,417 p=18567 u=root |  ok: [localhost] => {
    "container_id.stdout": "5936ae9d363c"
}
2017-08-18 21:47:38,423 p=18567 u=root |  TASK [Get the container name using the slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:47:38,441 p=18567 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "template error while templating string: unexpected '.'. String: docker ps -a --filter ancestor=\"image_id.stdout\" --format '{{.Names}}'"}
2017-08-18 21:47:38,442 p=18567 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-18 21:47:38,442 p=18567 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:47:38,442 p=18567 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=1   
2017-08-18 21:52:36,742 p=18698 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-18 21:52:36,744 p=18698 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-18 21:52:36,867 p=18698 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-18 21:52:36,927 p=18698 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-18 21:52:37,469 p=18698 u=root |  ok: [localhost]
2017-08-18 21:52:37,475 p=18698 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-18 21:52:37,684 p=18698 u=root |  changed: [localhost]
2017-08-18 21:52:37,689 p=18698 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-18 21:52:37,713 p=18698 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006907", 
        "end": "2017-08-18 21:52:37.668897", 
        "rc": 0, 
        "start": "2017-08-18 21:52:37.661990", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-18 21:52:37,722 p=18698 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-18 21:52:37,915 p=18698 u=root |  changed: [localhost]
2017-08-18 21:52:37,919 p=18698 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-18 21:52:37,938 p=18698 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-18 21:52:37,943 p=18698 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-18 21:52:38,132 p=18698 u=root |  changed: [localhost]
2017-08-18 21:52:38,136 p=18698 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-18 21:52:38,159 p=18698 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-18 21:52:38,165 p=18698 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-18 21:52:38,783 p=18698 u=root |  ok: [localhost]
2017-08-18 21:52:38,788 p=18698 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-18 21:52:40,868 p=18698 u=root |  changed: [localhost]
2017-08-18 21:52:40,872 p=18698 u=root |  TASK [Remove existing image if versions dont match (force rebuild)] *******************************************************************************************************************
2017-08-18 21:52:41,302 p=18698 u=root |  ok: [localhost]
2017-08-18 21:52:41,303 p=18698 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-18 21:52:41,303 p=18698 u=root |  localhost                  : ok=10   changed=4    unreachable=0    failed=0   
2017-08-20 00:13:20,393 p=23264 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:13:20,394 p=23264 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:13:20,408 p=23264 u=root |  ERROR! Syntax Error while loading YAML.


The error appears to have been in '/opt/autodeploy/projects/container_upg/test.yml': line 20, column 16, but may
be elsewhere in the file depending on the exact syntax problem.

The offending line appears to be:

      docker_image_facts:
        name: {{ image }}
               ^ here
We could be wrong, but this one looks like it might be an issue with
missing quotes.  Always quote template expression brackets when they
start a value. For instance:

    with_items:
      - {{ foo }}

Should be written as:

    with_items:
      - "{{ foo }}"

2017-08-20 00:13:34,005 p=23273 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:13:34,007 p=23273 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:13:34,155 p=23273 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:13:34,227 p=23273 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:13:34,822 p=23273 u=root |  ok: [localhost]
2017-08-20 00:13:34,827 p=23273 u=root |  TASK [Get slmansible facts with Ansible docker_image_facts module] ********************************************************************************************************************
2017-08-20 00:13:35,180 p=23273 u=root |  ok: [localhost]
2017-08-20 00:13:35,186 p=23273 u=root |  TASK [Show slmansible image facts] ****************************************************************************************************************************************************
2017-08-20 00:13:35,219 p=23273 u=root |  ok: [localhost] => {
    "slmansible_images": {
        "changed": false, 
        "images": [
            {
                "Architecture": "amd64", 
                "Author": "Graham Bevan \"gbevan@csc.com\"", 
                "Comment": "", 
                "Config": {
                    "ArgsEscaped": true, 
                    "AttachStderr": false, 
                    "AttachStdin": false, 
                    "AttachStdout": false, 
                    "Cmd": null, 
                    "Domainname": "", 
                    "Entrypoint": [
                        "/bin/bash", 
                        "/start-image.sh"
                    ], 
                    "Env": [
                        "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                        "SLMBRANCH=master", 
                        "SLMNAMESPACE=Automation", 
                        "BIGFIXBRANCH=master", 
                        "BIGFIXNAMESPACE=Automation", 
                        "FLEXAGENTBRANCH=master", 
                        "FLEXAGENTNAMESPACE=Automation"
                    ], 
                    "ExposedPorts": {
                        "22/tcp": {}
                    }, 
                    "Hostname": "a9678380ab81", 
                    "Image": "sha256:94983653e8db8160ca2ca02501ba41613b7c24b02e71f8ba2f38c04092196f6d", 
                    "Labels": {}, 
                    "OnBuild": [], 
                    "OpenStdin": false, 
                    "StdinOnce": false, 
                    "Tty": false, 
                    "User": "", 
                    "Volumes": null, 
                    "WorkingDir": ""
                }, 
                "Container": "7b0cbf7fcc0f595f3d9f9b2e6802582a486b47adb1c4f42081189e97f77ec714", 
                "ContainerConfig": {
                    "ArgsEscaped": true, 
                    "AttachStderr": false, 
                    "AttachStdin": false, 
                    "AttachStdout": false, 
                    "Cmd": [
                        "/bin/sh", 
                        "-c", 
                        "#(nop) ENTRYPOINT &{[\"/bin/bash\" \"/start-image.sh\"]}"
                    ], 
                    "Domainname": "", 
                    "Entrypoint": [
                        "/bin/bash", 
                        "/start-image.sh"
                    ], 
                    "Env": [
                        "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin", 
                        "SLMBRANCH=master", 
                        "SLMNAMESPACE=Automation", 
                        "BIGFIXBRANCH=master", 
                        "BIGFIXNAMESPACE=Automation", 
                        "FLEXAGENTBRANCH=master", 
                        "FLEXAGENTNAMESPACE=Automation"
                    ], 
                    "ExposedPorts": {
                        "22/tcp": {}
                    }, 
                    "Hostname": "a9678380ab81", 
                    "Image": "sha256:94983653e8db8160ca2ca02501ba41613b7c24b02e71f8ba2f38c04092196f6d", 
                    "Labels": {}, 
                    "OnBuild": [], 
                    "OpenStdin": false, 
                    "StdinOnce": false, 
                    "Tty": false, 
                    "User": "", 
                    "Volumes": null, 
                    "WorkingDir": ""
                }, 
                "Created": "2017-08-08T17:48:24.318653598Z", 
                "DockerVersion": "1.10.3", 
                "GraphDriver": {
                    "Data": {
                        "DeviceId": "147", 
                        "DeviceName": "docker-253:0-260130-3317159f7424e1a5a9f08289c1ba37fcbf8ae85bbcb748653ec6eaf0b23c1fc4", 
                        "DeviceSize": "107374182400"
                    }, 
                    "Name": "devicemapper"
                }, 
                "Id": "sha256:7abe1d37ae7dcb8431d58bed6181775686b420b26e248b0b3f7aa4b388602334", 
                "Os": "linux", 
                "Parent": "sha256:94983653e8db8160ca2ca02501ba41613b7c24b02e71f8ba2f38c04092196f6d", 
                "RepoDigests": [], 
                "RepoTags": [
                    "slmansible:latest"
                ], 
                "Size": 582100813, 
                "VirtualSize": 582100813
            }
        ]
    }
}
2017-08-20 00:13:35,221 p=23273 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:13:35,221 p=23273 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-20 00:16:05,277 p=23341 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:16:05,279 p=23341 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:16:05,406 p=23341 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:16:05,460 p=23341 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:16:05,978 p=23341 u=root |  ok: [localhost]
2017-08-20 00:16:05,983 p=23341 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:16:06,178 p=23341 u=root |  changed: [localhost]
2017-08-20 00:16:06,183 p=23341 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:16:06,213 p=23341 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.007050", 
        "end": "2017-08-20 00:16:06.161745", 
        "rc": 0, 
        "start": "2017-08-20 00:16:06.154695", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:16:06,218 p=23341 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:16:06,409 p=23341 u=root |  changed: [localhost]
2017-08-20 00:16:06,413 p=23341 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:16:06,433 p=23341 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-20 00:16:06,439 p=23341 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:16:06,631 p=23341 u=root |  changed: [localhost]
2017-08-20 00:16:06,635 p=23341 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:16:06,654 p=23341 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-20 00:16:06,659 p=23341 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:16:07,487 p=23341 u=root |  ok: [localhost]
2017-08-20 00:16:07,493 p=23341 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:16:09,370 p=23341 u=root |  changed: [localhost]
2017-08-20 00:16:09,376 p=23341 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:16:09,550 p=23341 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker rmi image_id.stdout", "delta": "0:00:00.046332", "end": "2017-08-20 00:16:09.532826", "failed": true, "rc": 1, "start": "2017-08-20 00:16:09.486494", "stderr": "Failed to remove image (image_id.stdout): Error response from daemon: No such image: image_id.stdout:latest", "stderr_lines": ["Failed to remove image (image_id.stdout): Error response from daemon: No such image: image_id.stdout:latest"], "stdout": "", "stdout_lines": []}
2017-08-20 00:16:09,552 p=23341 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-20 00:16:09,552 p=23341 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:16:09,552 p=23341 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=1   
2017-08-20 00:19:18,839 p=23510 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:19:18,841 p=23510 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:19:18,969 p=23510 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:19:19,028 p=23510 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:19:19,556 p=23510 u=root |  ok: [localhost]
2017-08-20 00:19:19,560 p=23510 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:19:19,755 p=23510 u=root |  changed: [localhost]
2017-08-20 00:19:19,760 p=23510 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:19:19,790 p=23510 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006316", 
        "end": "2017-08-20 00:19:19.740926", 
        "rc": 0, 
        "start": "2017-08-20 00:19:19.734610", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:19:19,795 p=23510 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:19:19,981 p=23510 u=root |  changed: [localhost]
2017-08-20 00:19:19,985 p=23510 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:19:20,005 p=23510 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-20 00:19:20,010 p=23510 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:19:20,192 p=23510 u=root |  changed: [localhost]
2017-08-20 00:19:20,197 p=23510 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:19:20,224 p=23510 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-20 00:19:20,229 p=23510 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:19:20,827 p=23510 u=root |  ok: [localhost]
2017-08-20 00:19:20,833 p=23510 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:19:20,999 p=23510 u=root |  changed: [localhost]
2017-08-20 00:19:21,004 p=23510 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:19:21,168 p=23510 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker rmi image_id.stdout", "delta": "0:00:00.044780", "end": "2017-08-20 00:19:21.151526", "failed": true, "rc": 1, "start": "2017-08-20 00:19:21.106746", "stderr": "Failed to remove image (image_id.stdout): Error response from daemon: No such image: image_id.stdout:latest", "stderr_lines": ["Failed to remove image (image_id.stdout): Error response from daemon: No such image: image_id.stdout:latest"], "stdout": "", "stdout_lines": []}
2017-08-20 00:19:21,170 p=23510 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-20 00:19:21,170 p=23510 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:19:21,170 p=23510 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=1   
2017-08-20 00:19:50,269 p=23645 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:19:50,271 p=23645 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:19:50,390 p=23645 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:19:50,449 p=23645 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:19:50,968 p=23645 u=root |  ok: [localhost]
2017-08-20 00:19:50,974 p=23645 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:19:51,183 p=23645 u=root |  changed: [localhost]
2017-08-20 00:19:51,189 p=23645 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:19:51,212 p=23645 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006240", 
        "end": "2017-08-20 00:19:51.164724", 
        "rc": 0, 
        "start": "2017-08-20 00:19:51.158484", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:19:51,219 p=23645 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:19:51,408 p=23645 u=root |  changed: [localhost]
2017-08-20 00:19:51,412 p=23645 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:19:51,434 p=23645 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-20 00:19:51,440 p=23645 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:19:51,648 p=23645 u=root |  changed: [localhost]
2017-08-20 00:19:51,653 p=23645 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:19:51,680 p=23645 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-20 00:19:51,685 p=23645 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:19:52,291 p=23645 u=root |  ok: [localhost]
2017-08-20 00:19:52,296 p=23645 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:19:52,460 p=23645 u=root |  changed: [localhost]
2017-08-20 00:19:52,465 p=23645 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:19:54,202 p=23645 u=root |  changed: [localhost]
2017-08-20 00:19:54,204 p=23645 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:19:54,204 p=23645 u=root |  localhost                  : ok=10   changed=5    unreachable=0    failed=0   
2017-08-20 00:26:50,750 p=23819 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:26:50,752 p=23819 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:26:50,891 p=23819 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:26:50,954 p=23819 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:26:51,496 p=23819 u=root |  ok: [localhost]
2017-08-20 00:26:51,501 p=23819 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:26:51,708 p=23819 u=root |  changed: [localhost]
2017-08-20 00:26:51,714 p=23819 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:26:51,738 p=23819 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006645", 
        "end": "2017-08-20 00:26:51.692191", 
        "rc": 0, 
        "start": "2017-08-20 00:26:51.685546", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:26:51,743 p=23819 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:26:51,937 p=23819 u=root |  changed: [localhost]
2017-08-20 00:26:51,941 p=23819 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:26:51,961 p=23819 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-20 00:26:51,966 p=23819 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:26:52,162 p=23819 u=root |  changed: [localhost]
2017-08-20 00:26:52,168 p=23819 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:26:52,189 p=23819 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-20 00:26:52,195 p=23819 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:26:52,817 p=23819 u=root |  ok: [localhost]
2017-08-20 00:26:52,823 p=23819 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:26:52,994 p=23819 u=root |  changed: [localhost]
2017-08-20 00:26:52,999 p=23819 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:26:53,162 p=23819 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker rmi ", "delta": "0:00:00.037030", "end": "2017-08-20 00:26:53.145418", "failed": true, "rc": 1, "start": "2017-08-20 00:26:53.108388", "stderr": "docker: \"rmi\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rmi --help'.\n\nUsage:\tdocker rmi [OPTIONS] IMAGE [IMAGE...]\n\nRemove one or more images", "stderr_lines": ["docker: \"rmi\" requires a minimum of 1 argument.", "See '/usr/bin/docker-current rmi --help'.", "", "Usage:\tdocker rmi [OPTIONS] IMAGE [IMAGE...]", "", "Remove one or more images"], "stdout": "", "stdout_lines": []}
2017-08-20 00:26:53,163 p=23819 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-20 00:26:53,163 p=23819 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:26:53,164 p=23819 u=root |  localhost                  : ok=9    changed=4    unreachable=0    failed=1   
2017-08-20 00:27:25,477 p=23954 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:27:25,478 p=23954 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:27:25,596 p=23954 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:27:25,650 p=23954 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:27:26,166 p=23954 u=root |  ok: [localhost]
2017-08-20 00:27:26,171 p=23954 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:27:26,390 p=23954 u=root |  changed: [localhost]
2017-08-20 00:27:26,397 p=23954 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:27:26,423 p=23954 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006601", 
        "end": "2017-08-20 00:27:26.373319", 
        "rc": 0, 
        "start": "2017-08-20 00:27:26.366718", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:27:26,427 p=23954 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:27:26,622 p=23954 u=root |  changed: [localhost]
2017-08-20 00:27:26,626 p=23954 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:27:26,647 p=23954 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-20 00:27:26,654 p=23954 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:27:26,859 p=23954 u=root |  changed: [localhost]
2017-08-20 00:27:26,866 p=23954 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:27:26,888 p=23954 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-20 00:27:26,894 p=23954 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:27:27,500 p=23954 u=root |  ok: [localhost]
2017-08-20 00:27:27,505 p=23954 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:27:27,667 p=23954 u=root |  changed: [localhost]
2017-08-20 00:27:27,672 p=23954 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:27:27,831 p=23954 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "docker rmi ", "delta": "0:00:00.036939", "end": "2017-08-20 00:27:27.815716", "failed": true, "rc": 1, "start": "2017-08-20 00:27:27.778777", "stderr": "docker: \"rmi\" requires a minimum of 1 argument.\nSee '/usr/bin/docker-current rmi --help'.\n\nUsage:\tdocker rmi [OPTIONS] IMAGE [IMAGE...]\n\nRemove one or more images", "stderr_lines": ["docker: \"rmi\" requires a minimum of 1 argument.", "See '/usr/bin/docker-current rmi --help'.", "", "Usage:\tdocker rmi [OPTIONS] IMAGE [IMAGE...]", "", "Remove one or more images"], "stdout": "", "stdout_lines": []}
2017-08-20 00:27:27,831 p=23954 u=root |  ...ignoring
2017-08-20 00:27:27,839 p=23954 u=root |  TASK [Load the new slmpuppet image from tar.bz2 file] *********************************************************************************************************************************
2017-08-20 00:27:43,529 p=23954 u=root |  changed: [localhost]
2017-08-20 00:27:43,531 p=23954 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:27:43,531 p=23954 u=root |  localhost                  : ok=11   changed=6    unreachable=0    failed=0   
2017-08-20 00:35:15,782 p=24320 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:35:15,784 p=24320 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:35:15,910 p=24320 u=root |  PLAY [Wait] ***************************************************************************************************************************************************************************
2017-08-20 00:35:15,973 p=24320 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:35:16,512 p=24320 u=root |  ok: [localhost]
2017-08-20 00:35:16,516 p=24320 u=root |  TASK [Check for wait] *****************************************************************************************************************************************************************
2017-08-20 00:35:16,708 p=24320 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003660", "end": "2017-08-20 00:35:16.693836", "failed": true, "rc": 1, "start": "2017-08-20 00:35:16.690176", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stderr_lines": ["error: garbage option", "", "Usage:", " ps [options]", "", " Try 'ps --help <simple|list|output|threads|misc|all>'", "  or 'ps --help <s|l|o|t|m|a>'", " for additional help text.", "", "For more details see ps(1)."], "stdout": "", "stdout_lines": []}
2017-08-20 00:35:16,708 p=24320 u=root |  ...ignoring
2017-08-20 00:35:16,712 p=24320 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 00:35:16,733 p=24320 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003660", 
        "end": "2017-08-20 00:35:16.693836", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-20 00:35:16.690176", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stderr_lines": [
            "error: garbage option", 
            "", 
            "Usage:", 
            " ps [options]", 
            "", 
            " Try 'ps --help <simple|list|output|threads|misc|all>'", 
            "  or 'ps --help <s|l|o|t|m|a>'", 
            " for additional help text.", 
            "", 
            "For more details see ps(1)."
        ], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 00:35:16,737 p=24320 u=root |  TASK [Wait] ***************************************************************************************************************************************************************************
2017-08-20 00:40:17,045 p=24320 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-20 00:40:17,046 p=24320 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-20 00:40:17,046 p=24320 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:40:17,047 p=24320 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-20 00:40:20,703 p=24399 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:40:20,704 p=24399 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:40:20,825 p=24399 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:40:20,885 p=24399 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:40:21,412 p=24399 u=root |  ok: [localhost]
2017-08-20 00:40:21,416 p=24399 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:40:21,429 p=24399 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "the field 'args' has an invalid value, which appears to include a variable that is undefined. The error was: 'upg_yml' is undefined\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/test.yml': line 18, column 5, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n  - name: Check for instance of Docker Container upgrade process\n    ^ here\n"}
2017-08-20 00:40:21,432 p=24399 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/test.retry

2017-08-20 00:40:21,432 p=24399 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:40:21,432 p=24399 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-20 00:40:50,685 p=24457 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:40:50,686 p=24457 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:40:50,796 p=24457 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:40:50,859 p=24457 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:40:51,379 p=24457 u=root |  ok: [localhost]
2017-08-20 00:40:51,387 p=24457 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:40:51,602 p=24457 u=root |  changed: [localhost]
2017-08-20 00:40:51,607 p=24457 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 00:40:51,629 p=24457 u=root |  ok: [localhost] => {
    "upg": {
        "changed": true, 
        "cmd": "ps -ef | grep site.yml", 
        "delta": "0:00:00.021298", 
        "end": "2017-08-20 00:40:51.586847", 
        "rc": 0, 
        "start": "2017-08-20 00:40:51.565549", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "root      24282  14666  0 00:33 pts/1    00:00:00 vi site.yml\nroot      24515  24514  0 00:40 pts/4    00:00:00 /bin/sh -c ps -ef | grep site.yml\nroot      24517  24515  0 00:40 pts/4    00:00:00 grep site.yml", 
        "stdout_lines": [
            "root      24282  14666  0 00:33 pts/1    00:00:00 vi site.yml", 
            "root      24515  24514  0 00:40 pts/4    00:00:00 /bin/sh -c ps -ef | grep site.yml", 
            "root      24517  24515  0 00:40 pts/4    00:00:00 grep site.yml"
        ]
    }
}
2017-08-20 00:40:51,630 p=24457 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:40:51,631 p=24457 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-20 00:42:26,658 p=24533 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:42:26,660 p=24533 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:42:26,776 p=24533 u=root |  PLAY [Wait] ***************************************************************************************************************************************************************************
2017-08-20 00:42:26,834 p=24533 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:42:27,390 p=24533 u=root |  ok: [localhost]
2017-08-20 00:42:27,394 p=24533 u=root |  TASK [Check for wait] *****************************************************************************************************************************************************************
2017-08-20 00:42:27,610 p=24533 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": ["ps", "-ef", "|", "grep", "wait"], "delta": "0:00:00.003584", "end": "2017-08-20 00:42:27.593926", "failed": true, "rc": 1, "start": "2017-08-20 00:42:27.590342", "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", "stderr_lines": ["error: garbage option", "", "Usage:", " ps [options]", "", " Try 'ps --help <simple|list|output|threads|misc|all>'", "  or 'ps --help <s|l|o|t|m|a>'", " for additional help text.", "", "For more details see ps(1)."], "stdout": "", "stdout_lines": []}
2017-08-20 00:42:27,610 p=24533 u=root |  ...ignoring
2017-08-20 00:42:27,614 p=24533 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 00:42:27,640 p=24533 u=root |  ok: [localhost] => {
    "wait_for": {
        "changed": true, 
        "cmd": [
            "ps", 
            "-ef", 
            "|", 
            "grep", 
            "wait"
        ], 
        "delta": "0:00:00.003584", 
        "end": "2017-08-20 00:42:27.593926", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-20 00:42:27.590342", 
        "stderr": "error: garbage option\n\nUsage:\n ps [options]\n\n Try 'ps --help <simple|list|output|threads|misc|all>'\n  or 'ps --help <s|l|o|t|m|a>'\n for additional help text.\n\nFor more details see ps(1).", 
        "stderr_lines": [
            "error: garbage option", 
            "", 
            "Usage:", 
            " ps [options]", 
            "", 
            " Try 'ps --help <simple|list|output|threads|misc|all>'", 
            "  or 'ps --help <s|l|o|t|m|a>'", 
            " for additional help text.", 
            "", 
            "For more details see ps(1)."
        ], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 00:42:27,649 p=24533 u=root |  TASK [Wait] ***************************************************************************************************************************************************************************
2017-08-20 00:43:37,224 p=24607 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:43:37,226 p=24607 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:43:37,344 p=24607 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:43:37,400 p=24607 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:43:37,937 p=24607 u=root |  ok: [localhost]
2017-08-20 00:43:37,942 p=24607 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:43:38,170 p=24607 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ps -ef | grep site.yml | egrep -v \"grep\"", "delta": "0:00:00.022586", "end": "2017-08-20 00:43:38.153400", "failed": true, "rc": 1, "start": "2017-08-20 00:43:38.130814", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-20 00:43:38,171 p=24607 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/test.retry

2017-08-20 00:43:38,171 p=24607 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:43:38,172 p=24607 u=root |  localhost                  : ok=1    changed=0    unreachable=0    failed=1   
2017-08-20 00:44:22,711 p=24673 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:44:22,713 p=24673 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:44:22,832 p=24673 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:44:22,884 p=24673 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:44:23,406 p=24673 u=root |  ok: [localhost]
2017-08-20 00:44:23,410 p=24673 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:44:23,630 p=24673 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ps -ef | grep site.yml | egrep -v \"grep\"", "delta": "0:00:00.021941", "end": "2017-08-20 00:44:23.614621", "failed": true, "rc": 1, "start": "2017-08-20 00:44:23.592680", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-20 00:44:23,630 p=24673 u=root |  ...ignoring
2017-08-20 00:44:23,635 p=24673 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 00:44:23,663 p=24673 u=root |  ok: [localhost] => {
    "upg": {
        "changed": true, 
        "cmd": "ps -ef | grep site.yml | egrep -v \"grep\"", 
        "delta": "0:00:00.021941", 
        "end": "2017-08-20 00:44:23.614621", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-20 00:44:23.592680", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 00:44:23,665 p=24673 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:44:23,666 p=24673 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-20 00:44:47,105 p=24741 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:44:47,107 p=24741 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:44:47,217 p=24741 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:44:47,284 p=24741 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:44:47,796 p=24741 u=root |  ok: [localhost]
2017-08-20 00:44:47,804 p=24741 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:44:48,024 p=24741 u=root |  changed: [localhost]
2017-08-20 00:44:48,029 p=24741 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 00:44:48,055 p=24741 u=root |  ok: [localhost] => {
    "upg": {
        "changed": true, 
        "cmd": "ps -ef | grep wait.yml | egrep -v \"grep\"", 
        "delta": "0:00:00.021128", 
        "end": "2017-08-20 00:44:48.008015", 
        "rc": 0, 
        "start": "2017-08-20 00:44:47.986887", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "root      24533  15519  9 00:42 pts/0    00:00:13 /usr/bin/python2 /usr/bin/ansible-playbook wait.yml\nroot      24596  24533  0 00:42 pts/0    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook wait.yml", 
        "stdout_lines": [
            "root      24533  15519  9 00:42 pts/0    00:00:13 /usr/bin/python2 /usr/bin/ansible-playbook wait.yml", 
            "root      24596  24533  0 00:42 pts/0    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook wait.yml"
        ]
    }
}
2017-08-20 00:44:48,059 p=24741 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:44:48,059 p=24741 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=0   
2017-08-20 00:47:27,977 p=24533 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "elapsed": 300, "failed": true, "msg": "Timeout when waiting for 127.0.0.1:8000"}
2017-08-20 00:47:27,978 p=24533 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/wait.retry

2017-08-20 00:47:27,978 p=24533 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:47:27,978 p=24533 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-20 00:48:17,216 p=24812 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:48:17,217 p=24812 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:48:17,349 p=24812 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:48:17,406 p=24812 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:48:17,927 p=24812 u=root |  ok: [localhost]
2017-08-20 00:48:17,931 p=24812 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:48:18,135 p=24812 u=root |  changed: [localhost]
2017-08-20 00:48:18,140 p=24812 u=root |  TASK [Show container upgrade process result] ******************************************************************************************************************************************
2017-08-20 00:48:18,160 p=24812 u=root |  ok: [localhost] => {
    "upg": {
        "changed": true, 
        "cmd": "ps -ef | grep site.yml | egrep -v \"grep\"", 
        "delta": "0:00:00.021624", 
        "end": "2017-08-20 00:48:18.121450", 
        "rc": 0, 
        "start": "2017-08-20 00:48:18.099826", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "root      24812  14666 63 00:48 pts/1    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook site.yml\nroot      24866  24812  0 00:48 pts/1    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook site.yml", 
        "stdout_lines": [
            "root      24812  14666 63 00:48 pts/1    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook site.yml", 
            "root      24866  24812  0 00:48 pts/1    00:00:00 /usr/bin/python2 /usr/bin/ansible-playbook site.yml"
        ]
    }
}
2017-08-20 00:48:18,168 p=24812 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:48:18,189 p=24812 u=root |  fatal: [localhost]: FAILED! => {"failed": true, "msg": "The conditional check 'upg.failed' failed. The error was: error while evaluating conditional (upg.failed): 'dict object' has no attribute 'failed'\n\nThe error appears to have been in '/opt/autodeploy/projects/container_upg/site.yml': line 31, column 7, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n    - name: Get the image tag for new {{ image }} tar bzip file\n      ^ here\nWe could be wrong, but this one looks like it might be an issue with\nmissing quotes.  Always quote template expression brackets when they\nstart a value. For instance:\n\n    with_items:\n      - {{ foo }}\n\nShould be written as:\n\n    with_items:\n      - \"{{ foo }}\"\n"}
2017-08-20 00:48:18,191 p=24812 u=root |  	to retry, use: --limit @/opt/autodeploy/projects/container_upg/site.retry

2017-08-20 00:48:18,191 p=24812 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:48:18,191 p=24812 u=root |  localhost                  : ok=3    changed=1    unreachable=0    failed=1   
2017-08-20 00:53:04,689 p=24883 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 00:53:04,691 p=24883 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 00:53:04,825 p=24883 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 00:53:04,886 p=24883 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 00:53:05,408 p=24883 u=root |  ok: [localhost]
2017-08-20 00:53:05,412 p=24883 u=root |  TASK [Check for instance of Docker Container upgrade process] *************************************************************************************************************************
2017-08-20 00:53:05,633 p=24883 u=root |  fatal: [localhost]: FAILED! => {"changed": true, "cmd": "ps -ef | grep wait.yml | egrep -v \"grep\"", "delta": "0:00:00.023086", "end": "2017-08-20 00:53:05.616299", "failed": true, "rc": 1, "start": "2017-08-20 00:53:05.593213", "stderr": "", "stderr_lines": [], "stdout": "", "stdout_lines": []}
2017-08-20 00:53:05,633 p=24883 u=root |  ...ignoring
2017-08-20 00:53:05,638 p=24883 u=root |  TASK [Show container upgrade process result] ******************************************************************************************************************************************
2017-08-20 00:53:05,661 p=24883 u=root |  ok: [localhost] => {
    "upg": {
        "changed": true, 
        "cmd": "ps -ef | grep wait.yml | egrep -v \"grep\"", 
        "delta": "0:00:00.023086", 
        "end": "2017-08-20 00:53:05.616299", 
        "failed": true, 
        "rc": 1, 
        "start": "2017-08-20 00:53:05.593213", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 00:53:05,668 p=24883 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 00:53:05,798 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:05,805 p=24883 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 00:53:05,831 p=24883 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.005761", 
        "end": "2017-08-20 00:53:05.784177", 
        "rc": 0, 
        "start": "2017-08-20 00:53:05.778416", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 00:53:05,835 p=24883 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 00:53:06,030 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:06,034 p=24883 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 00:53:06,064 p=24883 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-20 00:53:06,069 p=24883 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 00:53:06,262 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:06,266 p=24883 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 00:53:06,291 p=24883 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-20 00:53:06,300 p=24883 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 00:53:06,966 p=24883 u=root |  ok: [localhost]
2017-08-20 00:53:06,971 p=24883 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 00:53:08,834 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:08,839 p=24883 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 00:53:10,515 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:10,520 p=24883 u=root |  TASK [Load the new slmpuppet image from tar.bz2 file] *********************************************************************************************************************************
2017-08-20 00:53:25,955 p=24883 u=root |  changed: [localhost]
2017-08-20 00:53:25,956 p=24883 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 00:53:25,956 p=24883 u=root |  localhost                  : ok=13   changed=7    unreachable=0    failed=0   
2017-08-20 05:18:33,879 p=25305 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 05:18:33,880 p=25305 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 05:18:34,013 p=25305 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 05:18:34,090 p=25305 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 05:18:34,744 p=25305 u=root |  ok: [localhost]
2017-08-20 05:18:34,748 p=25305 u=root |  TASK [Master CAM to Github DNS resolution test] ***************************************************************************************************************************************
2017-08-20 05:18:34,948 p=25305 u=root |  fatal: [localhost]: FAILED! => {"changed": false, "cmd": "nslookup github.com", "failed": true, "msg": "[Errno 2] No such file or directory", "rc": 2}
2017-08-20 05:18:34,949 p=25305 u=root |  ...ignoring
2017-08-20 05:18:34,953 p=25305 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 05:18:34,973 p=25305 u=root |  ok: [localhost] => {
    "github_dns": {
        "changed": false, 
        "cmd": "nslookup github.com", 
        "failed": true, 
        "msg": "[Errno 2] No such file or directory", 
        "rc": 2
    }
}
2017-08-20 05:18:34,975 p=25305 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 05:18:34,975 p=25305 u=root |  localhost                  : ok=3    changed=0    unreachable=0    failed=0   
2017-08-20 07:22:58,904 p=26297 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 07:22:58,905 p=26297 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 07:22:59,017 p=26297 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 07:22:59,073 p=26297 u=root |  TASK [Gathering Facts] ****************************************************************************************************************************************************************
2017-08-20 07:22:59,626 p=26297 u=root |  ok: [localhost]
2017-08-20 07:22:59,634 p=26297 u=root |  TASK [Get the image tag for new slmpuppet tar bzip file] ******************************************************************************************************************************
2017-08-20 07:22:59,837 p=26297 u=root |  changed: [localhost]
2017-08-20 07:22:59,842 p=26297 u=root |  TASK [Show the new slmpuppet tar bzip file tag] ***************************************************************************************************************************************
2017-08-20 07:22:59,864 p=26297 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep 'slmpuppet.*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006610", 
        "end": "2017-08-20 07:22:59.823055", 
        "rc": 0, 
        "start": "2017-08-20 07:22:59.816445", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "v1.1.0", 
        "stdout_lines": [
            "v1.1.0"
        ]
    }
}
2017-08-20 07:22:59,871 p=26297 u=root |  TASK [Get image name & tag for current slmpuppet image] *******************************************************************************************************************************
2017-08-20 07:23:00,068 p=26297 u=root |  changed: [localhost]
2017-08-20 07:23:00,073 p=26297 u=root |  TASK [Show the current image name & tag] **********************************************************************************************************************************************
2017-08-20 07:23:00,094 p=26297 u=root |  ok: [localhost] => {
    "image_tag.stdout": "slmpuppet:v1.0.0"
}
2017-08-20 07:23:00,099 p=26297 u=root |  TASK [Get image ID for current slmpuppet image] ***************************************************************************************************************************************
2017-08-20 07:23:00,282 p=26297 u=root |  changed: [localhost]
2017-08-20 07:23:00,287 p=26297 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 07:23:00,305 p=26297 u=root |  ok: [localhost] => {
    "image_id.stdout": "2a395f549ed5"
}
2017-08-20 07:23:00,310 p=26297 u=root |  TASK [Copy the new slmpuppet tar bzip file to /tmp] ***********************************************************************************************************************************
2017-08-20 07:23:01,184 p=26297 u=root |  ok: [localhost]
2017-08-20 07:23:01,190 p=26297 u=root |  TASK [Stop & remove the slmpuppet container] ******************************************************************************************************************************************
2017-08-20 07:23:01,346 p=26297 u=root |  changed: [localhost]
2017-08-20 07:23:01,351 p=26297 u=root |  TASK [Remove the existing slmpuppet image] ********************************************************************************************************************************************
2017-08-20 07:23:03,310 p=26297 u=root |  changed: [localhost]
2017-08-20 07:23:03,315 p=26297 u=root |  TASK [Load the new slmpuppet image from tar.bz2 file] *********************************************************************************************************************************
2017-08-20 07:23:20,515 p=26297 u=root |  changed: [localhost]
2017-08-20 07:23:20,516 p=26297 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 07:23:20,516 p=26297 u=root |  localhost                  : ok=11   changed=6    unreachable=0    failed=0   
2017-08-20 07:46:15,988 p=26526 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 07:46:15,989 p=26526 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 07:46:16,119 p=26526 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 07:46:16,184 p=26526 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-20 07:46:16,214 p=26526 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-20 07:46:16,218 p=26526 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-20 07:46:16,238 p=26526 u=root |  ok: [localhost]
2017-08-20 07:46:16,241 p=26526 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:46:16,265 p=26526 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-20 07:46:16,268 p=26526 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:46:16,294 p=26526 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-20 07:46:16,296 p=26526 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-20 07:46:16,318 p=26526 u=root |  ok: [localhost]
2017-08-20 07:46:16,320 p=26526 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:46:16,342 p=26526 u=root |  ok: [localhost] => {
    "dkr_image": "docker_images"
}
2017-08-20 07:46:16,346 p=26526 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-20 07:46:16,602 p=26526 u=root |  changed: [localhost]
2017-08-20 07:46:16,606 p=26526 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-20 07:46:16,628 p=26526 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.012054", 
        "end": "2017-08-20 07:46:16.585844", 
        "rc": 0, 
        "start": "2017-08-20 07:46:16.573790", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 07:46:16,632 p=26526 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-20 07:46:16,834 p=26526 u=root |  changed: [localhost]
2017-08-20 07:46:16,836 p=26526 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-20 07:46:16,856 p=26526 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-20 07:46:16,862 p=26526 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-20 07:46:17,054 p=26526 u=root |  changed: [localhost]
2017-08-20 07:46:17,056 p=26526 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 07:46:17,079 p=26526 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-20 07:46:17,086 p=26526 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-20 07:46:17,102 p=26526 u=root |  skipping: [localhost]
2017-08-20 07:46:17,103 p=26526 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 07:46:17,103 p=26526 u=root |  localhost                  : ok=12   changed=3    unreachable=0    failed=0   
2017-08-20 07:47:11,084 p=26594 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 07:47:11,085 p=26594 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 07:47:11,196 p=26594 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 07:47:11,254 p=26594 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-20 07:47:11,283 p=26594 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-20 07:47:11,288 p=26594 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-20 07:47:11,308 p=26594 u=root |  ok: [localhost]
2017-08-20 07:47:11,310 p=26594 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:47:11,338 p=26594 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-20 07:47:11,341 p=26594 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:47:11,368 p=26594 u=root |  ok: [localhost] => {
    "docker_images": "slmpuppet"
}
2017-08-20 07:47:11,370 p=26594 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-20 07:47:11,394 p=26594 u=root |  ok: [localhost]
2017-08-20 07:47:11,396 p=26594 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:47:11,423 p=26594 u=root |  ok: [localhost] => {
    "dkr_image": "docker_images"
}
2017-08-20 07:47:11,427 p=26594 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-20 07:47:11,634 p=26594 u=root |  changed: [localhost]
2017-08-20 07:47:11,638 p=26594 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-20 07:47:11,663 p=26594 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006636", 
        "end": "2017-08-20 07:47:11.615603", 
        "rc": 0, 
        "start": "2017-08-20 07:47:11.608967", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 07:47:11,667 p=26594 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-20 07:47:11,867 p=26594 u=root |  changed: [localhost]
2017-08-20 07:47:11,869 p=26594 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-20 07:47:11,889 p=26594 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-20 07:47:11,893 p=26594 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-20 07:47:12,101 p=26594 u=root |  changed: [localhost]
2017-08-20 07:47:12,103 p=26594 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 07:47:12,133 p=26594 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-20 07:47:12,139 p=26594 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-20 07:47:12,155 p=26594 u=root |  skipping: [localhost]
2017-08-20 07:47:12,156 p=26594 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 07:47:12,156 p=26594 u=root |  localhost                  : ok=12   changed=3    unreachable=0    failed=0   
2017-08-20 07:48:07,656 p=26661 u=root |   [WARNING]: Host file not found: /opt/autodeploy/projects/inventory/hosts.ini

2017-08-20 07:48:07,658 p=26661 u=root |   [WARNING]: provided hosts list is empty, only localhost is available

2017-08-20 07:48:07,770 p=26661 u=root |  PLAY [Upgrade CAM host Docker Containers] *********************************************************************************************************************************************
2017-08-20 07:48:07,830 p=26661 u=root |  TASK [include] ************************************************************************************************************************************************************************
2017-08-20 07:48:07,859 p=26661 u=root |  included: /opt/autodeploy/projects/container_upg/include_upg_image.yml for localhost
2017-08-20 07:48:07,863 p=26661 u=root |  TASK [Set directory variables] ********************************************************************************************************************************************************
2017-08-20 07:48:07,884 p=26661 u=root |  ok: [localhost]
2017-08-20 07:48:07,886 p=26661 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:48:07,905 p=26661 u=root |  ok: [localhost] => {
    "zip_dir": "/depot"
}
2017-08-20 07:48:07,908 p=26661 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:48:07,941 p=26661 u=root |  ok: [localhost] => {
    "docker_images": [
        "slmpuppet"
    ]
}
2017-08-20 07:48:07,943 p=26661 u=root |  TASK [set_fact] ***********************************************************************************************************************************************************************
2017-08-20 07:48:07,974 p=26661 u=root |  ok: [localhost]
2017-08-20 07:48:07,976 p=26661 u=root |  TASK [debug] **************************************************************************************************************************************************************************
2017-08-20 07:48:07,999 p=26661 u=root |  ok: [localhost] => {
    "dkr_image": "docker_images"
}
2017-08-20 07:48:08,003 p=26661 u=root |  TASK [Get the image tag for new docker_images tar bzip file] **************************************************************************************************************************
2017-08-20 07:48:08,211 p=26661 u=root |  changed: [localhost]
2017-08-20 07:48:08,214 p=26661 u=root |  TASK [Show the new docker_images tar bzip file tag] ***********************************************************************************************************************************
2017-08-20 07:48:08,240 p=26661 u=root |  ok: [localhost] => {
    "tar_tag": {
        "changed": true, 
        "cmd": "ls //depot | grep '\"docker_images\".*.tar.bz2' | awk -F'[-.]' '{print $2 \".\" $3 \".\" $4}'", 
        "delta": "0:00:00.006524", 
        "end": "2017-08-20 07:48:08.191678", 
        "rc": 0, 
        "start": "2017-08-20 07:48:08.185154", 
        "stderr": "", 
        "stderr_lines": [], 
        "stdout": "", 
        "stdout_lines": []
    }
}
2017-08-20 07:48:08,244 p=26661 u=root |  TASK [Get image name & tag for current docker_images image] ***************************************************************************************************************************
2017-08-20 07:48:08,433 p=26661 u=root |  changed: [localhost]
2017-08-20 07:48:08,435 p=26661 u=root |  TASK [Show the current image tag] *****************************************************************************************************************************************************
2017-08-20 07:48:08,455 p=26661 u=root |  ok: [localhost] => {
    "image_tag.stdout": ""
}
2017-08-20 07:48:08,459 p=26661 u=root |  TASK [Get image ID for current docker_images image] ***********************************************************************************************************************************
2017-08-20 07:48:08,646 p=26661 u=root |  changed: [localhost]
2017-08-20 07:48:08,648 p=26661 u=root |  TASK [Show the current image id] ******************************************************************************************************************************************************
2017-08-20 07:48:08,675 p=26661 u=root |  ok: [localhost] => {
    "image_id.stdout": ""
}
2017-08-20 07:48:08,679 p=26661 u=root |  TASK [Copy the new docker_images tar bzip file to /tmp] *******************************************************************************************************************************
2017-08-20 07:48:08,700 p=26661 u=root |  skipping: [localhost]
2017-08-20 07:48:08,704 p=26661 u=root |  PLAY RECAP ****************************************************************************************************************************************************************************
2017-08-20 07:48:08,704 p=26661 u=root |  localhost                  : ok=12   changed=3    unreachable=0    failed=0   
